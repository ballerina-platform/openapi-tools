/*
 *  Copyright (c) 2024, WSO2 LLC. (http://www.wso2.org).
 *
 *  WSO2 LLC. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */

plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.spotbugs'
    id 'jacoco'
}

apply from: "$rootDir/gradle/javaProject.gradle"

description = "OpenAPI Tooling - OpenAPI generated client native utils"

dependencies {
    implementation "org.ballerinalang:ballerina-runtime"
}

checkstyle {
    toolVersion '10.12.0'
    configFile rootProject.file("build-config/checkstyle/build/checkstyle.xml")
    configProperties = ["suppressionFile" : file("${rootDir}/build-config/checkstyle/build/suppressions.xml")]
}

def excludePattern = '**/module-info.java'
tasks.withType(Checkstyle) {
    exclude excludePattern
}

checkstyleMain.dependsOn(":checkstyle:downloadCheckstyleRuleFiles")
checkstyleTest.dependsOn(":checkstyle:downloadCheckstyleRuleFiles")

spotbugsMain {
    effort "max"
    reportLevel "low"
    reportsDir = file("$project.buildDir/reports/spotbugs")
    reports {
        html.enabled true
        text.enabled = true
    }
    def excludeFile = file('spotbugs-exclude.xml')
    if(excludeFile.exists()) {
        excludeFilter = excludeFile
    }
}

spotbugsTest {
    enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "io.ballerina.openapi"
            artifactId "client-native"
            version = project.clientNativeVersion.replace("-SNAPSHOT", "")
            artifact jar
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ballerina-platform/openapi-tools")
            credentials {
                username = System.getenv("packageUser")
                password = System.getenv("packagePAT")
            }
        }
        maven {
            name = "WSO2Nexus"
            if(project.clientNativeVersion.endsWith('-SNAPSHOT')) {
                url "https://maven.wso2.org/nexus/content/repositories/snapshots/"
            } else {
                url "https://maven.wso2.org/nexus/service/local/staging/deploy/maven2/"
            }
            credentials {
                username System.getenv("NEXUS_USERNAME")
                password System.getenv("NEXUS_PASSWORD")
            }
        }
    }
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
