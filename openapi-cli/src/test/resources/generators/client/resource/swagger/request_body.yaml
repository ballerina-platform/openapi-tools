openapi: 3.0.0
info:
  title: refComponent
  description: refComponent
  version: 1.0.0
servers:
  - url: http://petstore.{host}.io/v1
    description: The production API server
    variables:
      host:
        default: openapi
        description: this value is assigned by the service provider
  - url: https://{subdomain}.swagger.io:{port}/{basePath}
    description: The production API server
    variables:
      subdomain:
        default: petstore
        description: this value is assigned by the service provider
      port:
        enum:
          - '8443'
          - '443'
        default: '443'
      basePath:
        default: v2
paths:
  /path01:
    post:
      operationId: postUser
      summary: 01 Request body with reference.
      responses:
        200:
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
    put:
      summary: 02 Example for rb has inline requestbody.
      operationId: updateUser
      responses:
        200:
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - userName
              properties:
                userName:
                  type: string
                firstName:
                  type: string
  /path02:
    post:
      summary: 03 Request body with record reference.
      operationId: postNewUser
      responses:
        200:
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/User"
    put:
      operationId: updateNewUser
      summary: 04 Example for rb has inline requestbody.
      responses:
        200:
          description: OK
      requestBody:
        $ref: "#/components/requestBodies/PetBody"

  /path03:
    post:
      operationId: postXMLUser
      summary: 05 Example for rb has array inline requestbody.
      responses:
        200:
          description: OK
      requestBody:
        content:
          application/xml:
            schema:
              type: object
              required:
                - userName
              properties:
                userName:
                  type: string
                firstName:
                  type: string
    put:
      operationId: updateXMLUser
      summary: 06 Example for rb has array inline requestbody.
      responses:
        200:
          description: OK
      requestBody:
        content:
          application/xml:
            schema:
              required:
                - userName
              properties:
                userName:
                  type: string
                firstName:
                  type: string
  /path04:
    post:
      operationId: postXMLUserInLineArray
      summary: 07 Example for rb has array inline requestbody.
      responses:
        200:
          description: OK
      requestBody:
        content:
          application/xml:
            schema:
              type: array
              items:
                type: object
                required:
                  - userName
                properties:
                  id:
                    type: integer
                  userName:
                    type: string
                  firstName:
                    type: string
components:
  requestBodies:
    PetBody:
      description: A JSON object containing pet information
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
  schemas:
    User:
      type: object
      required:
        - userName
      properties:
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
