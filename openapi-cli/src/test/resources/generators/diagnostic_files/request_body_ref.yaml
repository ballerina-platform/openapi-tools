openapi: "3.0.0"
info:
  version: 1.0.0
  title: OpenApi Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.{host}.io/v1
    description: The production API server
    variables:
      host:
        default: openapi
        description: this value is assigned by the service provider
  - url: https://{subdomain}.swagger.io:{port}/{basePath}
    description: The production API server
    variables:
      subdomain:
        default: petstore
        description: this value is assigned by the service provider
      port:
        enum:
          - '8443'
          - '443'
        default: '443'
      basePath:
        default: v2
tags:
  - name: pets
    description: Pets Tag
  - name: list
    description: List Tag

paths:
  /pets:
    post:
      summary: Create a pet
      operationId: createPet
      tags:
        - pets
      requestBody:
        description: "Request to add a pet"
        $ref: "#/components/requestBodies/CreatedPet"
      responses:
        '200':
          description: Successful operation
  /my/pets:
    post:
      summary: Create a pet
      operationId: createMyPet
      tags:
        - pets
      requestBody:
        description: "Request to add a pet"
        $ref: "#/components/requestBodies/CreatedPetRef"
      responses:
        '200':
          description: Successful operation

components:
  requestBodies:
    CreatedPet:
      description: Return from creating a pet
      content:
        application/json:
          schema:
            type: object
            properties:
              petId:
                type: string
              createdDate:
                type: string
    CreatedPetRef:
      description: "Return from creating a pet"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Pet"
  schemas:
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        type:
          type: string
    Dog:
      allOf:
        - $ref: "#/components/schemas/Pet"
        - type: object
          properties:
            bark:
              type: boolean
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
