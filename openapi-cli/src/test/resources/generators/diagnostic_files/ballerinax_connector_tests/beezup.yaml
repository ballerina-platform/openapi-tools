openapi: 3.0.1
info:
  title: 'BeezUP Merchant API'
  x-ballerina-display:
    label: BeezUP Merchant
    iconPath: icon.png
  description: >-
    This is a generated connector for [BeezUP Merchant API
    v2.0](https://api-docs.beezup.com/swagger-ui/) OpenAPI
    specification.
    BeezUP Merchant API provides capability to read and write BeezUP data such as accounts, stores, product catalog, channel search etc.

  x-ballerina-init-description: >-
    The connector initialization requires setting the API credentials. 

    Create a [BeezUP account](www.beezup.com) and obtain tokens by following
    [this guide](https://api-docs.beezup.com/swagger-ui/).

  contact:
    email: help@beezup.com
  license:
    name: BeezUP
    url: https://www.beezup.com/
  version: '2.0'
  x-logo:
    url: https://avatars0.githubusercontent.com/u/25665430
    backgroundColor: '#FFFFFF'
externalDocs:
  description: Find the documentation for BeezUP's API here
  url: https://api-docs.beezup.com/
servers:
  - url: https://api.beezup.com/
security:
  - api_key: []
tags:
  - name: Public - Security - Security
    x-displayName: Security
  - name: Public - Channels - Public Channels
    x-displayName: Public Channels
  - name: Public - List of Values - LOV
    x-displayName: LOV
  - name: User - List of Values - LOV
    x-displayName: LOV
  - name: Customer - Global
    x-displayName: Global
  - name: Customer - Account
    x-displayName: Account
  - name: Customer - Security
    x-displayName: Security
  - name: Customer - Stores
    x-displayName: Stores
  - name: Customer - Shares
    x-displayName: Shares
  - name: Customer - Alerts
    x-displayName: Alerts
  - name: Customer - Rights
    x-displayName: Rights
  - name: Customer - Friends
    x-displayName: Friends
  - name: Customer - Contracts
    x-displayName: Contracts
  - name: Customer - Invoices
    x-displayName: Invoices
  - name: Catalogs - Auto
    x-displayName: Auto
  - name: Catalogs - Global
    x-displayName: Global
  - name: Catalogs - Importation Process
    x-displayName: Importation Process
  - name: Catalogs - Importation Catalog Info
    x-displayName: Importation Catalog Info
  - name: Catalogs - Catalog
    x-displayName: Catalog
  - name: Channels - Channels Global
    x-displayName: Channels Global
  - name: Channel Catalogs - Global
    x-displayName: Global
  - name: Channel Catalogs - Settings
    x-displayName: Settings
  - name: Channel Catalogs - Column Mappings
    x-displayName: Column Mappings
  - name: Channel Catalogs - Categories
    x-displayName: Categories
  - name: Channel Catalogs - Exclusion Filters
    x-displayName: Exclusion Filters
  - name: Channel Catalogs - Products
    x-displayName: Products
  - name: Channel Catalogs - Products Overrides
    x-displayName: Products Overrides
  - name: Channel Catalogs - Products Optimisation
    x-displayName: Products Optimisation
  - name: Channel Catalogs - Exportations
    x-displayName: Exportations
  - name: Marketplaces - Channel catalogs - Global
    x-displayName: Global
  - name: Marketplaces - Channel catalogs - Publications
    x-displayName: Publications
  - name: Marketplaces - Channel catalogs - Settings
    x-displayName: Settings
  - name: Marketplaces - Orders - Global
    x-displayName: Global
  - name: Marketplaces - Orders - AutoTransitions
    x-displayName: AutoTransitions
  - name: Marketplaces - Orders - List
    x-displayName: List
  - name: Marketplaces - Orders - Order
    x-displayName: Order
  - name: Marketplaces - Orders - Batches
    x-displayName: Batches
  - name: Marketplaces - Orders - Exports
    x-displayName: Exports
  - name: Marketplaces - Orders V3 - Global
    x-displayName: Global
  - name: Marketplaces - Orders V3 - List
    x-displayName: List
  - name: Marketplaces - Orders V3 - Order
    x-displayName: Order
  - name: Marketplaces - Orders V3 - Batches
    x-displayName: Batches
  - name: Marketplaces - Orders - Subscriptions - Subscriptions
    x-displayName: Subscriptions
  - name: OM Invoice - API - Settings
    x-displayName: Settings
  - name: OM Invoice - API - Generation
    x-displayName: Generation
  - name: Analytics - Global
    x-displayName: Global
  - name: Analytics - Tracking
    x-displayName: Tracking
  - name: Analytics - Statistics
    x-displayName: Statistics
  - name: Analytics - Optimisations
    x-displayName: Optimisations
  - name: Analytics - Reports
    x-displayName: Reports
  - name: Analytics - Rules
    x-displayName: Rules
  - name: Channel Catalogs - Legacy Tracking - Global
    x-displayName: Global
paths:
  /v2/public/security/login:
    post:
      tags:
        - Public - Security - Security
      summary: Login
      description: User Login - The login will give your tokens
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginRequest'
        required: true
      responses:
        '200':
          description: Your tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiCredentials'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '403':
          description: Invalid credentials
          content: {}
        '500':
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/public/security/register:
    post:
      tags:
        - Public - Security - Security
      summary: User Registration
      description: User Registration - Create a new user on BeezUP
      operationId: Register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerRequest'
        required: true
      responses:
        '204':
          description: Customer registered
          content: {}
        '400':
          description: Email or password is invalid. Disposable email are refused.
          content: {}
        '409':
          description: Email already used
          content: {}
        '500':
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/public/security/lostpassword:
    post:
      tags:
        - Public - Security - Security
      summary: Lost password
      description: Lost password - Your password will be regenerated and sent to your email
      operationId: LostPassword
      requestBody:
        description: Your email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeezUP_Common_Email'
        required: true
      responses:
        '204':
          description: New password sent
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Email not found
          content: {}
        '500':
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '502':
          description: Problem with SMTP service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: email
  /v2/public/channels/:
    get:
      tags:
        - Public - Channels - Public Channels
      summary: Get public channel index
      description: >-
        Use this operation to get the correct link to the channels and to the
        list of values
      operationId: GetChannelsIndex
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Channel list regrouped by country and links to list of values
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicChannelIndex'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/public/channels/{countryIsoCode}:
    get:
      tags:
        - Public - Channels - Public Channels
      summary: The channel list for one country
      operationId: GetChannels
      parameters:
        - name: countryIsoCode
          in: path
          description: >
            The country iso code alpha 3 based on this:
            https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3#Decoding_table \

            To know which country are available you have to use the operation:
            GetChannelsByCountry
          required: true
          schema:
            type: string
        - name: Accept-Encoding
          in: header
          description: >-
            Allows the client to indicate whether it accepts a compressed
            encoding to reduce traffic size.
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: The channel list for one country
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicChannelInfoList'
              example:
                channels:
                  - name: Amazon Direct FRA
                    homeUrl: http://www.amazon.fr
                    logoUrl: >-
                      http://beezupcdn.blob.core.windows.net/comparators/Amazon%2520Direct%2520FRA.png
                    types:
                      - Marketplace
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Channel country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/public/lov/:
    get:
      tags:
        - Public - List of Values - LOV
      summary: Get all list names
      operationId: GetPublicLovIndex
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Get the list names
          headers:
            Cache-Control:
              description: >
                Indicates the directive around the caching mechanisms.\

                For more information, please go to this link:
                https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                type: array
                items:
                  type: string
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicLovIndex'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you can keep your version.
          headers:
            Cache-Control:
              description: >
                Indicates the directive around the caching mechanisms.\

                For more information, please go to this link:
                https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                type: array
                items:
                  type: string
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  # /v2/public/lov/{listName}:
  #   get:
  #     tags:
  #       - Public - List of Values - LOV
  #     summary: Get the list of values related to this list name
  #     operationId: GetPublicListOfValues
  #     parameters:
  #       - name: listName
  #         in: path
  #         description: The list of value name your want to get
  #         required: true
  #         schema:
  #           type: string
  #       - name: Accept-Language
  #         in: header
  #         description: Indicates that the client accepts the following languages.
  #         style: simple
  #         explode: false
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #       - name: If-None-Match
  #         in: header
  #         description: >
  #           ETag value to identify the last known version of requested
  #           resource.\

  #           To avoid useless exchange, we recommend you to indicate the ETag you
  #           previously got from this operation.\

  #           If the ETag value does not match the response will be 200 to give
  #           you a new content, otherwise the response will be: 304 Not Modified,
  #           without any content.\

  #           For more details go to this link:
  #           http://tools.ietf.org/html/rfc7232#section-2.3
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: The list of values
  #         headers:
  #           Cache-Control:
  #             description: >
  #               Indicates the directive around the caching mechanisms.\

  #               For more information, please go to this link:
  #               https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
  #             schema:
  #               type: array
  #               items:
  #                 type: string
  #           ETag:
  #             description: The ETag corresponding to the LOV Index
  #             schema:
  #               type: string
  #           Content-Language:
  #             description: Indicates the language use in the response
  #             schema:
  #               type: array
  #               items:
  #                 type: string
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/publicListOfValuesResponse'
  #       '304':
  #         description: >-
  #           The ETag sent in the http header If-None-Match did not change. So
  #           you can keep your version.
  #         headers:
  #           Cache-Control:
  #             description: >
  #               Indicates the directive around the caching mechanisms.\

  #               For more information, please go to this link:
  #               https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
  #             schema:
  #               type: array
  #               items:
  #                 type: string
  #           ETag:
  #             description: The ETag corresponding to the LOV Index
  #             schema:
  #               type: string
  #         content: {}
  #       '404':
  #         description: List not found
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  #       default:
  #         description: Occurs when something goes wrong
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/lov/:
    get:
      tags:
        - User - List of Values - LOV
      summary: Get all list names
      operationId: GetUserLovIndex
      responses:
        '200':
          description: Get the list names
          headers:
            Cache-Control:
              description: >
                Indicates the directive around the caching mechanisms.\

                For more information, please go to this link:
                https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                type: array
                items:
                  type: string
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userLovIndex'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you can keep your version.
          headers:
            Cache-Control:
              description: >
                Indicates the directive around the caching mechanisms.\

                For more information, please go to this link:
                https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
              schema:
                type: array
                items:
                  type: string
            ETag:
              description: The ETag corresponding to the LOV Index
              schema:
                type: string
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  # /v2/user/lov/{listName}:
  #   get:
  #     tags:
  #       - User - List of Values - LOV
  #     summary: Get the list of values related to this list name
  #     operationId: GetUserListOfValues
  #     parameters:
  #       - name: listName
  #         in: path
  #         description: The list of value name your want to get
  #         required: true
  #         schema:
  #           type: string
  #       - name: Accept-Language
  #         in: header
  #         description: Indicates that the client accepts the following languages.
  #         style: simple
  #         explode: false
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #       - name: If-None-Match
  #         in: header
  #         description: >
  #           ETag value to identify the last known version of requested
  #           resource.\

  #           To avoid useless exchange, we recommend you to indicate the ETag you
  #           previously got from this operation.\

  #           If the ETag value does not match the response will be 200 to give
  #           you a new content, otherwise the response will be: 304 Not Modified,
  #           without any content.\

  #           For more details go to this link:
  #           http://tools.ietf.org/html/rfc7232#section-2.3
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: The list of values
  #         headers:
  #           Cache-Control:
  #             description: >
  #               Indicates the directive around the caching mechanisms.\

  #               For more information, please go to this link:
  #               https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
  #             schema:
  #               type: array
  #               items:
  #                 type: string
  #           ETag:
  #             description: The ETag corresponding to the LOV Index
  #             schema:
  #               type: string
  #           Content-Language:
  #             description: Indicates the language use in the response
  #             schema:
  #               type: array
  #               items:
  #                 type: string
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/userListOfValuesResponse'
  #       '304':
  #         description: >-
  #           The ETag sent in the http header If-None-Match did not change. So
  #           you can keep your version.
  #         headers:
  #           Cache-Control:
  #             description: >
  #               Indicates the directive around the caching mechanisms.\

  #               For more information, please go to this link:
  #               https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
  #             schema:
  #               type: array
  #               items:
  #                 type: string
  #           ETag:
  #             description: The ETag corresponding to the LOV Index
  #             schema:
  #               type: string
  #         content: {}
  #       '404':
  #         description: List not found
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  #       default:
  #         description: Occurs when something goes wrong
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/:
    get:
      tags:
        - Customer - Global
      summary: The index of all operations and LOV
      operationId: GetCustomerIndex
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customerIndex'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/account:
    get:
      tags:
        - Customer - Account
      summary: Get user account information
      operationId: GetUserAccountInfo
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: User account information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountInfo'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/account/resendEmailActivation:
    post:
      tags:
        - Customer - Account
      summary: Resend email activation
      operationId: ResendEmailActivation
      responses:
        '204':
          description: Email activation resent
          content: {}
        '400':
          description: >-
            Email activation not sent because of email problem. Ensure that your
            email is the correct one.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: >-
            Email activation not available because user account already
            activated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '429':
          description: Email activation sent recently, must retry later. (One per hour)
          headers:
            Retry-After:
              description: The duration in second to wait before making another request
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '502':
          description: >-
            Email activate send failed because of our email service. Ensure that
            your email is the correct one otherwise please contact our support
            if the problem persists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/account/activate:
    post:
      tags:
        - Customer - Account
      summary: Activate the user account
      operationId: ActivateUserAccount
      requestBody:
        description: The email activation id received by email.
        content:
          application/json:
            schema:
              type: string
              format: guid
        required: true
      responses:
        '204':
          description: User account activated.
          content: {}
        '403':
          description: Invalid email activation id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: User account already activated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: emailActivationId
  /v2/user/customer/account/personalInfo:
    put:
      tags:
        - Customer - Account
      summary: Save user personal information
      operationId: SavePersonalInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/personalInfo'
        required: true
      responses:
        '204':
          description: User account information updated
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/account/companyInfo:
    put:
      tags:
        - Customer - Account
      summary: Change company information
      operationId: SaveCompanyInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companyInfo'
        required: true
      responses:
        '204':
          description: Company information saved
          content: {}
        '400':
          description: Bad request or invalid VATNumber.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '403':
          description: User not found or unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/account/profilePictureInfo:
    get:
      tags:
        - Customer - Account
      summary: Get profile picture information
      operationId: GetProfilePictureInfo
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Profile picture information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profilePictureInfoResponse'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    put:
      tags:
        - Customer - Account
      summary: Change user picture information
      operationId: SaveProfilePictureInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/profilePictureInfo'
        required: true
      responses:
        '204':
          description: User profile picture information saved.
          content: {}
        '400':
          description: BadRequest (Url invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '413':
          description: The picture size is too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '415':
          description: The content type of the image must be an image
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/account/creditCardInfo:
    get:
      tags:
        - Customer - Account
      summary: Get credit card information
      operationId: GetCreditCardInfo
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: User credit card information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creditCardInfoResponse'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Credit Card not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '503':
          description: >-
            We are unable to get your credit card info. This is a temporary
            state. Please retry later
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    put:
      tags:
        - Customer - Account
      summary: Save user credit card info
      operationId: SaveCreditCardInfo
      requestBody:
        description: Credit card info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/creditCardInfo'
        required: true
      responses:
        '202':
          description: >-
            The credit card information has been accepted for processing, the
            authorization will be processed shortly.
          content: {}
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '502':
          description: Communication problem with our payment service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/account/changeEmail:
    post:
      tags:
        - Customer - Account
      summary: Change user email
      operationId: ChangeEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeEmailRequest'
        required: true
      responses:
        '204':
          description: Email updated
          content: {}
        '400':
          description: New email does not respect the emails's constraints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/account/changePassword:
    post:
      tags:
        - Customer - Account
      summary: Change user password
      operationId: ChangePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changePasswordRequest'
        required: true
      responses:
        '204':
          description: Password updated
          content: {}
        '400':
          description: >-
            Old password is invalid or the new password does not respect the
            password's constraints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/security/logout:
    post:
      tags:
        - Customer - Security
      summary: Log out the current user from go2
      description: Log out the current user from go2
      operationId: Logout
      responses:
        '204':
          description: User logout
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/zendeskToken:
    get:
      tags:
        - Customer - Security
      summary: Zendesk token
      description: >-
        Zendesk token - Generates a JWT token to access BeezUP restricted Help
        Center in SSO as described here:
        https://support.zendesk.com/hc/en-us/articles/222874768-Using-restricted-Help-Center-content-with-the-Web-Widget
      operationId: ZendeskToken
      responses:
        '200':
          description: A JWT token to connect the Zendesk Web Widget
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zendeskToken'
        '500':
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/stores:
    get:
      tags:
        - Customer - Stores
      summary: Get store list
      operationId: GetStores
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Store list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storeList'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Customer - Stores
      summary: Create a new store
      operationId: CreateStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createStoreRequest'
        required: true
      responses:
        '201':
          description: >-
            The store has been created successfully. The http header Location
            contains the new resource url. The body contains the link to the new
            resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/links.getStoreLink'
        '402':
          description: >-
            The maximum amount of store has been reached. Please upgrade your
            contract.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessagePaymentRequired'
        '409':
          description: The customer has a store with the same name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/stores/{storeId}:
    get:
      tags:
        - Customer - Stores
      summary: Get store's information
      operationId: GetStore
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: The store information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/store'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Store not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    delete:
      tags:
        - Customer - Stores
      summary: Delete a store
      operationId: DeleteStore
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Store deleted
          content: {}
        '404':
          description: Store not found or customer not the owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    patch:
      tags:
        - Customer - Stores
      summary: Update some store's information.
      description: |
        Update some store's information. FYI, you cannot change the country.
      operationId: UpdateStore
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateStoreRequest'
        required: true
      responses:
        '204':
          description: Store updated
          content: {}
        '404':
          description: Store not found or customer not the owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: The store name already used
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/stores/{storeId}/rights:
    get:
      tags:
        - Customer - Rights
      summary: Get store's rights
      operationId: GetRights
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: The store's rights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/functionalityRightInfo'
        '404':
          description: Store not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/stores/{storeId}/alerts:
    get:
      tags:
        - Customer - Alerts
      summary: Get store's alerts
      operationId: GetStoreAlerts
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: User account alerts information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storeAlerts'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Store not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Customer - Alerts
      summary: Save store alerts
      description: >-
        You just have to send the alert you want to update, does not need all
        alerts. (PARTIAL UPDATE ACCEPTED)
      operationId: SaveStoreAlerts
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/saveStoreAlertsRequest'
        required: true
      responses:
        '204':
          description: Store alerts saved
          content: {}
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/stores/{storeId}/shares:
    get:
      tags:
        - Customer - Shares
      summary: Get shares related to this store
      operationId: GetStoreShares
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: The sharing list of the store
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storeShares'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Store not found or customer not the owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Customer - Shares
      summary: Share a store to another user
      operationId: ShareStore
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        description: Your friend's email
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/friendEmail'
        required: true
      responses:
        '204':
          description: Store shared
          content: {}
        '402':
          description: Free offer is not allowed to share store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessagePaymentRequired'
        '404':
          description: >-
            Only the owner of the store can make this operation or user not
            found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: email
  /v2/user/customer/stores/{storeId}/shares/{userId}:
    delete:
      tags:
        - Customer - Shares
      summary: Delete a share of a store to another user
      operationId: DeleteStoreShare
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: userId
          in: path
          description: The friend user id
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Share deleted
          content: {}
        '404':
          description: Store not found or customer not the owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/friends/{userId}:
    get:
      tags:
        - Customer - Friends
      summary: Get friend information
      operationId: GetFriendInfo
      parameters:
        - name: userId
          in: path
          description: Your friend user id
          required: true
          schema:
            type: string
            format: guid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Get friend info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userFriendInfo'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/billingPeriods:
    get:
      tags:
        - Customer - Contracts
      summary: Get billing periods conditions
      operationId: GetBillingPeriods
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Get the billing periods conditions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/billingPeriodList'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/offers:
    get:
      tags:
        - Customer - Contracts
      summary: Get all standard offers
      operationId: GetStandardOffers
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Get all standard offers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/standardOffers'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Customer - Contracts
      summary: Get offer pricing
      description: >
        Get the offer pricing then you can create your contract with the same
        request parameters. /v2/user/customer/contracts
      operationId: GetOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offerRequest'
        required: true
      responses:
        '200':
          description: Get the offer proposal considering your current contract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        '400':
          description: >-
            Bad request. (Invalid billing period, invalid offer, etc.). You
            cannot get a pricing for a free offer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '403':
          description: You current contract is not modifiable. Please choose another offer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/contracts:
    get:
      tags:
        - Customer - Contracts
      summary: Get contract list
      operationId: GetContracts
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Contract list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contracts'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Customer - Contracts
      summary: Create a new contract
      description: >
        Now you are ready to create your contract. Before that, please ensure
        that you check the offer with the same request parameterts. /offers
      operationId: CreateContract
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createContract'
        required: true
      responses:
        '200':
          description: >-
            New contract has been created. Some warnings can be present in
            response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createContractResponse'
        '400':
          description: Bad request. (Invalid billing period, invalid offer, etc.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '403':
          description: >-
            The contract is not modifiable or the coupon offer has been already
            used
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/contracts/current/disableAutoRenewal:
    post:
      tags:
        - Customer - Contracts
      summary: >-
        Schedule termination of your current contract at the end of the
        commitment.
      description: >-
        By default your contract are automatically renew. By calling this
        operation you can disable the auto renewal.
      operationId: TerminateCurrentContract
      requestBody:
        description: Indicate the termination reason
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terminateContract'
        required: true
      responses:
        '204':
          description: Your current contract termination has been scheduled
          content: {}
        '400':
          description: Invalid reason type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: No current contract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/customer/contracts/current/reenableAutoRenewal:
    post:
      tags:
        - Customer - Contracts
      summary: Reactivate your terminated contract.
      description: By calling this operation you can re-enable the auto renewal.
      operationId: ReactivateCurrentContract
      responses:
        '204':
          description: Your current contract has been resumed
          content: {}
        '404':
          description: No current contract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/contracts/next:
    delete:
      tags:
        - Customer - Contracts
      summary: Delete your next contract
      operationId: DeleteNextContract
      responses:
        '204':
          description: Next contract has been deleted
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/customer/invoices:
    get:
      tags:
        - Customer - Invoices
      summary: Get all your invoices
      operationId: GetInvoices
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Get all invoices of a customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceList'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/:
    get:
      tags:
        - Catalogs - Global
      summary: Get the index of the catalog API
      description: >-
        The operation will give you all the operations you will be able to do
        and all the LOV used in this API.
      operationId: CatalogIndex
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/catalogIndex'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/beezupColumns:
    get:
      tags:
        - Catalogs - Global
      summary: Get the BeezUP columns
      description: >-
        Get the BeezUP columns, this columns are used for mapping during the
        manual catalog importation process.
      operationId: Catalog_GetBeezUPColumns
      responses:
        '200':
          description: The catalog API index
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/beezUPColumnConfiguration'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}:
    get:
      tags:
        - Catalogs - Catalog
      summary: Get the index of the catalog API for this store
      description: >-
        The operation will give you all the operations you will be able to do on
        this store for this API.
      operationId: CatalogStoreIndex
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: The catalog index
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/catalogStoreIndex'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/inputConfiguration:
    get:
      tags:
        - Catalogs - Catalog
      summary: Get the last input configuration
      operationId: Importation_GetManualUpdateLastInputConfig
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lastManualImportInputConfiguration'
        '404':
          description: StoreId or Manual Update last configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/catalogColumns:
    get:
      tags:
        - Catalogs - Catalog
      summary: Get catalog column list
      operationId: Catalog_GetCatalogColumns
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Catalog column list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/catalogColumnList'
        '404':
          description: StoreId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/catalogColumns/{columnId}/rename:
    post:
      tags:
        - Catalogs - Catalog
      summary: Change Catalog Column User Name
      operationId: Catalog_ChangeCatalogColumnUserName
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The catalog column identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeUserColumnNameRequest'
        required: true
      responses:
        '204':
          description: Catalog column user name changed
          content: {}
        '400':
          description: When a user column name is duplicate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: A catalog importation is already in progress!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importAlreadyInProgressResponse'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/customColumns:
    get:
      tags:
        - Catalogs - Catalog
      summary: Get custom column list
      operationId: Catalog_GetCustomColumns
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Custom column list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customColumnList'
        '404':
          description: StoreId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/customColumns/{columnId}:
    put:
      tags:
        - Catalogs - Catalog
      summary: Create or replace a custom column
      operationId: Catalog_SaveCustomColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCustomColumnRequest'
        required: true
      responses:
        '204':
          description: Custom column saved
          content: {}
        '400':
          description: >-
            Occurs when a catalog custom column id is already used by a catalog
            column.

            When the catalog custom column count limit has been reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          content: {}
        '409':
          description: A catalog importation is already in progress!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importAlreadyInProgressResponse'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
    delete:
      tags:
        - Catalogs - Catalog
      summary: Delete custom column
      operationId: Catalog_DeleteCustomColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Custom column deleted
          content: {}
        '403':
          description: Occurs when the parent category is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: When a catalog importation is already in progress!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/customColumns/{columnId}/rename:
    post:
      tags:
        - Catalogs - Catalog
      summary: Change Custom Column User Name
      operationId: Catalog_ChangeCustomColumnUserName
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeUserColumnNameRequest'
        required: true
      responses:
        '204':
          description: Custom column renamed
          content: {}
        '400':
          description: When a user column name is duplicate.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: A catalog importation is already in progress!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importAlreadyInProgressResponse'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/customColumns/{columnId}/expression:
    get:
      tags:
        - Catalogs - Catalog
      summary: Get the encrypted custom column expression
      operationId: Catalog_GetCustomColumnExpression
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Encrypted expression
          content:
            application/json:
              schema:
                type: string
                example: zlkzjkzjlzlknzklnzlknaklnaklanlknaklan
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog custom column is not found.
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    put:
      tags:
        - Catalogs - Catalog
      summary: Change custom column expression
      operationId: Catalog_ChangeCustomColumnExpression
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeCustomColumnExpressionRequest'
        required: true
      responses:
        '204':
          description: Custom column expression saved
          content: {}
        '403':
          description: >-
            Occurs when the user try to change a custom column related to a
            Category. If you want to change this custom column expression you
            have to make a new manual importation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when a catalog custom column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: A catalog importation is already in progress!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importAlreadyInProgressResponse'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/customColumns/computeExpression:
    post:
      tags:
        - Catalogs - Catalog
      summary: Compute the expression for this catalog.
      operationId: Catalog_ComputeExpression
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/computeExpressionRequest'
        required: true
      responses:
        '200':
          description: Compute an expression
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Occurs when the expression cannot be computed
          content:
            application/json:
              schema:
                type: string
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/categories:
    get:
      tags:
        - Catalogs - Catalog
      summary: Get category list
      operationId: Catalog_GetCategories
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: Accept-Encoding
          in: header
          description: >-
            Indicates that the client accepts that the response will be
            compressed to reduce traffic size.
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Categories
          headers:
            Content-Encoding:
              description: Indicates the compression use in the response
              schema:
                type: array
                items:
                  type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/categoryList'
        '404':
          description: StoreId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/products/list:
    post:
      tags:
        - Catalogs - Catalog
      summary: Get product list
      operationId: Catalog_GetProducts
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getProductsRequest'
        required: true
      responses:
        '200':
          description: Product list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productList'
        '404':
          description: StoreId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/products/random:
    get:
      tags:
        - Catalogs - Catalog
      summary: Get random product list
      description: We will return 10 products randomly selected with all product values
      operationId: Catalog_GetRandomProducts
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Random product list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/randomProductList'
        '404':
          description: StoreId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/products/{productId}:
    get:
      tags:
        - Catalogs - Catalog
      summary: Get product by ProductId
      operationId: Catalog_GetProductByProductId
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: productId
          in: path
          description: The product identifier you want to get
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '404':
          description: StoreId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/products:
    get:
      tags:
        - Catalogs - Catalog
      summary: Get product by Sku
      operationId: Catalog_GetProductBySku
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: sku
          in: query
          description: The product sku you want to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        '404':
          description: StoreId or Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/importations:
    get:
      tags:
        - Catalogs - Importation Process
      summary: Get the latest catalog importation reporting for all your stores
      operationId: Importation_GetReportingsAllStores
      responses:
        '200':
          description: The last importation reportings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importationsPerStoreResponse'
        '404':
          description: UserId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations:
    get:
      tags:
        - Catalogs - Importation Process
      summary: Get the latest catalog importation reporting
      operationId: Importation_GetReportings
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: The last importation reportings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importationsResponse'
        '404':
          description: StoreId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/start:
    post:
      tags:
        - Catalogs - Importation Process
      summary: Start Manual Import
      operationId: Importation_StartManualUpdate
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/startManualImportRequest'
        required: true
      responses:
        '202':
          description: Catalog importation started
          headers:
            Retry-After:
              description: The duration in second to wait before polling this resource
              schema:
                minimum: 5
                type: integer
            Location:
              description: The location of the new resource to poll
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/links.Importation_GetImportationMonitoringLink
        '400':
          description: >-
            Missing Input configuration in the request

            Occurs when there is a duplicate file number in the input
            configuration

            Occurs when there is a duplicate file Uri in the input configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: StoreId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: A catalog importation is already in progress!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importAlreadyInProgressResponse'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/importations/{executionId}:
    get:
      tags:
        - Catalogs - Importation Process
      summary: Get the importation status
      operationId: Importation_GetImportationMonitoring
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importationMonitoring'
        '404':
          description: >-
            ExecutionId not found or not yet synchronized. If not synchronized
            within 30 sec after the import has been started, please contact our
            support
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/cancel:
    post:
      tags:
        - Catalogs - Importation Process
      summary: Cancel importation
      operationId: Importation_Cancel
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Catalog importation canceled
          content: {}
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/technicalProgression:
    get:
      tags:
        - Catalogs - Importation Process
      summary: Get technical progression
      operationId: Importation_TechnicalProgression
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: When the technical progression is correctly retrived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importationTechnicalProgression'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/configureRemainingCatalogColumns:
    post:
      tags:
        - Catalogs - Importation Process
      summary: Configure remaining catalog columns
      description: >-
        This operation should be used after you have mapped the required BeezUP
        Columns
      operationId: Importation_ConfigureRemainingCatalogColumns
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: >-
            Remaining catalog columns have been configured. This operation has
            no impact on the current catalog until you commit the catalog
            importation.
          content: {}
        '400':
          description: >-
            When a user column name is duplicate.

            When the catalog column name are duplicate.

            When the BeezUP column have duplicate mapping.

            Occurs when the required beezup column is not mapped to any column.

            Occurs when the category hierarchy is not correctly mapped.

            Occurs when the duplicate strategy on {catalogColumnName} is not
            found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/commitColumns:
    post:
      tags:
        - Catalogs - Importation Process
      summary: Commit columns
      operationId: Importation_CommitColumns
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: >-
            Columns configuration have been committed. This operation has no
            impact on the current catalog until you commit the catalog
            importation.
          content: {}
        '400':
          description: |-
            When a user column name is duplicate.
            When the catalog column name are duplicate.
            When the BeezUP column have duplicate mapping.
            Occurs when the required beezup column is not mapped to any column.
            Occurs when the category hierarchy is not correctly mapped.
            When the catalog column count limit has been reached.
            When the catalog custom column count limit has been reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/commit:
    post:
      tags:
        - Catalogs - Importation Process
      summary: Commit Importation
      operationId: Importation_Commit
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Catalog importation committed
          content: {}
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}:
    get:
      tags:
        - Catalogs - Importation Catalog Info
      summary: >-
        Get the product sample related to this importation with all columns
        (catalog and custom)
      operationId: Importation_GetProductSample
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: productSampleIndex
          in: path
          description: Index of the product sample. Starting from 0 to 99.
          required: true
          schema:
            maximum: 99
            minimum: 0
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/productSample'
        '404':
          description: >-
            ExecutionId not found or not yet synchronized. If not synchronized
            within 30 sec, please contact our support
                  schema:
            $ref:
            'https://api.beezup.com/swaggerhub/domains/BeezUP/api.beezup.com/v2#/definitions/BeezUP_Common_ErrorResponseMessage'
          content: {}
        '409':
          description: >-
            Catalog preparation read step is not completed. Please refer to the
            reporting of this execution for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/productSamples/{productSampleIndex}/customColumns/{columnId}:
    get:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Get product sample custom column value related to this importation.
      description: >-
        /!\ Use this operation only when you just changed the custom column
        expression and you want to get a precise the property value. Otherwise
        use the operation Importation_GetProductSample which will give you all
        property values
      operationId: Importation_GetProductSampleCustomColumnValue
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: productSampleIndex
          in: path
          description: Index of the product sample. Starting from 0 to 99.
          required: true
          schema:
            maximum: 99
            minimum: 0
            type: integer
            format: int32
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Product sample custom column value
          content:
            application/json:
              schema:
                type: string
                example: A value computed from a expression
        '404':
          description: >-
            ExecutionId not found or not yet synchronized. If not synchronized
            within 30 sec, please contact our support
          headers:
            Retry-After:
              description: The duration in second to wait before polling this resource
              schema:
                minimum: 5
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: >-
            Catalog preparation read step is not completed. Please refer to the
            reporting of this execution for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns:
    get:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Get detected catalog columns during this importation.
      operationId: Importation_GetDetectedCatalogColumns
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detectedCatalogColumnList'
        '404':
          description: >-
            ExecutionId not found or not yet synchronized. If not synchronized
            within 30 sec, please contact our support
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: >-
            Catalog preparation read step is not completed. Please refer to the
            reporting of this execution for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}:
    post:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Configure catalog column
      operationId: Importation_ConfigureCatalogColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configureCatalogColumnCatalogRequest'
        required: true
      responses:
        '204':
          description: >-
            Catalog column configured. This operation has no impact on the
            current catalog until you commit the catalog importation.
          content: {}
        '400':
          description: |-

            When the catalog column name is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/ignore:
    post:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Ignore Column
      operationId: Importation_IgnoreColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: >-
            Catalog column ignored. This operation has no impact on the current
            catalog until you commit the catalog importation.
          content: {}
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/reattend:
    post:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Reattend Column
      operationId: Importation_ReattendColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: >-
            Catalog column reattended. This operation has no impact on the
            current catalog until you commit the catalog importation.
          content: {}
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/map:
    post:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Map catalog column to a BeezUP column
      operationId: Importation_MapCatalogColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The catalog column identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mapBeezUPColumnRequest'
        required: true
      responses:
        '204':
          description: >-
            Catalog column mapped. This operation has no impact on the current
            catalog until you commit the catalog importation.
          content: {}
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/importations/{executionId}/catalogColumns/{columnId}/unmap:
    post:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Unmap catalog column
      operationId: Importation_UnmapCatalogColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The catalog column identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: >-
            Catalog Column unmapped. This operation has no impact on the current
            catalog until you commit the catalog importation.
          content: {}
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns:
    get:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Get custom columns currently place in this importation
      operationId: Importation_GetCustomColumns
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Custom columns of current Importation successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/importationCustomColumnList'
        '404':
          description: >-
            ExecutionId not found or not yet synchronized. If not synchronized
            within 30 sec, please contact our support
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: >-
            Catalog preparation read step is not completed. Please refer to the
            reporting of this execution for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/expression:
    get:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Get the encrypted custom column expression in this importation
      operationId: Importation_GetCustomColumnExpression
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Encrypted expression
          content:
            application/json:
              schema:
                type: string
                example: zlkzjkzjlzlknzklnzlknaklnaklanlknaklan
        '404':
          description: >-
            ExecutionId not found or not yet synchronized. If not synchronized
            within 30 sec, please contact our support
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: >-
            Catalog preparation read step is not completed. Please refer to the
            reporting of this execution for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}:
    put:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Create or replace a custom column
      operationId: Importation_SaveCustomColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeCustomColumnRequest'
        required: true
      responses:
        '204':
          description: >-
            Custom column configured. This operation has no impact on the
            current catalog until you commit the catalog importation.
          content: {}
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
    delete:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Delete Custom Column
      operationId: Importation_DeleteCustomColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: When the custom column for this importation is correctly deleted
          content: {}
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/map:
    post:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Map custom column to a BeezUP column
      operationId: Importation_MapCustomColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mapBeezUPColumnRequest'
        required: true
      responses:
        '204':
          description: >-
            Custom column mapped. This operation has no impact on the current
            catalog until you commit the catalog importation.
          content: {}
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/importations/{executionId}/customColumns/{columnId}/unmap:
    post:
      tags:
        - Catalogs - Importation Catalog Info
      summary: Unmap custom column
      operationId: Importation_UnmapCustomColumn
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
        - name: columnId
          in: path
          description: The custom column identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: >-
            Custom column unmapped. This operation has no impact on the current
            catalog until you commit the catalog importation.
          content: {}
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
            Occurs when a catalog column is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Occurs when this importation is already finished.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/importations/{executionId}/products/list:
    post:
      tags:
        - Catalogs - Importation Process
      summary: Importation Get Products Report
      operationId: Importation_GetProductsReport
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getImportationProductsReportRequest'
        required: true
      responses:
        '200':
          description: Get Products Report Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getImportationProductsReportResponse'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          content: {}
        '409':
          description: Report Not ready Yet. Please retry in a few minutes.
          content: {}
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/importations/{executionId}/report:
    get:
      tags:
        - Catalogs - Importation Process
      summary: Importation Get Report
      operationId: Importation_GetReport
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: executionId
          in: path
          description: The execution identifier of you catalog importation
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Get Report Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getImportationReportResponse'
        '404':
          description: |-
            Occurs when a user tries to work on the wrong store.
            Occurs when the message concerns the wrong execution.
          content: {}
        '409':
          description: Report Not ready Yet. Please retry in a few minutes.
          content: {}
  /v2/user/catalogs/{storeId}/autoImport/activate:
    post:
      tags:
        - Catalogs - Auto
      summary: >-
        Activate the auto importation of the last successful manual catalog
        importation.
      description: >-
        Once you have made your fist manual catalog importation with success,
        you can call this operation to import it automatically. No parameter
        required, we know which one it is.
      operationId: Importation_ActivateAutoImport
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Auto import activated
          content: {}
        '400':
          description: Occurs when the user tries to auto import a local file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: When a catalog importation is already in progress!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/autoImport:
    get:
      tags:
        - Catalogs - Auto
      summary: Get the auto import configuration
      operationId: Auto_GetAutoImportConfiguration
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Auto import configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/autoImportConfiguration'
        '404':
          description: StoreId or Auto Import configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    delete:
      tags:
        - Catalogs - Auto
      summary: Delete Auto Import
      operationId: Auto_DeleteAutoImport
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Auto import deleted
          content: {}
        '400':
          description: Occurs when the catalog auto import is not configured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/autoImport/start:
    post:
      tags:
        - Catalogs - Auto
      summary: Start Auto Import Manually
      operationId: Auto_StartAutoImport
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '202':
          description: Catalog importation started
          headers:
            Retry-After:
              description: The duration in second to wait before polling this resource
              schema:
                minimum: 5
                type: integer
            Location:
              description: The location of the new resource to poll
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/links.Importation_GetImportationMonitoringLink
        '400':
          description: >-
            Occurs when the catalog auto import is not configured.

            When a user column name is duplicate.

            When the catalog column name are duplicate.

            When the BeezUP column have duplicate mapping.

            Occurs when the required beezup column is not mapped to any column.

            Occurs when the category hierarchy is not correctly mapped.

            Occurs when the duplicate strategy on {catalogColumnName} is not
            found.

            When the user tries to import to ofen the catalog file to download
            count max limit has been reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: An importation is already in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/autoImport/pause:
    post:
      tags:
        - Catalogs - Auto
      summary: Pause Auto Import
      operationId: Auto_PauseAutoImport
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Auto import paused
          content: {}
        '400':
          description: Occurs when the catalog auto import is not configured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/autoImport/resume:
    post:
      tags:
        - Catalogs - Auto
      summary: Resume Auto Import
      operationId: Auto_ResumeAutoImport
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Auto import resumed
          content: {}
        '400':
          description: Occurs when the catalog auto import is not configured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/catalogs/{storeId}/autoImport/scheduling/interval:
    post:
      tags:
        - Catalogs - Auto
      summary: Configure Auto Import Interval
      operationId: Auto_ConfigureAutoImportInterval
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configureAutoImportIntervalRequest'
        required: true
      responses:
        '204':
          description: Auto import scheduling interval saved
          content: {}
        '400':
          description: >-

            When the min catalog Auto Import scheduling interval delay has been
            reached.

            When the max catalog Auto Import count has been reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/catalogs/{storeId}/autoImport/scheduling/schedules:
    post:
      tags:
        - Catalogs - Auto
      summary: Configure Auto Import Schedules
      operationId: Auto_ScheduleAutoImport
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleAutoImportRequest'
        required: true
      responses:
        '204':
          description: Auto import scheduling saved
          content: {}
        '400':
          description: >-

            When the max catalog Auto Import count has been reached.

            When the min catalog Auto Import scheduling interval delay has been
            reached.

            When the max catalog Auto Import count has been reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Occurs when a user tries to work on the wrong store.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channels/:
    get:
      tags:
        - Channels - Channels Global
      summary: List all available channel for this store
      operationId: GetAvailableChannels
      parameters:
        - name: storeId
          in: query
          description: The store identifier
          required: true
          schema:
            type: string
            format: guid
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
      responses:
        '200':
          description: Available channel list for this store
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/channelHeader'
  /v2/user/channels/{channelId}:
    get:
      tags:
        - Channels - Channels Global
      summary: Get channel information
      operationId: GetChannelInfo
      parameters:
        - name: channelId
          in: path
          description: The channel identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Channel information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelInfo'
  /v2/user/channels/{channelId}/categories:
    get:
      tags:
        - Channels - Channels Global
      summary: Get channel categories
      operationId: GetChannelCategories
      parameters:
        - name: channelId
          in: path
          description: The channel identifier
          required: true
          schema:
            type: string
            format: guid
        - name: Accept-Encoding
          in: header
          description: >-
            Indicates that the client accepts that the response will be
            compressed to reduce traffic size.
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Channel categories
          headers:
            Content-Encoding:
              description: Indicates the compression use in the response
              schema:
                type: array
                items:
                  type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelRootCategory'
  /v2/user/channels/{channelId}/columns:
    post:
      tags:
        - Channels - Channels Global
      summary: Get channel columns
      operationId: GetChannelColumns
      parameters:
        - name: channelId
          in: path
          description: The channel identifier
          required: true
          schema:
            type: string
            format: guid
        - name: Accept-Encoding
          in: header
          description: >-
            Indicates that the client accepts that the response will be
            compressed to reduce traffic size.
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: >-
          Allow you to filter the channel column identifier list your want to
          get
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'
        required: false
      responses:
        '200':
          description: Channel columns
          headers:
            Content-Encoding:
              description: Indicates the compression use in the response
              schema:
                type: array
                items:
                  type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/channelColumn'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/:
    get:
      tags:
        - Channel Catalogs - Global
      summary: List all your current channel catalogs
      operationId: GetChannelCatalogs
      parameters:
        - name: storeId
          in: query
          description: The store identifier
          schema:
            type: string
            format: guid
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelCatalogList'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Channel Catalogs - Global
      summary: Add a new channel catalog
      operationId: AddChannelCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addChannelCatalogRequest'
        required: true
      responses:
        '201':
          description: When the channel has been successfully added for this store
          headers:
            Retry-After:
              description: The duration in second to wait before polling this resource
              schema:
                minimum: 5
                type: integer
            Location:
              description: The new location
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/links.GetChannelCatalogLink'
        '404':
          description: StoreId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}:
    get:
      tags:
        - Channel Catalogs - Global
      summary: Get the channel catalog information
      operationId: GetChannelCatalog
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Channel catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelCatalog'
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    delete:
      tags:
        - Channel Catalogs - Global
      summary: Delete the channel catalog
      operationId: DeleteChannelCatalog
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog deleted
          content: {}
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/filterOperators:
    get:
      tags:
        - Channel Catalogs - Global
      summary: Get channel catalog filter operators
      operationId: GetChannelCatalogFilterOperators
      responses:
        '200':
          description: Channel catalog  filter operator list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/filterOperator'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/enable:
    post:
      tags:
        - Channel Catalogs - Settings
      summary: Enable a channel catalog
      operationId: EnableChannelCatalog
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog enabled
          content: {}
        '402':
          description: You have to upgrade your offer to activate this channel catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/upgradeOfferRequired'
        '404':
          description: Occurs when a user tries to work on the wrong ChanelCatalogId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/disable:
    post:
      tags:
        - Channel Catalogs - Settings
      summary: Disable a channel catalog
      operationId: DisableChannelCatalog
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog disabled
          content: {}
        '404':
          description: Occurs when a user tries to work on the wrong ChanelCatalogId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/settings/general:
    put:
      tags:
        - Channel Catalogs - Settings
      summary: Configure channel catalog general settings
      operationId: ConfigureChannelCatalogGeneralSettings
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generalSettings'
        required: true
      responses:
        '204':
          description: Channel catalog general settings configured
          content: {}
        '404':
          description: Occurs when a user tries to work on the wrong ChanelCatalogId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}/settings/cost:
    put:
      tags:
        - Channel Catalogs - Settings
      summary: Configure channel catalog cost settings
      operationId: ConfigureChannelCatalogCostSettings
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/costSettings'
        required: true
      responses:
        '204':
          description: Channel catalog cost settings configured
          content: {}
        '404':
          description: Occurs when a user tries to work on the wrong ChanelCatalogId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}/columnMappings:
    put:
      tags:
        - Channel Catalogs - Column Mappings
      summary: Configure channel catalog column mappings
      operationId: ConfigureChannelCatalogColumnMappings
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/channelCatalogColumnMappingList'
        required: true
      responses:
        '204':
          description: Channel catalog column mappings configured
          content: {}
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}/categories:
    get:
      tags:
        - Channel Catalogs - Categories
      summary: Get channel catalog categories
      operationId: GetChannelCatalogCategories
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Channel catalog category mappings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelCatalogCategoryConfigurationList'
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/categories/disableMapping:
    post:
      tags:
        - Channel Catalogs - Categories
      summary: Disable a channel catalog category mapping
      operationId: DisableChannelCatalogCategoryMapping
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog category mapping disabled
          content: {}
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/categories/reenableMapping:
    post:
      tags:
        - Channel Catalogs - Categories
      summary: Reenable a channel catalog category mapping
      operationId: ReenableChannelCatalogCategoryMapping
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog category mapping reenabled
          content: {}
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/categories/configure:
    post:
      tags:
        - Channel Catalogs - Categories
      summary: Configure channel catalog category
      operationId: ConfigureChannelCatalogCategory
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configureCategoryRequest'
        required: true
      responses:
        '204':
          description: Channel catalog category configured
          content: {}
        '400':
          description: BadRequest. See Error Response for more details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}/exclusionFilters:
    get:
      tags:
        - Channel Catalogs - Exclusion Filters
      summary: Get channel catalog exclusion filters
      operationId: GetChannelCatalogExclusionFilters
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Channel catalog exclusion filter list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exclusionFiltersResponse'
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    put:
      tags:
        - Channel Catalogs - Exclusion Filters
      summary: Configure channel catalog exclusion filters
      operationId: ConfigureChannelCatalogExclusionFilters
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exclusionFilters'
        required: true
      responses:
        '204':
          description: Channel catalog exclusion filter list configured
          content: {}
        '400':
          description: BadRequest. See Error Response for more details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}/products:
    post:
      tags:
        - Channel Catalogs - Products
      summary: Get channel catalog product information list
      operationId: GetChannelCatalogProductInfoList
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        description: The channel catalog product list filter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getChannelCatalogProductInfoListRequest'
        required: true
      responses:
        '200':
          description: Channel catalog product information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelCatalogProductInfoList'
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}/products/export:
    post:
      tags:
        - Channel Catalogs - Products
      summary: Export channel catalog product information list
      operationId: ExportChannelCatalogProductInfoList
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
        - name: format
          in: query
          description: The file type of the exportation
          required: true
          schema:
            type: string
            enum:
              - xlsx
              - csv
      requestBody:
        description: The channel catalog product list filter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getChannelCatalogProductInfoListRequest'
        required: true
      responses:
        '200':
          description: Channel catalog product information list exported
          headers:
            Location:
              description: >
                To indicate the url of the export file

                Example:
                https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Products.xslx
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_Link3'
              example:
                href: >-
                  https://beezupchannel.blob.core.windows.net/reports/exports/Excel_Products.xslx
                method: GET
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}/products/counters:
    get:
      tags:
        - Channel Catalogs - Products
      summary: Get channel catalog products' counters
      operationId: GetChannelCatalogProductsCounters
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Channel catalog products' counters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelCatalogProductsCounters'
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/products:
    post:
      tags:
        - Channel Catalogs - Products
      summary: Get channel catalog products related to these channel catalogs
      operationId: GetChannelCatalogProductByChannelCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/channelCatalogProductByChannelCatalogRequest
        required: true
      responses:
        '200':
          description: The channel catalog product by channel catalog
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/channelCatalogProductByChannelCatalogResponse
        '404':
          description: ProductId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}:
    get:
      tags:
        - Channel Catalogs - Products
      summary: Get channel catalog product information
      operationId: GetChannelCatalogProductInfo
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
        - name: productId
          in: path
          description: The product identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Channel catalog product information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelCatalogProductInfo'
        '404':
          description: ChannelCatalog or ProductId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides:
    put:
      tags:
        - Channel Catalogs - Products Overrides
      summary: Override channel catalog product values
      operationId: OverrideChannelCatalogProductValues
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
        - name: productId
          in: path
          description: The product identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/productOverrides'
        required: true
      responses:
        '204':
          description: Channel catalog product overriden
          content: {}
        '400':
          description: BadRequest. See Error Response for more details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: ChannelCatalogId or ProductId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/{channelColumnId}:
    delete:
      tags:
        - Channel Catalogs - Products Overrides
      summary: Delete a specific channel catalog product value override
      operationId: DeleteChannelCatalogProductValueOverride
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
        - name: productId
          in: path
          description: The product identifier
          required: true
          schema:
            type: string
            format: guid
        - name: channelColumnId
          in: path
          description: The channel column identifier
          required: true
          schema:
            type: string
            format: guid
          example: 8a76f06a-fefc-4c0d-bcfe-b210f1482977
      responses:
        '204':
          description: Channel catalog product value override deleted
          content: {}
        '404':
          description: ChannelCatalogId or ProductId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/copy:
    get:
      tags:
        - Channel Catalogs - Products Overrides
      summary: Get channel catalog product value override compatibilities status
      operationId: GetChannelCatalogProductValueOverrideCopy
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
        - name: productId
          in: path
          description: The product identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: placeholder. will be completed soon.
          content: {}
        '404':
          description: ChannelCatalog or ProductId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Channel Catalogs - Products Overrides
      summary: Copy channel catalog product value override
      operationId: ConfigureChannelCatalogProductValueOverrideCopy
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
        - name: productId
          in: path
          description: The product identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog product value override deleted
          content: {}
        '404':
          description: ChannelCatalogId or ProductId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/disable:
    post:
      tags:
        - Channel Catalogs - Products Optimisation
      summary: Disable channel catalog product
      description: >
        By default a all your catalog products are exposed to the channel.

        You can disable a product by using this operation.

        /!\ In case of massive optimisation we recommand you to use the
        analytics api
      operationId: DisableChannelCatalogProduct
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
        - name: productId
          in: path
          description: The product identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog product disabled
          content: {}
        '404':
          description: ChannelCatalogId Or ProductId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/reenable:
    post:
      tags:
        - Channel Catalogs - Products Optimisation
      summary: Reenable channel catalog product
      description: >
        By default a all your catalog products are exposed to the channel.

        You can reenable a product by using this operation.

        /!\ In case of massive optimisation we recommand you to use the
        analytics api
      operationId: ReenableChannelCatalogProduct
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
        - name: productId
          in: path
          description: The product identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog product reenabled
          content: {}
        '404':
          description: ChannelCatalogId or ProductId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/exportations/cache:
    get:
      tags:
        - Channel Catalogs - Exportations
      summary: Get the exportation cache information
      operationId: GetChannelCatalogExportationCacheInfo
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Channel catalog exportation cache information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelCatalogExportCacheInfoResponse'
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/exportations/cache/clear:
    post:
      tags:
        - Channel Catalogs - Exportations
      summary: Clear the exportation cache
      operationId: ClearChannelCatalogExportationCache
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog exportation cache cleared
          content: {}
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/channelCatalogs/{channelCatalogId}/exportations/history:
    get:
      tags:
        - Channel Catalogs - Exportations
      summary: Get the exportation history
      operationId: GetChannelCatalogExportationHistory
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
        - name: pageNumber
          in: query
          description: The page number you want to get
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: The entry count you want to get
          required: true
          schema:
            maximum: 100
            minimum: 25
            type: integer
            format: int32
      responses:
        '200':
          description: Channel catalog exportation history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelCatalogExportationHistory'
        '404':
          description: ChannelCatalogId not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/marketplaces/channelcatalogs/:
    get:
      tags:
        - Marketplaces - Channel catalogs - Global
      summary: Get your marketplace channel catalog list
      operationId: GetMarketplaceChannelCatalogs
      parameters:
        - name: storeId
          in: query
          description: The StoreId to filter by
          schema:
            type: string
            format: guid
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
      responses:
        '200':
          description: Marketplace channel catalog list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketplaceChannelCatalogList'
        '404':
          description: Store not found
          content: {}
  /v2/user/marketplaces/channelcatalogs/publications/{marketplaceTechnicalCode}/{accountId}/publish:
    post:
      tags:
        - Marketplaces - Channel catalogs - Publications
      summary: '[PREVIEW] Launch a publication of the catalog to the marketplace'
      operationId: PublishCatalogToMarketplace
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: Marketplace Technical Code to query (required)
          required: true
          schema:
            type: string
            x-lov: MarketplaceTechnicalCode
          x-lov: MarketplaceTechnicalCode
        - name: accountId
          in: path
          description: Account Id to query (required)
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publishCatalogToMarketplaceRequest'
        required: true
      responses:
        '202':
          description: Publication request accepted
          content: {}
        '400':
          description: >-
            One or more channel catalog marketplace property keys or values are
            invalid for requested marketplace channel catalog. See response for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: >-
            Requested account, marketplace or authorization for current user not
            found
          content: {}
        '503':
          description: >-
            The marketplace configuration related to this channel catalog is
            currently in progress. Please retry later.
          headers:
            Retry-After:
              description: Indicate the duration to before the next retry in second.
              schema:
                type: integer
                format: int32
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-releaseStatus: PREVIEW
      x-codegen-request-body-name: request
  /v2/user/marketplaces/channelcatalogs/publications/{marketplaceTechnicalCode}/{accountId}/history:
    get:
      tags:
        - Marketplaces - Channel catalogs - Publications
      summary: >-
        Fetch the publication history for an account, sorted by descending start
        date
      operationId: GetPublications
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: Marketplace Technical Code to query (required)
          required: true
          schema:
            type: string
            x-lov: MarketplaceTechnicalCode
          x-lov: MarketplaceTechnicalCode
        - name: accountId
          in: path
          description: Account Id to query (required)
          required: true
          schema:
            type: integer
            format: int32
        - name: channelCatalogId
          in: query
          description: Channel Catalog Id by which to filter (optional)
          schema:
            type: string
            format: guid
        - name: count
          in: query
          description: Amount of entries to fetch (optional, default set to 10)
          schema:
            maximum: 100
            minimum: 10
            type: integer
            format: int32
            default: 10
        - name: publicationTypes
          in: query
          description: Publication types by which to filter (optional)
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              format: publicationType
              enum:
                - PublishProducts
                - PublishOffers
                - Unpublish
            x-lov: MarketplacePublicationType
          x-lov: MarketplacePublicationType
      responses:
        '200':
          description: Successfully fetched channel catalog settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountPublications'
        '400':
          description: >-
            Feature only available for Amazon, Ebay, CDiscount and Mirakl
            marketplaces
          content: {}
        '404':
          description: >-
            Requested account, marketplace or authorization for current user not
            found
          content: {}
        '503':
          description: >-
            The marketplace configuration related to this channel catalog is
            currently in progress. Please retry later.
          headers:
            Retry-After:
              description: Indicate the duration to before the next retry in second.
              schema:
                type: integer
                format: int32
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
  # /v2/user/marketplaces/channelcatalogs/{channelCatalogId}/properties:
  #   get:
  #     tags:
  #       - Marketplaces - Channel catalogs - Settings
  #     summary: Get the marketplace properties for a channel catalog
  #     operationId: GetChannelCatalogMarketplaceProperties
  #     parameters:
  #       - name: channelCatalogId
  #         in: path
  #         required: true
  #         schema:
  #           type: string
  #           format: guid
  #       - name: redirectionPageUrl
  #         in: query
  #         required: true
  #         schema:
  #           type: string
  #           format: uri
  #       - name: Accept-Language
  #         in: header
  #         description: Indicates that the client accepts the following languages.
  #         style: simple
  #         explode: false
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #     responses:
  #       '200':
  #         description: Successfully fetched channel catalog properties
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/channelCatalogMarketplaceProperties'
  #       '404':
  #         description: Marketplace channel Catalog not found
  #         content: {}
  #       '503':
  #         description: >-
  #           The marketplace configuration related to this channel catalog is
  #           currently in progress. Please retry later.
  #         headers:
  #           Retry-After:
  #             description: Indicate the duration to before the next retry in second.
  #             schema:
  #               type: integer
  #               format: int32
  #         content: {}
  #       default:
  #         description: Occurs when something goes wrong
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/marketplaces/channelcatalogs/{channelCatalogId}/settings:
    get:
      tags:
        - Marketplaces - Channel catalogs - Settings
      summary: Get the marketplace settings for a channel catalog
      operationId: GetChannelCatalogMarketplaceSettings
      parameters:
        - name: channelCatalogId
          in: path
          description: Channel Catalog Id to query (required)
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Successfully fetched channel catalog settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/channelCatalogMarketplaceSettings'
        '404':
          description: Marketplace channel catalog not found
          content: {}
        '503':
          description: >-
            The marketplace configuration related to this channel catalog is
            currently in progress. Please retry later.
          headers:
            Retry-After:
              description: Indicate the duration to before the next retry in second.
              schema:
                type: integer
                format: int32
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Marketplaces - Channel catalogs - Settings
      summary: Save new marketplace settings for a channel catalog
      description: |
        Allow you to configure your marketplace settings.
        Partial update accepted.
      operationId: SetChannelCatalogMarketplaceSettings
      parameters:
        - name: channelCatalogId
          in: path
          description: Channel Catalog Id to query
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        description: Settings to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setChannelCatalogMarketplaceSettingsRequest'
        required: true
      responses:
        '204':
          description: Successfully saved channel catalog marketplace settings
          content: {}
        '400':
          description: >-
            One or more channel catalog marketplace property keys or values are
            invalid for requested marketplace channel catalog. See response for
            details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Marketplace channel catalog not found
          content: {}
        '503':
          description: >-
            The marketplace configuration related to this channel catalog is
            currently in progress. Please retry later.
          headers:
            Retry-After:
              description: Indicate the duration to before the next retry in second.
              schema:
                type: integer
                format: int32
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: model
  /v2/user/marketplaces/orders/:
    get:
      tags:
        - Marketplaces - Orders - Global
      summary: '[DEPRECATED] Get all actions you can do on the order API'
      operationId: GetOrderIndex
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Order index
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderIndex'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
      x-tagGroups: Martketplaces Orders
  /v2/user/marketplaces/orders/status:
    get:
      tags:
        - Marketplaces - Orders - Global
      summary: >-
        [DEPRECATED] Get current synchronization status between your
        marketplaces and BeezUP accounts
      description: Use /orders/v3
      operationId: GetMarketplaceAccountsSynchronization
      parameters:
        - name: storeId
          in: query
          description: The StoreId to filter by
          schema:
            type: string
            format: guid
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched current synchronization status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountSynchronizationList'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Requested Store could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
      x-tagGroups: Martketplaces Orders
  /v2/user/marketplaces/orders/harvest:
    post:
      tags:
        - Marketplaces - Orders - Global
      summary: '[DEPRECATED] Send harvest request to all your marketplaces'
      operationId: HarvestAll
      parameters:
        - name: storeId
          in: query
          description: The StoreId to filter by
          schema:
            type: string
            format: guid
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
      responses:
        '202':
          description: Successfully sent harvest request to all marketplaces
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content: {}
        '404':
          description: Requested Store could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: >-
            Failed to send harvest request because allowed rate limits have been
            exceeded
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/automaticTransitions:
    get:
      tags:
        - Marketplaces - Orders - AutoTransitions
      summary: Get list of configured automatic Order status transitions
      operationId: GetAutomaticTransitions
      parameters:
        - name: storeId
          in: query
          description: The StoreId to filter by
          schema:
            type: string
            format: guid
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: >-
            Successfully fetched list of configured automatic Order status
            transitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/automaticTransitionInfoList'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Requested Store could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
    post:
      tags:
        - Marketplaces - Orders - AutoTransitions
      summary: Configure new or existing automatic Order status transition
      operationId: ConfigureAutomaticTransitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configureAutomaticTransitionRequest'
        required: true
      responses:
        '204':
          description: >-
            Successfully confirugred new or existing automatic Order status
            transition
          content: {}
        '400':
          description: Requested automatic Order status transition could not be configured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/list/full:
    post:
      tags:
        - Marketplaces - Orders - List
      summary: >-
        [DEPRECATED] Get a paginated list of all Orders with all Order and Order
        Item(s) properties
      description: >
        DEPRECATED - Use /orders/v3 instead

        The purpose of this operation is to reduce the amount of request to the
        API.\

        \

        Previous implmentation of this feature only returned a partial (light)
        version of the Orders. The purpose of this API is to reduce the number
        of incoming requests by returning the complete (full) Order and Order
        Item(s) properties.
      operationId: GetOrderListFull
      parameters:
        - name: Accept-Encoding
          in: header
          description: >-
            Allows the client to indicate wether it accepts a compressed
            encoding to reduce traffic size
          required: true
          style: simple
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderListRequest'
        required: true
      responses:
        '200':
          description: Successfully fetched the full list of Orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderListFull'
        '400':
          description: >-
            Could not process request for given parameters values. Please check
            error message for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/list/light:
    post:
      tags:
        - Marketplaces - Orders - List
      summary: '[DEPRECATED] Get a paginated list of all Orders without details'
      description: Use /orders/v3 instead
      operationId: GetOrderListLight
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderListRequest'
        required: true
      responses:
        '200':
          description: Successfully fetched the list of Orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderListLight'
        '400':
          description: >-
            Could not process request for given parameters values. Please check
            error message for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/exportations:
    get:
      tags:
        - Marketplaces - Orders - Exports
      summary: Get a paginated list of Order report exportations
      operationId: GetOrderExportations
      parameters:
        - name: pageNumber
          in: query
          description: The page number you want to get
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: The entry count you want to get
          required: true
          schema:
            maximum: 100
            minimum: 25
            type: integer
            format: int32
        - name: storeId
          in: query
          description: The store identifier to regroup the order exportations
          required: true
          schema:
            type: string
            format: guid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched the list of Order report exportations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderExportations'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '400':
          description: >-
            Could not process request for given parameters values. Please check
            error message for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
    post:
      tags:
        - Marketplaces - Orders - Exports
      summary: Request a new Order report exportation to be generated
      description: >-
        A new file will be generated containing a summary of all the Orders
        matching the requested filter settings.
      operationId: ExportOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exportOrderListRequest'
        required: true
      responses:
        '202':
          description: Successfully requested new Order report exportation generation
          content: {}
        '400':
          description: >-
            Could not process request for given parameters values. Please check
            error message for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: No orders have been found for this request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/batches/setMerchantOrderInfos:
    post:
      tags:
        - Marketplaces - Orders - Batches
      summary: >-
        [DEPRECATED] Send a batch of operations to set an Order's merchant
        information  (max 100 items per call)
      description: >-
        The purpose of this operation is to reduce the amount of request to the
        API.
      operationId: SetMerchantOrderInfoList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setMerchantOrderInfoListRequest'
        required: true
      responses:
        '202':
          description: >-
            Succesfully received and processed batched operations. Please check
            response to see the status per operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/batches/clearMerchantOrderInfos:
    post:
      tags:
        - Marketplaces - Orders - Batches
      summary: >-
        [DEPRECATED] Send a batch of operations to clear an Order's merchant
        information (max 100 items per call)
      description: >-
        The purpose of this operation is to reduce the amount of request to the
        API.
      operationId: ClearMerchantOrderInfoList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clearMerchantOrderInfoListRequest'
        required: true
      responses:
        '202':
          description: >-
            Succesfully received and processed batched operations. Please check
            response to see the status per operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/batches/changeOrders/{changeOrderType}:
    post:
      tags:
        - Marketplaces - Orders - Batches
      summary: >-
        [DEPRECATED] Send a batch of operations to change your marketplace Order
        information: accept, ship, etc.  (max 100 items per call)
      description: >
        The purpose of this operation is to reduce the amount of request to the
        API. 

        Max 100 items per call.
      operationId: ChangeOrderList
      parameters:
        - name: changeOrderType
          in: path
          description: The Order change type
          required: true
          schema:
            type: string
            x-lov: OrderChangeBusinessOperationType
          x-lov: OrderChangeBusinessOperationType
        - name: userName
          in: query
          description: >-
            Sometimes the user in the e-commerce application is not the same as
            user associated with the current subscription key. We recommend
            providing your application's user login.
          required: true
          schema:
            type: string
        - name: testMode
          in: query
          description: >-
            If true, the operation will be not be sent to marketplace. But the
            validation will be taken in account.
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeOrderListRequest'
        required: true
      responses:
        '202':
          description: >-
            Succesfully received and processed batched operations. Please check
            response to see the status per operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}:
    get:
      tags:
        - Marketplaces - Orders - Order
      summary: '[DEPRECATED] DEPRECATED - Get full Order and Order Item(s) properties'
      description: DEPRECATED - Use /orders/v3 instead
      operationId: GetOrder
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: >
                ETag value to identify the current version of requested Order\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the order\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
    head:
      tags:
        - Marketplaces - Orders - Order
      summary: >-
        [DEPRECATED] DEPRECATED - Get the meta information about the order
        (ETag, Last-Modified)
      description: >
        DEPRECATED - Use /orders/v3 instead

        The purpose of this operation is to reduce the bandwith usage by getting
        just the meta information about the order (ETag, Last-Modified) with the
        body.

        This could be useful
      operationId: HeadOrder
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: >
                ETag value to identify the current version of requested Order\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the order\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history:
    get:
      tags:
        - Marketplaces - Orders - Order
      summary: '[DEPRECATED] Get an Order''s harvest and change history'
      operationId: GetOrderHistory
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched Order history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderHistory'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/harvest:
    post:
      tags:
        - Marketplaces - Orders - Order
      summary: '[DEPRECATED] Send harvest request for a single Order'
      operationId: HarvestOrder
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Successfully sent Order harvest request
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content: {}
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: >-
            Failed to send harvest request because allowed rate limits have been
            exceeded
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/setMerchantOrderInfo:
    post:
      tags:
        - Marketplaces - Orders - Order
      summary: '[DEPRECATED] Set an Order''s merchant information'
      operationId: SetMerchantOrderInfo
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setMerchantOrderInfoRequest'
        required: true
      responses:
        '204':
          description: Successfully set Order merchant order info set
          content: {}
        '400':
          description: >-
            Could not update Order merchant information. Please see body for
            more information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/clearMerchantOrderInfo:
    post:
      tags:
        - Marketplaces - Orders - Order
      summary: '[DEPRECATED] Clear an Order''s merchant information'
      operationId: ClearMerchantOrderInfo
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Successfully cleared Order merchant order info set
          content: {}
        '400':
          description: >-
            Could not update Order merchant information. Please see body for
            more information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
  /v2/user/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/{changeOrderType}:
    post:
      tags:
        - Marketplaces - Orders - Order
      summary: >-
        [DEPRECATED] Change your marketplace Order Information (accept, ship,
        etc.)
      operationId: ChangeOrder
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: changeOrderType
          in: path
          description: The Order change type
          required: true
          schema:
            type: string
            x-lov: OrderChangeBusinessOperationType
          x-lov: OrderChangeBusinessOperationType
        - name: userName
          in: query
          description: >-
            Sometimes the user in the e-commerce application is not the same as
            user associated with the current subscription key. We recommend
            providing your application's user login.
          required: true
          schema:
            type: string
        - name: testMode
          in: query
          description: >-
            If true, the operation will be not be sent to marketplace. But the
            validation will be taken in account.
          schema:
            type: boolean
            default: false
        - name: If-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To ensure that you are making a change on the lastest version of the
            resource.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeOrderRequest'
        required: false
      responses:
        '202':
          description: Order change request accepted
          content: {}
        '400':
          description: >-
            Invalid order change request, could not be send to the marketplace.
            Please check the body of this request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: |
            Already processing a change request for this Order.\
            Please refresh your clients Order information and retry later.
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '412':
          description: >-
            The ETag sent in the http header If-Match did not match with the
            current version. Please refresh the information related to this
            resource.
          headers:
            ETag:
              description: >
                The ETag value to identify the resource.\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: true
      x-releaseStatus: DEPRECATED
      x-codegen-request-body-name: request
  # /orders/v3/lov/orderManagementReadyMarketplaceBusinessCode:
  #   get:
  #     tags:
  #       - Marketplaces - Orders V3 - Global
  #     description: Get the list of MarketplaceBusinessCode ready for Order Management
  #     operationId: GetOrderManagementReadyMarketplaceBusinessCode
  #     parameters:
  #       - name: Accept-Language
  #         in: header
  #         description: Indicates that the client accepts the following languages.
  #         style: simple
  #         explode: false
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #       - name: storeIds
  #         in: query
  #         description: StoredIds to filter
  #         style: form
  #         explode: false
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #     responses:
  #       '200':
  #         description: Successfully fetched current synchronization status
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/oMReadyMarketplaceBusinessCodeResponse'
  #       '304':
  #         description: >-
  #           The ETag sent in the http header If-None-Match did not change. So
  #           you are up to date !
  #         headers:
  #           ETag:
  #             description: >
  #               ETag value to identify the current version of the resource\

  #               For more details go to this link:
  #               http://tools.ietf.org/html/rfc7232#section-2.3
  #             schema:
  #               type: string
  #           Last-Modified:
  #             description: >
  #               Last modification UTC date of the resource\

  #               For more details go to this link:
  #               https://tools.ietf.org/html/rfc7232#section-2.2
  #             schema:
  #               type: string
  #               format: date-time
  #         content: {}
  #       '404':
  #         description: Requested Store could not be found
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/errorResponseMessage'
  #       default:
  #         description: Occurs when something goes wrong
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /orders/v3/status:
    get:
      tags:
        - Marketplaces - Orders V3 - Global
      description: >-
        Get current synchronization status between your marketplaces and BeezUP
        accounts
      operationId: GetMarketplaceAccountsSynchronizationV3
      parameters:
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
        - name: storeIds
          in: query
          description: StoredIds to filter
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: >-
            Successfully fetched the list of MarketplaceBusinessCode ready for
            Order Management
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountSynchronizationList'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '400':
          description: Invalid store id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /orders/v3/harvest:
    post:
      tags:
        - Marketplaces - Orders V3 - Global
      summary: Send harvest request to all your marketplaces
      operationId: HarvestAllV3
      parameters:
        - name: storeId
          in: query
          description: The StoreId to filter by
          schema:
            type: string
            format: StoreId
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
      responses:
        '202':
          description: Successfully sent harvest request to all marketplaces
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content: {}
        '404':
          description: Requested Store could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '409':
          description: >-
            Failed to send harvest request because allowed rate limits have been
            exceeded
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
  /orders/v3/list/full:
    post:
      tags:
        - Marketplaces - Orders V3 - List
      summary: >-
        Get a paginated list of all Orders with all Order and Order Item(s)
        properties
      description: >
        The purpose of this operation is to reduce the amount of request to the
        API.\

        \

        Previous implmentation of this feature only returned a partial (light)
        version of the Orders. The purpose of this API is to reduce the number
        of incoming requests by returning the complete (full) Order and Order
        Item(s) properties.
      operationId: GetOrderListFullV3
      parameters:
        - name: Accept-Encoding
          in: header
          description: >-
            Allows the client to indicate wether it accepts a compressed
            encoding to reduce traffic size
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderListRequest'
        required: true
      responses:
        '200':
          description: Successfully fetched the full list of Orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderListFullWithLinks'
        '400':
          description: >-
            Could not process request for given parameters values. Please check
            error message for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-codegen-request-body-name: request
  /orders/v3/list/light:
    post:
      tags:
        - Marketplaces - Orders V3 - List
      summary: Get a paginated list of all Orders without details
      operationId: GetOrderListLightV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderListRequest'
        required: true
      responses:
        '200':
          description: Successfully fetched the list of Orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderListLightWithLinks'
        '400':
          description: >-
            Could not process request for given parameters values. Please check
            error message for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-codegen-request-body-name: request
  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}:
    get:
      tags:
        - Marketplaces - Orders V3 - Order
      summary: Get full Order and Order Item(s) properties
      operationId: GetOrderV3
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: >
                ETag value to identify the current version of requested Order\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the order\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderWithLinks'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
    head:
      tags:
        - Marketplaces - Orders V3 - Order
      summary: Get the meta information about the order (ETag, Last-Modified)
      description: >
        The purpose of this operation is to reduce the bandwith usage by getting
        just the meta information about the order (ETag, Last-Modified) with the
        body.

        This could be useful
      operationId: HeadOrderV3
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: If-None-Match
          in: header
          description: >
            ETag value to identify the last known version of requested
            resource.\

            To avoid useless exchange, we recommend you to indicate the ETag you
            previously got from this operation.\

            If the ETag value does not match the response will be 200 to give
            you a new content, otherwise the response will be: 304 Not Modified,
            without any content.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched Order and Order Item(s) properties
          headers:
            ETag:
              description: >
                ETag value to identify the current version of requested Order\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the order\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/{changeOrderType}:
    post:
      tags:
        - Marketplaces - Orders V3 - Order
      summary: Change your marketplace Order Information (accept, ship, etc.)
      operationId: ChangeOrderV3
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: changeOrderType
          in: path
          description: The Order change type
          required: true
          schema:
            type: string
            x-lov: OrderChangeBusinessOperationType
          x-lov: OrderChangeBusinessOperationType
        - name: userName
          in: query
          description: >-
            Sometimes the user in the e-commerce application is not the same as
            user associated with the current subscription key. We recommend
            providing your application's user login.
          required: true
          schema:
            type: string
        - name: testMode
          in: query
          description: >-
            If true, the operation will be not be sent to marketplace. But the
            validation will be taken in account.
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeOrderRequest'
        required: false
      responses:
        '202':
          description: Order change request accepted
          headers:
            Location:
              description: >-
                Indicate the address you should follow to know the status of
                your order change operation
              schema:
                type: string
          content: {}
        '400':
          description: >-
            Invalid order change request, could not be send to the marketplace.
            Please check the body of this request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '409':
          description: |
            Already processing a change request for this Order.\
            Please refresh your clients Order information and retry later.
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
            Location:
              description: >-
                Indicate the address you should follow to know the status of the
                existing order change operation
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '412':
          description: >-
            The ETag sent in the http header If-Match did not match with the
            current version. Please refresh the information related to this
            resource.
          headers:
            ETag:
              description: >
                The ETag value to identify the resource.\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
          content: {}
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-codegen-request-body-name: request
  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history:
    get:
      tags:
        - Marketplaces - Orders V3 - Order
      summary: Get an Order's harvest and change history
      operationId: GetOrderHistoryV3
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully fetched Order history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderHistory'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/harvest:
    post:
      tags:
        - Marketplaces - Orders V3 - Order
      summary: Send harvest request for a single Order
      operationId: HarvestOrderV3
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Successfully sent Order harvest request
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content: {}
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '409':
          description: >-
            Failed to send harvest request because allowed rate limits have been
            exceeded
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-validation:
        - validatorName: userAuthorized
          statusCode: '401'
        - validatorName: orderExists
          statusCode: '404'
  /orders/v3/{marketplaceTechnicalCode}/{accountId}/harvest:
    post:
      tags:
        - Marketplaces - Orders V3 - Order
      summary: Send harvest request for an Account
      operationId: HarvestAccount
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: marketplaceOrderId
          in: query
          schema:
            type: string
        - name: beezUPOrderId
          in: query
          schema:
            type: string
      responses:
        '202':
          description: Successfully sent Order harvest request
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content: {}
        '404':
          description: Requested Account Or beezUPOrderId could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '409':
          description: >-
            Failed to send harvest request because allowed rate limits have been
            exceeded
          headers:
            Retry-After:
              description: >-
                Indicates the duration in seconds to wait to be able to make
                this request again
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-validation:
        - validatorName: userAuthorized
          statusCode: '401'
        - validatorName: accountExists
          statusCode: '404'
        - validatorName: beezUPOrderIdExists
          statusCode: '404'
  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/history/{orderChangeExecutionUUID}:
    get:
      tags:
        - Marketplaces - Orders V3 - Order
      summary: Get the order change reporting
      description: >-
        This operation will help you to know the status of your order change
        operation
      operationId: GetOrderChangeReportingV3
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: orderChangeExecutionUUID
          in: path
          description: The order change execution id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched Order change reporting
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/changeOrderReporting'
        '304':
          description: >-
            The ETag sent in the http header If-None-Match did not change. So
            you are up to date !
          headers:
            ETag:
              description: >
                ETag value to identify the current version of the resource\

                For more details go to this link:
                http://tools.ietf.org/html/rfc7232#section-2.3
              schema:
                type: string
            Last-Modified:
              description: >
                Last modification UTC date of the resource\

                For more details go to this link:
                https://tools.ietf.org/html/rfc7232#section-2.2
              schema:
                type: string
                format: date-time
          content: {}
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/setMerchantOrderInfo:
    post:
      tags:
        - Marketplaces - Orders V3 - Order
      summary: Set an Order's merchant information
      operationId: SetMerchantOrderInfoV3
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: testMode
          in: query
          description: >-
            If true, the operation will be not be sent to marketplace. But the
            validation will be taken in account.
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setMerchantOrderInfoRequest'
        required: true
      responses:
        '202':
          description: Set Order merchant order info accepted
          content: {}
        '400':
          description: >-
            Could not update Order merchant information. Please see body for
            more information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-codegen-request-body-name: request
  /orders/v3/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}/clearMerchantOrderInfo:
    post:
      tags:
        - Marketplaces - Orders V3 - Order
      summary: Clear an Order's merchant information
      operationId: ClearMerchantOrderInfoV3
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The marketplace technical code
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: beezUPOrderId
          in: path
          description: The BeezUP Order identifier
          required: true
          schema:
            type: string
            format: uuid
        - name: testMode
          in: query
          description: >-
            If true, the operation will be not be sent to marketplace. But the
            validation will be taken in account.
          schema:
            type: boolean
            default: false
      responses:
        '202':
          description: Clear Order merchant order info accepted
          content: {}
        '400':
          description: >-
            Could not update Order merchant information. Please see body for
            more information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '404':
          description: Requested Order could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
  /orders/v3/batches/setMerchantOrderInfos:
    post:
      tags:
        - Marketplaces - Orders V3 - Batches
      summary: >-
        Send a batch of operations to set an Order's merchant information  (max
        100 items per call)
      description: >-
        The purpose of this operation is to reduce the amount of request to the
        API.
      operationId: SetMerchantOrderInfoListV3
      parameters:
        - name: testMode
          in: query
          description: >-
            If true, the operation will be not be sent to marketplace. But the
            validation will be taken in account.
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setMerchantOrderInfoListRequest'
        required: true
      responses:
        '202':
          description: >-
            Succesfully received and processed batched operations. Please check
            response to see the status per operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /orders/v3/batches/clearMerchantOrderInfos:
    post:
      tags:
        - Marketplaces - Orders V3 - Batches
      summary: >-
        Send a batch of operations to clear an Order's merchant information (max
        100 items per call)
      description: >-
        The purpose of this operation is to reduce the amount of request to the
        API.
      operationId: ClearMerchantOrderInfoListV3
      parameters:
        - name: testMode
          in: query
          description: >-
            If true, the operation will be not be sent to marketplace. But the
            validation will be taken in account.
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clearMerchantOrderInfoListRequest'
        required: true
      responses:
        '202':
          description: >-
            Succesfully received and processed batched operations. Please check
            response to see the status per operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-codegen-request-body-name: request
  /orders/v3/batches/changeOrders/{changeOrderType}:
    post:
      tags:
        - Marketplaces - Orders V3 - Batches
      summary: >-
        Send a batch of operations to change your marketplace Order information:
        accept, ship, etc.  (max 100 items per call)
      description: >
        The purpose of this operation is to reduce the amount of request to the
        API. 

        Max 100 items per call.
      operationId: ChangeOrderListV2
      parameters:
        - name: userName
          in: query
          description: >-
            Sometimes the user in the e-commerce application is not the same as
            user associated with the current subscription key. We recommend
            providing your application's user login.
          required: true
          schema:
            type: string
        - name: testMode
          in: query
          description: >-
            If true, the operation will be not be sent to marketplace. But the
            validation will be taken in account.
          schema:
            type: boolean
            default: false
        - name: changeOrderType
          in: path
          description: The Order change type
          required: true
          schema:
            type: string
            x-lov: OrderChangeBusinessOperationType
          x-lov: OrderChangeBusinessOperationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeOrderListRequestV2'
        required: true
      responses:
        '202':
          description: >-
            Succesfully received and processed batched operations. Please check
            response to see the status per operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-codegen-request-body-name: request
  /orders/v3/batches/changeOrders:
    post:
      tags:
        - Marketplaces - Orders V3 - Batches
      summary: >-
        Send a batch of operations to change your marketplace Order information:
        accept, ship, etc.  (max 100 items per call)
      description: >
        The purpose of this operation is to reduce the amount of request to the
        API. 

        Max 100 items per call.
      operationId: ChangeOrderListV3
      parameters:
        - name: userName
          in: query
          description: >-
            Sometimes the user in the e-commerce application is not the same as
            user associated with the current subscription key. We recommend
            providing your application's user login.
          required: true
          schema:
            type: string
        - name: testMode
          in: query
          description: >-
            If true, the operation will be not be sent to marketplace. But the
            validation will be taken in account.
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changeOrderListRequest'
        required: true
      responses:
        '202':
          description: >-
            Succesfully received and processed batched operations. Please check
            response to see the status per operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/batchOrderOperationResponse'
        '400':
          description: Requested too many batch operations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/subscriptions/:
    get:
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
      summary: Get the subscription list
      operationId: GetSubscriptionList
      responses:
        '200':
          description: The subscription list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subscriptionIndex'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
      x-basePath: /v2/user/marketplaces/orders/subscriptions
  /v2/user/marketplaces/orders/subscriptions/{id}:
    get:
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
      summary: Get a subscription to the orders
      operationId: GetSubscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: SubscriptionId
      responses:
        '200':
          description: Subscription info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptionIndex'
        '404':
          description: The subscription is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionNotFoundException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
      summary: Creates a subscription to the orders
      description: >-
        Please take a look at this sequence diagram to understand the
        subscription process to follow
        [here](https://www.websequencediagrams.com/files/render?link=SBYbeIc8NGshk6ooCbmjoBLIMl4fIGO1xjJbPBQAglBo0n6BwEReh7NXQiPSjOTX)
      operationId: CreateSubscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: SubscriptionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSubscriptionRequest'
        required: true
      responses:
        '202':
          description: Subscription creation accepted
          content: {}
        '400':
          description: Invalid subscription request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '404':
          description: The subscription is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionNotFoundException
        '409':
          description: The subscription id is already used.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionAlreadyExistsException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
    delete:
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
      summary: Delete a subscription to the orders
      operationId: DeleteSubscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: SubscriptionId
      responses:
        '202':
          description: Subscription deletion accepted
          content: {}
        '404':
          description: The subscription is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionNotFoundException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      deprecated: false
  /v2/user/marketplaces/orders/subscriptions/{id}/reporting:
    get:
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
      summary: Get the push reporting related to this subscription
      operationId: GetSubscriptionPushReporting
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: SubscriptionId
        - name: pageNumber
          in: query
          schema:
            minimum: 1
            type: integer
            format: PageNumber
        - name: pageSize
          in: query
          schema:
            maximum: 100
            minimum: 1
            type: integer
            format: PageSize
      responses:
        '200':
          description: Subscription push reporting info
          headers:
            X-Total-Count:
              description: The total item count related to this query
              schema:
                type: integer
            Link:
              description: >-
                Based on the RFC 5988 - Web Linking, the page navigation will be
                indicated here with the rel=next, rel=previous, rel=first,
                rel=last, the pageNumber and the pageSize will be indicated in
                the link param
              schema:
                type: array
                items:
                  type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/subscriptionPushReporting'
        '404':
          description: The subscription is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionNotFoundException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/marketplaces/orders/subscriptions/{id}/activate:
    post:
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
      summary: Activate a subscription to the orders
      description: >
        At this moment, BeezUP will ensure that your callback url is respecting
        this specification: 

        -
        https://app.swaggerhub.com/apis/BeezUP/public_marketplaces_orders_subscriptions_consumer-dev/1.0#/Subscriptions/Verification


        After that we will send you the orders related to your subscription,
        respecting this specification: 

        -
        https://app.swaggerhub.com/apis/BeezUP/public_marketplaces_orders_subscriptions_consumer-dev/1.0#/Subscriptions/PushOrders
      operationId: ActivateSubscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: SubscriptionId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activateSubscriptionRequest'
        required: false
      responses:
        '202':
          description: Subscription activation accepted
          content: {}
        '400':
          description: Activation subscription request is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
        '404':
          description: The subscription is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionNotFoundException
        '503':
          description: The target url is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionTargetNotAvailableException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/subscriptions/{id}/deactivate:
    post:
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
      summary: Deactivate a subscription to the orders
      operationId: DeactivateSubscription
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: SubscriptionId
      responses:
        '202':
          description: Subscription deactivation accepted
          content: {}
        '404':
          description: The subscription is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionNotFoundException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/marketplaces/orders/subscriptions/{id}/retry:
    post:
      tags:
        - Marketplaces - Orders - Subscriptions - Subscriptions
      summary: Force retry push orders immediatly
      description: >-
        In case your subscription consumption is unavailable and your
        subscription is still active you can ask to retry immediatly to push
        orders instead of waiting the next scheduled retry date
      operationId: RetryPushOrders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: SubscriptionId
      responses:
        '202':
          description: Retry push orders request accepted
          content: {}
        '404':
          description: The subscription is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionNotFoundException
        '409':
          description: >-
            The subscription is deactivated or your subscription consumption
            availability status is available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderSubscriptionRetryRejectedException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/marketplaces/orders/invoices/settings/general:
    get:
      tags:
        - OM Invoice - API - Settings
      summary: Get Order Invoice general settings
      operationId: GetOrderInvoiceGeneralSettings
      responses:
        '200':
          description: Settings successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrderInvoiceGeneralSettingsResponse'
        '403':
          description: The ownerId is not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - UserNotOwnerException
        '404':
          description: |
            The order invoice general settings are not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderInvoiceGeneralSettingsNotFoundException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    put:
      tags:
        - OM Invoice - API - Settings
      summary: Save Order Invoice general settings
      operationId: SaveOrderInvoiceGeneralSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderInvoiceGeneralSettings'
        required: true
      responses:
        '204':
          description: General Settings successfully saved
          content: {}
        '400':
          description: |
            The settingsgeneral did not pass the validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderInvoiceGeneralSettingsValidationFailedException
        '403':
          description: The ownerId is not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - UserNotOwnerException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/invoices/settings/design:
    get:
      tags:
        - OM Invoice - API - Settings
      summary: Get Order Invoice design settings
      operationId: GetOrderInvoiceDesignSettings
      responses:
        '200':
          description: Design successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderInvoiceDesignSettings'
        '403':
          description: The ownerId is not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - UserNotOwnerException
        '404':
          description: |
            The order invoice design is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderInvoiceDesignSettingsNotFoundException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    put:
      tags:
        - OM Invoice - API - Settings
      summary: Save Order Invoice design settings
      operationId: SaveOrderInvoiceDesignSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderInvoiceDesignSettings'
        required: true
      responses:
        '204':
          description: Design successfully saved
          content: {}
        '400':
          description: |
            The design did not pass the validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderInvoiceDesignSettingsValidationFailedException
        '403':
          description: The ownerId is not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - UserNotOwnerException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/invoices/settings/design/preview:
    post:
      tags:
        - OM Invoice - API - Settings
      summary: View a preview an Order Invoice using custom design settings
      operationId: GetOrderInvoiceDesignSettingsPreview
      parameters:
        - name: Accept-Encoding
          in: header
          description: >-
            Allows the client to indicate wether it accepts a compressed
            encoding to reduce traffic size
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderInvoiceDesignSettings'
        required: true
      responses:
        '200':
          description: Design Preview successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrderInvoiceDesignPreviewResponse'
        '403':
          description: The ownerId is not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - UserNotOwnerException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/invoices/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderUUID}/generate:
    post:
      tags:
        - OM Invoice - API - Generation
      summary: Generate an Order Invoice
      operationId: GenerateOrderInvoice
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The Marketplace Technical Code
          required: true
          schema:
            type: string
            format: MarketplaceTechnicalCode
        - name: accountId
          in: path
          description: The Account Identifier
          required: true
          schema:
            type: string
            format: MarketplaceAccountId
        - name: beezUPOrderUUID
          in: path
          description: The BeezUP Order UUID
          required: true
          schema:
            type: string
            format: BeezUPOrderUUID
        - name: userName
          in: query
          description: >-
            Sometimes the user in the e-commerce application is not the same as
            user associated with the current subscription key. We recommend
            providing your application's user login.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generateOrderInvoiceRequest'
        required: true
      responses:
        '202':
          description: Request Accepted.
          headers:
            Location:
              description: >-
                The location of the generated invoice. Might take a few seconds
                to be available
              schema:
                type: string
          content: {}
        '403':
          description: |
            OwnerId not authorized
            The required order invoice settings have not been set
            BeezUPOrderStatus forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - UserNotOwnerException
            - OrderInvoiceDesignSettingsNotFoundException
            - OrderInvoiceGeneralSettingsNotFoundException
            - OrderInvoiceGenerationBeezUPOrderStatusForbiddenException
        '404':
          description: |
            The order cannot be retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderNotFoundException
        '409':
          description: |
            The InvoiceNumber is already used
            There is already an invoice for this order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderInvoiceNumberAlreadyUsedException
            - OrderAlreadyHasInvoiceException
        '429':
          description: |
            Too many Requests. Please retry in a few seconds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderInvoiceTooManyRequestsException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/invoices/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderUUID}/preview:
    post:
      tags:
        - OM Invoice - API - Generation
      summary: View a preview an Order Invoice
      operationId: GetOrderInvoicePreview
      parameters:
        - name: marketplaceTechnicalCode
          in: path
          description: The Marketplace Technical Code
          required: true
          schema:
            type: string
            format: MarketplaceTechnicalCode
        - name: accountId
          in: path
          description: The Account Identifier
          required: true
          schema:
            type: string
            format: MarketplaceAccountId
        - name: beezUPOrderUUID
          in: path
          description: The BeezUP Order UUID
          required: true
          schema:
            type: string
            format: BeezUPOrderUUID
        - name: Accept-Encoding
          in: header
          description: >-
            Allows the client to indicate wether it accepts a compressed
            encoding to reduce traffic size
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/previewOrderInvoiceRequest'
        required: true
      responses:
        '200':
          description: Order Invoice preview successfully returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/previewOrderInvoiceResponse'
        '403':
          description: |
            OwnerId not authorized
            The required order invoice settings have not been set
            BeezUPOrderStatus forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - UserNotOwnerException
            - OrderInvoiceDesignSettingsNotFoundException
            - OrderInvoiceGeneralSettingsNotFoundException
            - OrderInvoiceGenerationBeezUPOrderStatusForbiddenException
        '404':
          description: |
            The order cannot be retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderNotFoundException
        '409':
          description: |
            The InvoiceNumber is already used
            There is already an invoice for this order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderInvoiceNumberAlreadyUsedException
            - OrderAlreadyHasInvoiceException
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/marketplaces/orders/invoices/getPdfInvoice:
    post:
      tags:
        - OM Invoice - API - Generation
      summary: Returns the PDF version of the invoice
      operationId: GetOrderInvoicePdf
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getOrderInvoicePdfFromHtmlInvoiceUrlRequest'
        required: true
      responses:
        '200':
          description: The PDF version of the HTML invoice URL in the request
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '403':
          description: The ownerId is not found or not authorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - UserNotOwnerException
        '404':
          description: |
            The order invoice does not exist
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/errorResponseMessage'
          x-exceptions:
            - OrderInvoiceNotFoundException
        default:
          description: Occurs when something goes wrong
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/:
    get:
      tags:
        - Analytics - Global
      summary: Get the Analytics API operation index
      operationId: AnalyticsIndex
      responses:
        '200':
          description: Analytics API operation index
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analyticsIndex'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}:
    get:
      tags:
        - Analytics - Global
      summary: Get the Analytics API operation index for one store
      operationId: AnalyticsStoreIndex
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Analytics API operation index for one store
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analyticsStoreIndex'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/tracking/status:
    get:
      tags:
        - Analytics - Tracking
      summary: Get the global synchronization status of clicks and orders
      description: |
        Clicks and orders are eventually consistent. \
        This operation gets the current global state of projections.
      operationId: GetTrackingStatus
      responses:
        '200':
          description: The tracking status informations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackingStatus'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/tracking/status:
    get:
      tags:
        - Analytics - Tracking
      summary: Get the synchronization status of clicks and orders of a store
      description: |
        Clicks and orders are eventually consistent. \
        This operation gets the current state of projections for a store.
      operationId: GetStoreTrackingStatus
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Store Tracking Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/storeTrackingStatus'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/tracking/clicks:
    get:
      tags:
        - Analytics - Tracking
      summary: Get the latest tracked clicks
      operationId: GetStoreTrackedClicks
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: count
          in: query
          description: The amount of clicks to retrieve
          schema:
            maximum: 100
            minimum: 5
            type: integer
            default: 100
      responses:
        '200':
          description: Click list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackedClicks'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/tracking/orders:
    get:
      tags:
        - Analytics - Tracking
      summary: Get the latest tracked orders
      operationId: GetStoreTrackedOrders
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: count
          in: query
          description: The amount of orders to retrieve
          schema:
            maximum: 100
            minimum: 5
            type: integer
            default: 100
      responses:
        '200':
          description: Order list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackedOrders'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/tracking/externalorders:
    get:
      tags:
        - Analytics - Tracking
      summary: Get the latest tracked external orders
      operationId: GetStoreTrackedExternalOrders
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: count
          in: query
          description: The amount of external orders to retrieve
          schema:
            maximum: 100
            minimum: 5
            type: integer
            default: 100
      responses:
        '200':
          description: External Order list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trackedExternalOrders'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/reports/byday:
    post:
      tags:
        - Analytics - Statistics
      summary: Get the report by day for a StoreId
      description: Get the report by day for a StoreId
      operationId: GetStoreReportByDayPerStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reportByDayRequest'
        required: true
      responses:
        '200':
          description: Your reporting by day
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportByDayPerStoreResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/reports/byday:
    post:
      tags:
        - Analytics - Statistics
      summary: Get the report by day for a StoreId
      description: Get the report by day for a StoreId
      operationId: GetStoreReportByDay
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reportByDayRequest'
        required: true
      responses:
        '200':
          description: Your reporting by day
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportByDayResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/reports/bychannel:
    post:
      tags:
        - Analytics - Statistics
      summary: Get the report by channel
      description: Get the report by channel
      operationId: GetStoreReportByChannel
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reportByChannelRequest'
        required: true
      responses:
        '200':
          description: Your reporting by channel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportByChannelResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/reports/bycategory:
    post:
      tags:
        - Analytics - Statistics
      summary: Get the report by category
      description: Get the report by category
      operationId: GetStoreReportByCategory
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reportByCategoryRequest'
        required: true
      responses:
        '200':
          description: Your reporting by channel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportByCategoryResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/reports/byproduct:
    post:
      tags:
        - Analytics - Statistics
      summary: Get the report by product
      description: Get the report by product
      operationId: GetStoreReportByProduct
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reportByProductRequest'
        required: true
      responses:
        '200':
          description: Your reporting by product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportByProductResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/optimisations/all/{actionName}:
    post:
      tags:
        - Analytics - Optimisations
      summary: Optimise all products
      description: |
        /!\ WARNING /!\ \
        Apply the operation on every product related to this request. \
        This operation is used at the bottom of the analytics page result.
      operationId: OptimiseAll
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: actionName
          in: path
          required: true
          schema:
            type: string
            format: optimisationActionName
            enum:
              - reenable
              - disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/optimiseAllRequest'
        required: true
      responses:
        '204':
          description: Products optimisatized
          content: {}
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/optimisations/{actionName}:
    post:
      tags:
        - Analytics - Optimisations
      summary: Optimise products by page
      description: |
        /!\ WARNING /!\ \
        Apply the operation on every product related to this request. \
        This operation is used at the bottom of the analytics page result.
      operationId: Optimise
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: actionName
          in: path
          required: true
          schema:
            type: string
            format: optimisationActionName
            enum:
              - reenable
              - disable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/optimiseRequest'
        required: true
      responses:
        '204':
          description: Products optimisatized
          content: {}
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/optimisations/bychannel/{channelId}/{actionName}:
    post:
      tags:
        - Analytics - Optimisations
      summary: Optimise products by channel
      description: |
        /!\ WARNING /!\ \
        Apply the operation on every product on this channel.
      operationId: OptimiseByChannel
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: channelId
          in: path
          description: The channel identifier concerned by this optimisation
          required: true
          schema:
            type: string
            format: guid
        - name: actionName
          in: path
          required: true
          schema:
            type: string
            format: optimisationActionName
            enum:
              - reenable
              - disable
      responses:
        '204':
          description: Products optimisatized
          content: {}
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/optimisations/bycategory/{catalogCategoryId}/{actionName}:
    post:
      tags:
        - Analytics - Optimisations
      summary: Optimise products by category
      description: >
        /!\ WARNING /!\ \

        This operation will reenable or disable products's category for every
        channel indicated in the body.
      operationId: OptimiseByCategory
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: catalogCategoryId
          in: path
          description: The category identifier concerned by this optimisation
          required: true
          schema:
            type: string
            format: guid
        - name: actionName
          in: path
          required: true
          schema:
            type: string
            format: optimisationActionName
            enum:
              - reenable
              - disable
      requestBody:
        description: The channel identifier list concerned by this optimisation
        content:
          application/json:
            schema:
              maxItems: 1
              minItems: 1
              type: array
              example:
                - a2d38563-50f0-43f1-be2b-b16e7ec4f007
              items:
                type: string
                format: guid
        required: false
      responses:
        '204':
          description: Products optimisatized
          content: {}
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/optimisations/byproduct/{productId}/{actionName}:
    post:
      tags:
        - Analytics - Optimisations
      summary: Optimise product
      description: >
        /!\ WARNING /!\ \

        This operation will reenable or disable this product for every channel
        indicated in the body.
      operationId: OptimiseByProduct
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: productId
          in: path
          description: The product identifier concerned by this optimisation
          required: true
          schema:
            type: string
            format: guid
        - name: actionName
          in: path
          required: true
          schema:
            type: string
            format: optimisationActionName
            enum:
              - reenable
              - disable
      requestBody:
        description: The channel identifier list concerned by this optimisation
        content:
          application/json:
            schema:
              maxItems: 1
              minItems: 1
              type: array
              example:
                - a2d38563-50f0-43f1-be2b-b16e7ec4f007
              items:
                type: string
                format: guid
        required: false
      responses:
        '204':
          description: Product(s) optimisatized
          content: {}
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/optimisations/copy:
    post:
      tags:
        - Analytics - Optimisations
      summary: Copy product optimisations between 2 channels
      operationId: CopyOptimisation
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/copyOptimisationRequest'
        required: true
      responses:
        '200':
          description: Products optimisatisation copied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/copyOptimisationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/reports/filters:
    get:
      tags:
        - Analytics - Reports
      summary: Get report filter list for the given store
      operationId: GetReportFilters
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Report filter list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportFilterList'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/reports/filters/{reportFilterId}:
    get:
      tags:
        - Analytics - Reports
      summary: Get the report filter description
      operationId: GetReportFilter
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: reportFilterId
          in: path
          description: Your report filter identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Report filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportFilter'
        '404':
          description: Report filter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    put:
      tags:
        - Analytics - Reports
      summary: Save the report filter
      operationId: SaveReportFilter
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: reportFilterId
          in: path
          description: Your report filter identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/saveReportFilterRequest'
        required: true
      responses:
        '204':
          description: Report filter saved
          content: {}
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '401':
          description: >-
            This report filter is used by rule. In the error message you will
            find the rule identifier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '403':
          description: >-
            This report filter identifier is already used by another store,
            please check your identifiers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Report filter name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: reportFilter
    delete:
      tags:
        - Analytics - Reports
      summary: Delete the report filter
      operationId: DeleteReportFilter
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: reportFilterId
          in: path
          description: Your report filter identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Report filter deleted
          content: {}
        '401':
          description: >-
            This report filter is used by rule. In the error message you will
            find the rule identifier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Report filter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/rules:
    get:
      tags:
        - Analytics - Rules
      summary: Gets the list of rules for a given store
      operationId: GetRules
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Rule list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleList'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    post:
      tags:
        - Analytics - Rules
      summary: Rule creation
      operationId: CreateRule
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRuleRequest'
        required: true
      responses:
        '204':
          description: Rule created
          content: {}
        '400':
          description: Period on filter cannot be custom or filter does not exist
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '401':
          description: >-
            Store not allowed to use rules. Please upgrade your offer or contact
            us.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '403':
          description: >-
            Reached the maximum amount of rules allowed for your offer. Please
            upgrade your offer or contact us.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/rules/{ruleId}:
    get:
      tags:
        - Analytics - Rules
      summary: Gets the rule
      operationId: GetRule
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: ruleId
          in: path
          description: Your rule identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Get Rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    delete:
      tags:
        - Analytics - Rules
      summary: Delete Rule
      operationId: DeleteRule
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: ruleId
          in: path
          description: Your rule identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Rule deleted
          content: {}
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Rules for this store are currently running. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    patch:
      tags:
        - Analytics - Rules
      summary: Update Rule
      operationId: UpdateRule
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: ruleId
          in: path
          description: Your rule identifier
          required: true
          schema:
            type: string
            format: guid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRuleRequest'
        required: true
      responses:
        '204':
          description: Rule updated
          content: {}
        '400':
          description: Filter does not exist or period on filter cannot be custom
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '401':
          description: >-
            Store not allowed to use rules. Please upgrade your offer or contact
            us.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Rules for this store are currently running. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
      x-codegen-request-body-name: request
  /v2/user/analytics/{storeId}/rules/{ruleId}/moveup:
    post:
      tags:
        - Analytics - Rules
      summary: Move the rule up
      operationId: MoveUpRule
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: ruleId
          in: path
          description: Your rule identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Rule moved up
          content: {}
        '400':
          description: Priority can only be changed when more than one rule is defined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Rules for this store are currently running. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/rules/{ruleId}/movedown:
    post:
      tags:
        - Analytics - Rules
      summary: Move the rule down
      operationId: MoveDownRule
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: ruleId
          in: path
          description: Your rule identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Rule moved down
          content: {}
        '400':
          description: Priority can only be changed when more than one rule is defined
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Rules for this store are currently running. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/rules/{ruleId}/enable:
    post:
      tags:
        - Analytics - Rules
      summary: Enable rule
      operationId: EnableRule
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: ruleId
          in: path
          description: Your rule identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Rune enabled
          content: {}
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Rules for this store are currently running. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/rules/{ruleId}/disable:
    post:
      tags:
        - Analytics - Rules
      summary: Disable rule
      operationId: DisableRule
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: ruleId
          in: path
          description: Your rule identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Rule disabled
          content: {}
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Rules for this store are currently running. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/rules/run:
    post:
      tags:
        - Analytics - Rules
      summary: Run all rules for this store
      operationId: RunRules
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: All rules executed.
          content: {}
        '401':
          description: >-
            Store not allowed to use rules. Please upgrade your offer or contact
            us.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Rules for this store are currently running. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/rules/{ruleId}/run:
    post:
      tags:
        - Analytics - Rules
      summary: Run rule
      operationId: RunRule
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: ruleId
          in: path
          description: Your rule identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Rule executed
          content: {}
        '400':
          description: Rule is not enabled. Please enable this run before trying to run it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '401':
          description: >-
            Store not allowed to use rules. Please upgrade your offer or contact
            us.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Rule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '409':
          description: Rules for this store are currently running. Please try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/analytics/{storeId}/rules/executions:
    get:
      tags:
        - Analytics - Rules
      summary: Get the rules execution history
      operationId: GetRulesExecutions
      parameters:
        - name: storeId
          in: path
          description: Your store identifier
          required: true
          schema:
            type: string
            format: guid
        - name: pageNumber
          in: query
          description: The page to retrieve
          required: true
          schema:
            minimum: 1
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: The count of rule history to retrieve
          required: true
          schema:
            maximum: 100
            minimum: 10
            type: integer
            default: 10
      responses:
        '200':
          description: Rules executions list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleExecutionReportings'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        '404':
          description: Store or resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/legacyTracking/channelCatalogs/:
    get:
      tags:
        - Channel Catalogs - Legacy Tracking - Global
      summary: >-
        List all your current channel catalogs configured to use legacy tracking
        format
      operationId: GetLegacyTrackingChannelCatalogs
      parameters:
        - name: storeId
          in: query
          description: The store identifier
          schema:
            type: string
            format: guid
          example: 04730364-9826-4ff3-92e4-51fccd02bf10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacyTrackingChannelCatalogList'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/legacyTracking/channelCatalogs/{channelCatalogId}:
    get:
      tags:
        - Channel Catalogs - Legacy Tracking - Global
      summary: >-
        Get the channel catalog configured to use legacy tracking format
        information
      operationId: GetLegacyTrackingChannelCatalog
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Channel catalog configured to use legacy tracking format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacyTrackingChannelCatalog'
        '404':
          description: Channel catalog not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
  /v2/user/legacyTracking/channelCatalogs/{channelCatalogId}/migrate:
    post:
      tags:
        - Channel Catalogs - Legacy Tracking - Global
      summary: Migrate a channel catalog to current tracking format
      operationId: MigrateLegacyTrackingChannelCatalog
      parameters:
        - name: channelCatalogId
          in: path
          description: The channel catalog identifier
          required: true
          schema:
            type: string
            format: guid
      responses:
        '204':
          description: Channel catalog migrated
          content: {}
        '404':
          description: Channel catalog not found or not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        default:
          description: Occurs when something goes wrong
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
components:
  schemas:
    loginRequest:
      required:
        - login
        - password
      type: object
      properties:
        login:
          $ref: '#/components/schemas/BeezUP_Common_Email'
        password:
          type: string
          description: Your password
          format: password
          example: I@mW0nder$Full
    apiCredentials:
      type: object
      properties:
        credentials:
          type: array
          description: Your API credential list
          example:
            - productName: UserApi
              primaryToken: 3b22980d8d1143c6ba7adf4e55b9a153
              secondaryToken: 162ae17fd52044c38cce3388ea5b0c91
          items:
            $ref: '#/components/schemas/apiCredential'
    apiCredential:
      type: object
      properties:
        productName:
          type: string
          description: The product name related to this credential
          example: UserAPI
        primaryToken:
          type: string
          description: The primary token to be used in the next call in the user scope API
          example: 3b22980d8d1143c6ba7adf4e55b9a153
        secondaryToken:
          type: string
          description: >-
            The secondary token. Could be usefull if you want to share your
            access with someone else.
          example: 162ae17fd52044c38cce3388ea5b0c91
      description: Your api credential
    registerRequest:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
          description: Your email. We refuse disposable email.
          example: myemail@mycompany.com
        password:
          type: string
          description: >
            The password you want to use for your new account. \

            The password length must be greater or equals to 6 and lower or
            equals to 128. \

            The password must contains at least one number and one special
            character
          example: I@mW0nder$Full
        cultureName:
          type: string
          description: >
            Can be null. Default: en-GB. The culture name you want to use. FYI.
            \

            The email activation will use this culture.
          example: en-GB
        commercialOwnerUserId:
          type: string
          description: The user id of your commercial in BeezUP.
          format: uuid
          example: 47ea14ab-195d-4f9a-a24e-32c329ee40f6
    BeezUP_Common_ErrorResponseMessage:
      required:
        - errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'
    BeezUP_Common_Email:
      pattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
      type: string
      description: The email
      format: email
      example: paulsimon@mysupercompany.com
    BeezUP_Common_UserErrorMessage:
      required:
        - code
        - message
      type: object
      properties:
        docUrl:
          $ref: '#/components/schemas/BeezUP_Common_DocUrl'
        code:
          type: string
          description: >-
            the error code. The error code can be a pattern containing the
            argument's name
          example: >-
            CatalogImportationAlreadyInProgress(ExecutionId
            currentCatalogImportationId)
        message:
          type: string
          description: The error message
          example: >
            There is already an importation in progress:
            b24d0dd8-a561-478a-9b26-34f573f03527
        cultureName:
          type: string
          description: If the error is translated, the culture name will be indicated
          example: en
          x-lov: Go2CultureName
        arguments:
          type: array
          description: a dictionary string/object
          items:
            required:
              - name
              - value
            type: object
            properties:
              name:
                type: string
                description: The key of the parameter
                example: currentCatalogImportationId
              value:
                type: object
                properties: {}
                description: The value of the parameter. Depending to the type.
    BeezUP_Common_DocUrl:
      type: string
      description: The documentation related to this operation.
      format: uri
      example: https://api-docs.beezup.com/#operation/EnableChannelCatalog
    publicChannelIndex:
      type: object
      properties:
        channels:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/links.GetChannelsLink'
          description: The key is the country iso code
          example:
            FRA:
              href: /v2/public/channels/FRA
              method: GET
            DEU:
              href: /v2/public/channels/DEU
              method: GET
            ESP:
              href: /v2/public/channels/ESP'
              method: GET
            ITA:
              href: /v2/public/channels/ITA
              method: GET
            GBR:
              href: /v2/public/channels/GBR
              method: GET
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/links.GetChannelsIndexLink'
            channelCountryLov:
              $ref: '#/components/schemas/links.GetPublicListOfValuesLink'
            channelTypeLov:
              $ref: '#/components/schemas/links.GetPublicListOfValuesLink'
            sectorLov:
              $ref: '#/components/schemas/links.GetPublicListOfValuesLink'
          example:
            self:
              href: /v2/public/channels
              method: GET
            channelCountryLov:
              href: /v2/public/lov/www_ChannelCountry
              method: GET
            channelTypeLov:
              href: /v2/public/lov/ChannelType
              method: GET
            sectorLov:
              href: /v2/public/lov/ParamSector
              method: GET
    links.GetPublicListOfValuesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/public/lov/ChannelType
            method: GET
    links.GetChannelsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/public/channels/FRA
            method: GET
    links.GetChannelsIndexLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/public/channels
            method: GET
    publicChannelInfoList:
      type: object
      properties:
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/links.GetChannelsLink'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/publicChannelInfo'
    publicChannelInfo:
      required:
        - homeUrl
        - logoUrl
        - name
        - types
      type: object
      properties:
        name:
          type: string
          description: The channel name
          example: Amazon Direct FRA
        homeUrl:
          type: string
          description: The channel home url
          format: uri
          example: http://www.amazon.fr
        logoUrl:
          type: string
          description: The channel logo url
          format: uri
          example: >-
            http://beezupcdn.blob.core.windows.net/comparators/Amazon%2520Direct%2520FRA.png
        types:
          type: array
          description: The type list related to a channel
          example:
            - Marketplace
          items:
            type: string
        sectors:
          type: array
          description: The sector list related to a channel
          example:
            - BRICOLAGE
            - INFO
            - GENERALIST
          items:
            type: string
    BeezUP_Common_Link3:
      required:
        - href
      type: object
      properties:
        label:
          type: string
          description: >-
            The label corresponding to the link. This label is automatically
            translated based on the Accept-Language http header.
          example: The translated label
        docUrl:
          $ref: '#/components/schemas/BeezUP_Common_DocUrl'
        description:
          type: string
          description: The description of the link
          example: This is a description link
        href:
          $ref: '#/components/schemas/BeezUP_Common_Href'
        operationId:
          $ref: '#/components/schemas/BeezUP_Common_OperationId'
        method:
          $ref: '#/components/schemas/BeezUP_Common_HttpMethod'
        parameters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BeezUP_Common_LinkParameter3'
        urlTemplated:
          type: boolean
          description: indicates whether the href is templated or not
        allRequiredParamsProvided:
          type: boolean
          description: indicates whether all required params have been provided
        allOptionalParamsProvided:
          type: boolean
          description: indicates whether all optionals params have been provided
        info:
          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'
    BeezUP_Common_Href:
      type: string
      description: Indicate the relative uri for this link
      example: >-
        /v2/marketplaces/orders/{marketplaceTechnicalCode}/{accountId}/{beezUPOrderId}
    BeezUP_Common_OperationId:
      type: string
      description: The operationId to call.
      example: GetOrder
    BeezUP_Common_HttpMethod:
      type: string
      description: Indicate the http method to use on this link
      example: GET
      default: GET
      enum:
        - GET
        - POST
        - PATCH
        - DELETE
        - PUT
        - HEAD
    BeezUP_Common_LinkParameter3:
      required:
        - in
      type: object
      properties:
        label:
          type: string
          description: >-
            The label corresponding to the link parameter. This label is
            automatically translated based on the Accept-Language http header.
          example: The translated label
        value:
          type: object
          properties: {}
          description: >-
            The value of the parameter. It can be an integer a string or an
            object.
        required:
          type: boolean
          example: true
          default: false
        in:
          $ref: '#/components/schemas/BeezUP_Common_ParameterIn'
        type:
          $ref: '#/components/schemas/BeezUP_Common_ParameterType'
        lovLink:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        lovRequired:
          type: boolean
          description: >-
            If true, you MUST indicate a value from the list of values otherwise
            it's a freetext
          example: true
        description:
          type: string
          description: description of the parameter
          example: the store identifier
        schema:
          type: string
          description: schema of the parameter
          example: orderListRequest
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BeezUP_Common_LinkParameterProperty3'
          description: >-
            If the parameter is an object with flexible properties
            (additionProperties/dictionary), we will describe the properties of
            the object.
          example:
            shipOrder:
              type: string
    BeezUP_Common_InfoSummaries:
      type: object
      properties:
        successes:
          type: array
          items:
            $ref: '#/components/schemas/BeezUP_Common_SuccessSummary'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BeezUP_Common_ErrorSummary'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/BeezUP_Common_WarningSummary'
        informations:
          type: array
          items:
            $ref: '#/components/schemas/BeezUP_Common_InfoSummary'
    BeezUP_Common_ParameterIn:
      type: string
      description: |
        * path: if the parameter must be pass in the path uri
        * header: if the parameter must be passed in http header
        * query: if the parameter must be passed in querystring
        * body: if the paramter must be passed in the body
      example: path
      enum:
        - path
        - header
        - query
        - body
    BeezUP_Common_ParameterType:
      type: string
      description: The value type of the parameter
      example: string
      default: string
      enum:
        - string
        - integer
        - number
        - boolean
        - object
        - array
        - date
        - date-time
    BeezUP_Common_LOVLink3:
      required:
        - href
      type: object
      properties:
        href:
          type: string
          description: Indicate the uri to the list of value
          format: uri
          example: /v2/public/Go2CultureName
        method:
          $ref: '#/components/schemas/BeezUP_Common_HttpMethod'
      description: Describe the way you have to follow to get access to the LOV
    BeezUP_Common_LinkParameterProperty3:
      required:
        - type
      type: object
      properties:
        label:
          type: string
          description: >-
            The label corresponding to the link parameter property. This label
            is automatically translated based on the Accept-Language http
            header.
          example: The translated label
        value:
          type: object
          properties: {}
          description: >-
            The value of the parameter. It can be an integer a string or an
            object.
        required:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/BeezUP_Common_ParameterType'
        lovLink:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        lovRequired:
          type: boolean
          description: >-
            If true, you MUST use indicate a value from the list of values
            otherwise it's a freetext
          example: true
        description:
          type: string
          description: description of the parameter
          example: the store identifier
        schema:
          type: string
          description: schema of the parameter
          example: orderListRequest
    BeezUP_Common_SuccessSummary:
      type: object
      properties:
        successCode:
          type: string
        successMessage:
          type: string
        successArguments:
          type: object
          additionalProperties:
            type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        objectName:
          type: string
    BeezUP_Common_ErrorSummary:
      type: object
      properties:
        utcDate:
          type: string
          format: date-time
        errorGuid:
          type: string
          format: uuid
        errorCode:
          type: string
        errorMessage:
          type: string
        technicalErrorMessage:
          type: string
        exceptionDetail:
          $ref: '#/components/schemas/BeezUP_Common_ExceptionDetail'
        errorArguments:
          type: object
          additionalProperties:
            type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        objectName:
          type: string
        source:
          type: string
    BeezUP_Common_WarningSummary:
      type: object
      properties:
        technicalErrorMessage:
          type: string
        warningMessage:
          type: string
        warningCode:
          type: string
        warningArguments:
          type: object
          additionalProperties:
            type: string
    BeezUP_Common_InfoSummary:
      type: object
      properties:
        informationCode:
          type: string
        informationMessage:
          type: string
        informationArguments:
          type: object
          additionalProperties:
            type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        objectName:
          type: string
    BeezUP_Common_ExceptionDetail:
      type: object
      properties:
        helpLink:
          type: string
        message:
          type: string
        stackTrace:
          type: string
        type:
          type: string
    publicLovIndex:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/publicLovIndexLinks'
    publicLovIndexLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetPublicLovIndexLink'
        lists:
          $ref: '#/components/schemas/publicLovLinks'
    publicLovLinks:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/links.GetPublicListOfValuesLink'
      description: List of lov link. The key is the list name.
    links.GetPublicLovIndexLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/public/lov
            method: GET
    publicListOfValuesResponse:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/publicListOfValuesResponseLinks'
        items:
          type: array
          items:
            $ref: '#/components/schemas/BeezUP_Common_ListOfValueItem'
    publicListOfValuesResponseLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetPublicListOfValuesLink'
    BeezUP_Common_ListOfValueItem:
      required:
        - codeIdentifier
        - intIdentifier
      type: object
      properties:
        position:
          type: integer
          format: int32
          example: 1
        codeIdentifier:
          type: string
          example: FRA
        translationText:
          type: string
          example: France
        intIdentifier:
          type: integer
          format: int32
          example: 1
      description: This object is used by LOV apis
    userLovIndex:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/userLovIndexLinks'
    userLovIndexLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetUserLovIndexLink'
        lists:
          $ref: '#/components/schemas/userLovLinks'
    userLovLinks:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/links.GetUserListOfValuesLink'
      description: List of lov link. The key is the list name.
    links.GetUserListOfValuesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/lov/Go2CultureName
            method: GET
    links.GetUserLovIndexLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/lov
            method: GET
    userListOfValuesResponse:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/userListOfValuesResponseLinks'
        items:
          type: array
          items:
            $ref: '#/components/schemas/BeezUP_Common_ListOfValueItem'
    userListOfValuesResponseLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetUserListOfValuesLink'
    links.logoutLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/security/logout
            method: POST
    links.getFriendInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/friends/{userId}
            method: GET
            parameters:
              userId:
                in: path
                type: string
                required: true
    links.getStandardOffersLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/offers
            method: GET
    links.getOfferLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/offers
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: offerRequest
    links.getBillingPeriodsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/billingPeriods
            method: GET
    links.getInvoicesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/invoices
            method: GET
    links.getUserAccountInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account
            method: GET
    links.shareStoreLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares
            method: POST
            parameters:
              email:
                type: string
                in: body
                required: true
    links.deleteStoreShareLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares/277596c1-a5a9-4cce-9f34-b5906451a98f
            method: DELETE
    links.getStoresLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/stores
            method: GET
    links.createStoreLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/stores
            method: POST
    links.getStoreLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6
            method: GET
    links.deleteStoreLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6
            method: DELETE
    links.updateStoreLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6
            method: PATCH
    links.getStoreSharesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/shares
            method: GET
    links.createContractLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/contracts
            method: POST
            parameters:
              request:
                in: body
                type: object
                value:
                  offerId: '1'
                  storeCount: '1'
                  couponDiscountCode: I-LOVE-BEEZUP
                  couponOfferCode: 04efc310-bc25-4710-a83a-faf200284fe5
                  billingPeriodInMonth: '12'
    links.saveCreditCardInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account/creditCardInfo
            method: PUT
    links.saveStoreAlertsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/customer/stores/51afae05-277e-4902-8b17-5a811a23a2c6/alerts
            method: POST
    links.savePersonalInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account/personalInfo
            method: PUT
    links.changeEmailLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account/changeEmail
            method: POST
    links.changePasswordLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account/changePassword
            method: POST
    links.saveCompanyInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account/companyInfo
            method: PUT
    links.saveProfilePictureInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account/profilePictureInfo
            method: PUT
    links.getCreditCardInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account/creditCardInfo
            method: GET
    links.getContractsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/contracts
            method: GET
    links.reactivateCurrentContractLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/contracts/current/reenableAutoRenewal
            method: POST
    links.terminateCurrentContractLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/contracts/current/disableAutoRenewal
            method: POST
    links.deleteNextContractLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/contracts/next
            method: DELETE
    links.activateUserAccountLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account/activate
            method: POST
    links.getProfilePictureInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer/account/profilePictureInfo
            method: GET
    links.GetCustomerIndexLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/customer
            method: GET
    errorResponseMessagePaymentRequiredLinks:
      required:
        - offer
      type: object
      properties:
        offer:
          $ref: '#/components/schemas/links.getOfferLink'
    errorResponseMessagePaymentRequired:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
        - required:
            - links
          type: object
          properties:
            links:
              $ref: '#/components/schemas/errorResponseMessagePaymentRequiredLinks'
    customerIndex:
      required:
        - links
        - lovLinks
      type: object
      properties:
        links:
          $ref: '#/components/schemas/customerIndexLinks'
        lovLinks:
          $ref: '#/components/schemas/customerIndexLovLinks'
      description: The index of the customer API
    customerIndexLinks:
      required:
        - accountInfo
        - billingPeriods
        - friendInfo
        - self
        - standardOffers
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetCustomerIndexLink'
        accountInfo:
          $ref: '#/components/schemas/links.getUserAccountInfoLink'
        friendInfo:
          $ref: '#/components/schemas/links.getFriendInfoLink'
        logout:
          $ref: '#/components/schemas/links.logoutLink'
        stores:
          $ref: '#/components/schemas/links.getStoresLink'
        billingPeriods:
          $ref: '#/components/schemas/links.getBillingPeriodsLink'
        standardOffers:
          $ref: '#/components/schemas/links.getStandardOffersLink'
        getOffer:
          $ref: '#/components/schemas/links.getOfferLink'
        invoices:
          $ref: '#/components/schemas/links.getInvoicesLink'
        contracts:
          $ref: '#/components/schemas/links.getContractsLink'
      description: Gives you want you can do on this API
    customerIndexLovLinks:
      type: object
      properties:
        offerLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        activeOfferLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        customerStatusLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        beezUPTimeZoneLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        storeCountryLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        storeSectorLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        countryLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        contractTerminationReasonLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        invoicePaymentStatusLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
    storeShares:
      required:
        - links
        - shares
      type: object
      properties:
        links:
          $ref: '#/components/schemas/storeSharesLinks'
        shares:
          type: array
          items:
            $ref: '#/components/schemas/storeShare'
    storeSharesLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getStoreSharesLink'
        share:
          $ref: '#/components/schemas/links.shareStoreLink'
    storeShare:
      required:
        - links
        - userId
        - userRole
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        userRole:
          $ref: '#/components/schemas/storeUserRole'
        links:
          $ref: '#/components/schemas/storeShareLinks'
    storeShareLinks:
      type: object
      properties:
        deleteShare:
          $ref: '#/components/schemas/links.deleteStoreShareLink'
      description: The different actions you can make on this store share
    storeListLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getStoresLink'
        createStore:
          $ref: '#/components/schemas/links.createStoreLink'
      description: The action links you can do globally on stores
    storeList:
      required:
        - links
        - stores
      type: object
      properties:
        links:
          $ref: '#/components/schemas/storeListLinks'
        stores:
          type: array
          items:
            $ref: '#/components/schemas/store'
    storeUserRole:
      type: string
      description: |
        Indicates the role can have a user on a store.
        * Owner: Indicates that you are the owner of this store
        * User: Indicates that you are a simple user on this store
      example: User
      enum:
        - Owner
        - User
    storeStatus:
      type: string
      description: |
        The store status
        * Active:  When the store is active
        * SystemBlocked:  When the store is blocked by the system
        * UserBlocked: When the store is blocked on GO not on the system
      example: Active
      enum:
        - Active
        - SystemBlocked
        - UserBlocked
    accountStatus:
      type: string
      description: >
        The account status

        * Active:  When the account is active

        * SystemBlocked:  When all stores on the account are blocked by the
        system

        * UserBlocked: When all stores on the account are blocked on GO not on
        the system

        * NotActivated: When the email is not verified
      example: Active
      enum:
        - Active
        - SystemBlocked
        - UserBlocked
        - NotActivated
    store:
      required:
        - countryIsoCodeAlpha3
        - creationUtcDate
        - currencyCode
        - goVersion
        - isTest
        - links
        - name
        - offerId
        - offerName
        - ownerUserId
        - sectors
        - shareCount
        - status
        - storeId
        - url
        - userRole
      type: object
      properties:
        storeId:
          $ref: '#/components/schemas/BeezUP_Common_StoreId'
        name:
          $ref: '#/components/schemas/storeName'
        url:
          $ref: '#/components/schemas/storeUrl'
        countryIsoCodeAlpha3:
          $ref: '#/components/schemas/storeCountryIsoCodeAlpha3'
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        sectors:
          $ref: '#/components/schemas/storeSectors'
        userRole:
          $ref: '#/components/schemas/storeUserRole'
        status:
          $ref: '#/components/schemas/storeStatus'
        ownerUserId:
          type: string
          description: The user id of the owner of the store
          format: guid
          example: 00000000-0000-0000-0000-000000000000
        offerId:
          $ref: '#/components/schemas/offerId'
        offerName:
          type: string
          description: The offer Name
          example: Premium
        shareCount:
          type: integer
          description: The share count related to this store
          example: 5
        creationUtcDate:
          type: string
          description: The creation date of the store
          format: date-time
          example: 2017-04-01T22:30:00.000Z
        goVersion:
          type: integer
          description: The version of GO to use
          format: int32
          example: 2
        links:
          $ref: '#/components/schemas/storeLinks'
        isTest:
          type: boolean
          description: Is the store a test or a production store
    storeLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getStoreLink'
        deleteStore:
          $ref: '#/components/schemas/links.deleteStoreLink'
        updateStore:
          $ref: '#/components/schemas/links.updateStoreLink'
        shares:
          $ref: '#/components/schemas/links.getStoreSharesLink'
        share:
          $ref: '#/components/schemas/links.shareStoreLink'
      description: The action links for this store
    storeName:
      type: string
      description: The store name. Must be unique.
      example: My Store
    storeUrl:
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
      description: The url of your store
      example: http://www.mystore.com
    storeCountryIsoCodeAlpha3:
      type: string
      description: >-
        The country iso code alpha 3 based on the list of values
        /user/lov/StoreCountry
      example: DEU
      x-lov: StoreCountry
    storeSectors:
      type: array
      description: The store's sectors based on the list of values /user/lov/ParamSector
      example:
        - ANIMALERIE
        - AUTOMOTO
      items:
        $ref: '#/components/schemas/storeSector'
    storeSector:
      type: string
      description: The store's sector based on the list of values /user/lov/ParamSector
      example: ANIMALERIE
      x-lov: ParamSector
    contractId:
      type: string
      description: Your contract identifier
      format: guid
      example: 7098487a-86f6-4322-b8a5-b67f7363b3e7
    invoiceNumber:
      type: string
      description: Your invoice number
      example: B1234
    createStoreRequest:
      required:
        - countryIsoCodeAlpha3
        - name
        - sectors
        - url
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BeezUP_Common_StoreId'
        name:
          $ref: '#/components/schemas/storeName'
        url:
          $ref: '#/components/schemas/storeUrl'
        countryIsoCodeAlpha3:
          $ref: '#/components/schemas/storeCountryIsoCodeAlpha3'
        sectors:
          $ref: '#/components/schemas/storeSectors'
      description: >-
        The request to create a store. The store identifier is optional, if null
        it will be automatically computed.
    updateStoreRequest:
      required:
        - name
        - sectors
        - url
      type: object
      properties:
        name:
          $ref: '#/components/schemas/storeName'
        url:
          $ref: '#/components/schemas/storeUrl'
        sectors:
          $ref: '#/components/schemas/storeSectors'
    functionalityRightInfo:
      required:
        - functionalityCode
      type: object
      properties:
        functionalityCode:
          type: string
          description: The functionality code
          example: COMPAMANA
        maxValueInterger:
          type: integer
          description: The max value for this functionality code considering your rights
          example: 10
        unlimited:
          type: boolean
          description: If you can use this functionality unlimitedly
          example: true
      description: Describe the rights for a functionality
    invoiceListLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getInvoicesLink'
    invoiceList:
      required:
        - invoices
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/invoiceListLinks'
        invoices:
          type: array
          example:
            - invoiceDate: 2016-05-01T00:00:00.000Z
              contractId: 7098487a-86f6-4322-b8a5-b67f7363b3e7
              invoiceNumber: B1234
              amount: '101'
              amountToBePaid: '0'
              currencyCode: EUR
              paymentStatus: Paid
              dueDate: 2016-05-10T00:00:00.000Z
              invoiceUrl: >-
                https://beezupbilling.blob.core.windows.net/invoicepdf/2000/CustomerUserId_00000000-0000-0000-0000-000000000000/ContractId_00000000-0000-0000-0000-000000000000/2000-01-01_B1234.pdf
          items:
            $ref: '#/components/schemas/invoice'
    invoicePaymentStatus:
      type: string
      description: The payment status
      example: Paid
      enum:
        - Paid
        - NotPaid
        - PartiallyPaid
        - Loss
    invoice:
      required:
        - amount
        - amountToBePaid
        - contractId
        - currencyCode
        - dueDate
        - invoiceDate
        - invoiceNumber
        - paymentStatus
      type: object
      properties:
        invoiceDate:
          type: string
          description: The invoice date
          format: date
          example: 2016-05-01T00:00:00.000Z
        contractId:
          $ref: '#/components/schemas/contractId'
        invoiceNumber:
          $ref: '#/components/schemas/invoiceNumber'
        amount:
          type: number
          description: The amount of your invoice
          format: double
          example: 101.42
        amountToBePaid:
          type: number
          description: The remaining amount to be paid for this invoice
          format: double
          example: 0
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        paymentStatus:
          $ref: '#/components/schemas/invoicePaymentStatus'
        dueDate:
          type: string
          format: date
          example: 2016-05-10T00:00:00.000Z
        invoiceUrl:
          type: string
          description: The url of the invoice document
          format: uri
          example: >-
            https://beezupbilling.blob.core.windows.net/invoicepdf/2000/CustomerUserId_00000000-0000-0000-0000-000000000000/ContractId_00000000-0000-0000-0000-000000000000/2000-01-01_B1234.pdf
    friendEmail:
      pattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
      type: string
      description: Your friend's user email
      format: email
      example: humphray.bogart@yahoo.ma
    friendCountryIsoCodeAlpha3:
      type: string
      description: Your friend's user country iso code alpha 3
      example: USA
      x-lov: Country
    friendProfilePictureUrl:
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
      description: Your friend's user profile picture url
      example: >-
        https://www.biography.com/.image/c_fill,cs_srgb,dpr_1.0,g_face,h_300,q_80,w_300/MTE4MDAzNDEwNDU3MjMyOTEw/humphrey-bogart-9217486-1-402.jpg
    userFriendInfo:
      required:
        - company
        - countryIsoCodeAlpha3
        - email
        - firstName
        - lastName
        - userId
      type: object
      properties:
        userId:
          type: string
          description: Your friend's user id
          format: guid
          example: 00c4a9d2-fc8e-4b3d-8e52-c4f276245bc1
        lastName:
          type: string
          description: Your friend's user last name
          example: Humphrey
        firstName:
          type: string
          description: Your friend's user first name
          example: Bogart
        email:
          $ref: '#/components/schemas/friendEmail'
        profilePictureUrl:
          $ref: '#/components/schemas/friendProfilePictureUrl'
        countryIsoCodeAlpha3:
          $ref: '#/components/schemas/friendCountryIsoCodeAlpha3'
        company:
          type: string
          description: Your friend's user company name
          example: World company
        whatIDo:
          type: string
          description: Your friend's user occupation in his company
          example: I'm an actor...
    createContract:
      allOf:
        - $ref: '#/components/schemas/offerRequest'
    createContractResponseLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.createContractLink'
        contracts:
          $ref: '#/components/schemas/links.getContractsLink'
    createContractResponse:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/createContractResponseLinks'
        info:
          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'
    contractsLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getContractsLink'
        create:
          $ref: '#/components/schemas/links.createContractLink'
    currentContractInfoLinks:
      type: object
      properties:
        disable:
          $ref: '#/components/schemas/links.terminateCurrentContractLink'
        reenable:
          $ref: '#/components/schemas/links.reactivateCurrentContractLink'
    nextContractInfoLinks:
      type: object
      properties:
        delete:
          $ref: '#/components/schemas/links.deleteNextContractLink'
    currentContractInfo:
      allOf:
        - $ref: '#/components/schemas/contractInfo'
        - required:
            - links
          type: object
          properties:
            links:
              $ref: '#/components/schemas/currentContractInfoLinks'
          description: Get the conditions of your current contract
    contracts:
      required:
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/contractsLinks'
        current:
          $ref: '#/components/schemas/currentContractInfo'
        next:
          $ref: '#/components/schemas/nextContractInfo'
    nextContractInfo:
      allOf:
        - $ref: '#/components/schemas/contractInfo'
        - required:
            - links
          type: object
          properties:
            links:
              $ref: '#/components/schemas/nextContractInfoLinks'
          description: Get the conditions of your next contract
    contractInfo:
      type: object
      properties:
        trialPeriodInMonth:
          type: integer
          description: The trial period in month
          format: int32
        billingPeriodPercentDiscount:
          type: number
          description: The percent discount related to the billing period
          format: double
        discountDurationInMonth:
          type: integer
          description: The discount duration in month
          format: int32
        percentDiscount:
          type: number
          description: The percent of the discount
          format: double
        offerId:
          $ref: '#/components/schemas/offerId'
        storeCount:
          $ref: '#/components/schemas/storeCount'
        startUtcDate:
          type: string
          description: The start date of your contract
          format: date-time
        commitmentCalculatedFinishUtcDate:
          type: string
          description: The calculated end date of commitment
          format: date-time
        billingPeriodInMonth:
          type: integer
          description: The billing period in month
          format: int32
        fixedPrice:
          type: number
          description: The fixed price of your contract
          format: double
        offerName:
          type: string
          description: The offer name based on /offers
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        contractId:
          $ref: '#/components/schemas/contractId'
        commitmentPeriodInMonth:
          type: integer
          description: The commitment period in month
          format: int32
        clickIncluded:
          type: integer
          description: The click included
          format: int32
        additionalClickPrice:
          type: number
          description: Additional click price
          format: double
        ipUserCreation:
          type: string
          description: The IP of the user who creates the contract
        ipUserModification:
          type: string
          description: The IP of the user who modified the contract
        fixedAndVariableClickInfo:
          $ref: '#/components/schemas/fixedAndVariableClickModelInfo'
        variableModelInfo:
          $ref: '#/components/schemas/variableModelInfo'
        isCommitmentRenewalAutomatically:
          type: boolean
          description: Is commitment is automatically renewed
        discountEndUtcDate:
          type: string
          description: The end of your discount
          format: date-time
        isModifiableContract:
          type: boolean
          description: Is the contract is modifiable ?
      description: Describe the conditions of a contract
    clickIncludedAndAdditionalClickPrice:
      type: object
      properties:
        clickIncluded:
          type: integer
          description: The click included
          format: int32
        additionalClickPrice:
          type: number
          description: The additional click price
          format: double
    clickIncludedAndVariablePrice:
      type: object
      properties:
        clickIncluded:
          type: integer
          description: Click included
          format: int32
        variablePrice:
          type: number
          description: The pricing applied for this range
          format: double
    terminateContract:
      required:
        - contractTerminationReasonType
      type: object
      properties:
        contractTerminationReasonType:
          $ref: '#/components/schemas/contractTerminationReasonType'
        contractTerminationReason:
          $ref: '#/components/schemas/contractTerminationReason'
      description: The contract termination info
    offerId:
      minimum: 1
      type: integer
      description: The offer id based on /offers. Not a free offer of course.
      format: int32
      example: 1
    storeCount:
      minimum: 1
      type: integer
      description: The store count you want to have in your contract.
      format: int32
      example: 1
    couponDiscountCode:
      type: string
      description: The coupon discount code
      example: I-LOVE-BEEZUP
    couponOfferCode:
      type: string
      description: Your special coupon offer identifier
      format: guid
      example: 04efc310-bc25-4710-a83a-faf200284fe5
    billingPeriodInMonth:
      minimum: 1
      type: integer
      description: Can be null. The billing period in month based on /billingPeriods
      format: int32
      example: 12
    contractTerminationReasonType:
      type: integer
      description: >-
        The contract termination reason type identifier, if your current
        contract is scheduled to be terminated. The value is based on the list
        of values /user/lov/ContractTerminationReason
      format: int32
      example: 1
      x-lov: ContractTerminationReason
    contractTerminationReason:
      type: string
      description: >-
        The termination reason, if your current contract is scheduled to be
        terminated.
      example: I'm crazy, I want to leave your splendid service...
    offerRequest:
      required:
        - billingPeriodInMonth
        - offerId
        - storeCount
      type: object
      properties:
        offerId:
          $ref: '#/components/schemas/offerId'
        storeCount:
          $ref: '#/components/schemas/storeCount'
        couponDiscountCode:
          $ref: '#/components/schemas/couponDiscountCode'
        couponOfferCode:
          $ref: '#/components/schemas/couponOfferCode'
        billingPeriodInMonth:
          $ref: '#/components/schemas/billingPeriodInMonth'
    paymentMethod:
      type: string
      description: Payment method
      default: OnlinePayment
      enum:
        - Transfer
        - Debit
        - Paypal
        - Check
        - CreditNote
        - Loss
        - OnlinePayment
    offer:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/offerContent'
        info:
          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'
        links:
          $ref: '#/components/schemas/offerLinks'
    offerLinks:
      type: object
      properties:
        createContract:
          $ref: '#/components/schemas/links.createContractLink'
      description: The different actions you can make on this offer
    offerContent:
      required:
        - contractBillingPeriodInfo
        - contractBonusInfo
        - contractClickInfo
        - contractCommitmentInfo
        - contractDiscountInfo
        - contractMoneyInfo
        - contractStoreInfo
        - notifyVatExemption
        - previousFixPeriodInvoiceProrataInfo
      type: object
      properties:
        previousFixPeriodInvoiceProrataInfo:
          $ref: '#/components/schemas/previousFixPeriodInvoiceProrataInfo'
        contractBillingPeriodInfo:
          $ref: '#/components/schemas/contractBillingPeriodInfo'
        contractClickInfo:
          $ref: '#/components/schemas/contractClickInfo'
        contractCommitmentInfo:
          $ref: '#/components/schemas/contractCommitmentInfo'
        contractDiscountInfo:
          $ref: '#/components/schemas/contractDiscountInfo'
        contractMoneyInfo:
          $ref: '#/components/schemas/contractMoneyInfo'
        contractStoreInfo:
          $ref: '#/components/schemas/contractStoreInfo'
        contractBonusInfo:
          $ref: '#/components/schemas/contractBonusInfo'
        contractTerminationReasonType:
          $ref: '#/components/schemas/contractTerminationReasonType'
        contractTerminationReason:
          $ref: '#/components/schemas/contractTerminationReason'
        notifyVatExemption:
          type: boolean
          description: >-
            Internal usage: Indicates if we have to notify you about VAT
            exemption.
          example: true
    previousFixPeriodInvoiceProrataInfo:
      type: object
      properties:
        computedProrataToBeDeducted:
          type: number
          description: The prorata amount
          format: double
          example: 194.66
        invoiceNumber:
          type: string
          description: The previous invoice number
          example: B1234
        amountToBePaid:
          type: number
          description: The amount to be payed of the previous invoice
          format: double
          example: 0
        amountAfterTax:
          type: number
          description: The amout after tax of the previous invoice
          format: double
          example: 101.42
        contractId:
          type: string
          description: The contract id related to the previous invoice
          format: guid
          example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8
        fixedPeriodEndDate:
          type: string
          description: The fixed end period of the previous invoice
          format: date
          example: 2017-05-01T00:00:00.000Z
        fixedPeriodStartDate:
          type: string
          description: The fixed start period of the previous invoice
          format: date
          example: 2017-04-01T00:00:00.000Z
      description: Describe the prorata info based on your previous invoice
    contractBillingPeriodInfo:
      type: object
      properties:
        amountBillingPeriodDiscount:
          type: number
          description: The amount discounted related to the billing period
          format: double
          example: 20
        billingPeriodPercentDiscount:
          type: number
          description: The discount percent related to the billing period
          format: double
          example: 10
        billingPeriodInMonth:
          $ref: '#/components/schemas/billingPeriodInMonth'
      description: Describe the billing period information related to the offer.
    contractClickInfo:
      type: object
      properties:
        additionalClickPrice:
          type: number
          description: The addition click price in the offer
          format: double
          example: 0.001
        clickIncluded:
          type: integer
          description: The click included in the offer
          format: int32
          example: 5000
        initialOfferClickIncluded:
          type: integer
          description: The click included in your current contract
          format: int32
          example: 5000
      description: Describe the click information related to the offer.
    contractCommitmentInfo:
      type: object
      properties:
        commitmentCalculatedFinishDate:
          type: string
          description: The commitment end date related to the offer
          format: date
          example: 2017-06-02T00:00:00.000Z
        newContractStartDate:
          type: string
          description: The start date related to the offer
          format: date-time
        commitmentPeriodInMonth:
          type: integer
          description: The commitment period in month related to the offer
          format: int32
          example: 1
        trialPeriodInMonth:
          type: integer
          description: The trial period in month related to the offer
          format: int32
          example: 0
        trialPeriodFinishDate:
          type: string
          description: The trial period end date related to the offer
          format: date
        paymentDelayInDays:
          type: integer
          description: The payment delay in days related to the offer
          format: int32
          example: 1
        offerId:
          $ref: '#/components/schemas/offerId'
        offerName:
          type: string
          description: The offer Name
          example: Premium
        currentContractId:
          type: string
          description: Your current contract id
          format: guid
          example: dce56457-aa23-478d-8d76-b56eb9be799f
        commercialUserId:
          type: string
          description: Your current commercial user id
          format: guid
          example: 0ddc2b79-10fe-4071-8161-42faa897082f
        model:
          type: string
          description: 'Interal usage: Old offer type. The model description'
          example: BLABLA
        currentContractTerminationDate:
          type: string
          description: The current contract termination date
          format: date
          example: 2017-06-02T00:00:00.000Z
        requestedPaymentMethod:
          $ref: '#/components/schemas/paymentMethod'
        currentCustomerPaymentMethod:
          $ref: '#/components/schemas/paymentMethod'
        contractType:
          type: integer
          description: 'Internal usage: Old offer type. Your contract type'
          format: int32
          example: 1234
        isModelMustBeTransmittedInNewContract:
          type: boolean
          description: >-
            Internal usage: Old offer type. Is the current contract model needs
            to be converted into a new contract type
          example: false
        fixedAndVariableClickInfo:
          $ref: '#/components/schemas/fixedAndVariableClickModelInfo'
        variableModelInfo:
          $ref: '#/components/schemas/variableModelInfo'
        paymentMethodAuthorized:
          $ref: '#/components/schemas/paymentMethod'
        couponOfferCode:
          $ref: '#/components/schemas/couponOfferCode'
        commercialCreatorUserId:
          type: string
          description: The commercial that is responsible of the creation of your account
          format: guid
          example: 6e07814d-26a9-494b-91b2-e5ed0b9aba8c
        minBillingPeriodInMonths:
          type: integer
          description: The minimum billing period in month authorized for this offer.
          format: int32
          example: 1
        isCustomerWantsToTerminateHisContract:
          type: boolean
          description: If true, this means you want to leave us and that's sad... :'-(
          example: false
      description: Describe the commitment information related to the offer.
    contractDiscountInfo:
      type: object
      properties:
        amountCodePromoDiscountPerMonth:
          type: number
          description: The amount discounted per month
          format: double
          example: 101.42
        discountDurationInMonth:
          type: integer
          description: Duration of the discount in month
          format: int32
          example: 1
        percentDiscount:
          type: number
          description: Percentage of the discount
          format: double
          example: 20
        promotionalCodeValidity:
          $ref: '#/components/schemas/promotionalCodeValidity'
        amountCodePromoDiscount:
          type: number
          description: The discount amount
          format: double
          example: 101.42
        couponDiscountCode:
          type: string
          description: The discount code
          example: I-LOVE-BEEZUP
        couponDiscountId:
          type: integer
          description: 'Internal use: The discount id'
          format: int32
          example: 1
        isCouponDiscountLinkedToCouponOffer:
          type: boolean
          description: Is this discount is related to a coupon offer
          example: true
        customerHasActualDiscount:
          type: boolean
          description: Do you have currently a discount on your contract ?
          example: true
      description: Describe the discount information related to the offer.
    contractMoneyInfo:
      type: object
      properties:
        amountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount:
          type: number
          description: >-
            The amount excluding taxes and excluding code promo discount
            including billing period discount.
          format: double
        amountExcludingTaxesIncludingDiscounts:
          type: number
          description: The amount excluding taxes including discounts.
          format: double
        amountTaxesExcludingDiscountIncludingBillingPeriodDiscount:
          type: number
          description: The taxes excluding discount including billing period discount.
          format: double
        amountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount:
          type: number
          description: >-
            The amount including taxes excluding discount including billing
            period discount.
          format: double
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        vatPercent:
          type: number
          description: The VAT percent.
          format: double
        amountExcludingTaxesIncludingDiscountsPerMonth:
          type: number
          description: The amount excluding taxes including discounts per month.
          format: double
        amountExcludingTaxesAndExcludingDiscounts:
          type: number
          description: The amount excluding taxes and excluding discounts.
          format: double
        amountTaxesIncludingDiscounts:
          type: number
          description: Taxes including discounts.
          format: double
        amountIncludingTaxesIncludingDiscounts:
          type: number
          description: The amount including taxes including discounts.
          format: double
        initialOfferFixedPrice:
          type: number
          description: The initial offer fixed price.
          format: double
      description: Describe the pricing information related to the offer.
    contractStoreInfo:
      type: object
      properties:
        storeCount:
          $ref: '#/components/schemas/storeCount'
        maxStoreCount:
          type: integer
          description: The maximum store count related to the offer.
          format: int32
        minStoreCount:
          type: integer
          description: The minimum store count related to the offer.
          format: int32
        ownedStoreCount:
          type: integer
          description: The owned store count.
          format: int32
        additionalStorePrice:
          type: number
          description: The additional store price.
          format: double
        storeIncluded:
          type: integer
          description: The store count included in the offer.
          format: int32
      description: Describe the store information related to the offer.
    contractBonusInfo:
      required:
        - bonuses
      type: object
      properties:
        bonuses:
          type: array
          items:
            $ref: '#/components/schemas/bonusInfo'
      description: Describe the bonus information related to your current contract.
    fixedAndVariableClickModelInfo:
      required:
        - clickIncludedAndAdditionalClickPrices
      type: object
      properties:
        clickIncludedAndAdditionalClickPrices:
          type: array
          items:
            $ref: '#/components/schemas/clickIncludedAndAdditionalClickPrice'
      description: >-
        Internal usage: Old offer type. Describe the fix and variable model
        information
    variableModelInfo:
      required:
        - clickIncludedAndVariablePrices
        - overflowClickCount
        - overflowClickPrice
      type: object
      properties:
        clickIncludedAndVariablePrices:
          type: array
          description: Click included with variable pricing information
          items:
            $ref: '#/components/schemas/clickIncludedAndVariablePrice'
        overflowClickCount:
          type: integer
          description: The overflow click count
          format: int32
        overflowClickPrice:
          type: number
          description: The overflow click price
          format: double
      description: >-
        Internal usage: Old offer type. Describe the fix and variable model
        information
    bonusInfo:
      required:
        - amount
        - bonusType
      type: object
      properties:
        bonusType:
          $ref: '#/components/schemas/bonusType'
        amount:
          type: number
          format: double
          example: 12.34
    lastName:
      type: string
      description: Your last name
      example: Simon
    firstName:
      type: string
      description: Your first name
      example: Paul
    phoneNumber:
      type: string
      description: Your phone number
      example: '5551234'
    address:
      type: string
      description: Your address
      example: 21 jump street
    postalCode:
      type: string
      description: Your address postal code
      example: '13014'
    city:
      type: string
      description: Your address city
      example: New-York
    company:
      type: string
      description: Your company name
      example: My super company
    vatNumber:
      type: string
      description: >-
        Your company VATNumber. Used for french company. This number is checked
        with official web service before being saved.
      example: '1234567890'
    accountingEmails:
      type: array
      description: Your company accounting emails
      example:
        - myaccountemail@mysupercompany.com
      items:
        $ref: '#/components/schemas/BeezUP_Common_Email'
    profilePictureUrl:
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
      description: Indicate the url of your picture profil
      example: >-
        https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Marlon_Brando_%28cropped%29.jpg/220px-Marlon_Brando_%28cropped%29.jpg
    profilePictureSelected:
      type: string
      description: >-
        Your profile picture choice about usage of gravatar picture, initials
        picture or uploaded picture.
      example: initials
      enum:
        - gravatar
        - initials
        - uploaded
    whatIDo:
      type: string
      description: Your role in your company
      example: I'm the Manager on this company
    beezUPTimeZoneId:
      type: integer
      description: >-
        The time zone identifier based on the list of values
        /v2/user/lov/BeezUPTimeZone
      format: int32
      example: 79
      x-lov: BeezUPTimeZone
    cardNumber:
      type: string
      description: Card number
      example: '1234567890091234'
    cardVerificationCode:
      type: string
      description: Card Verification Code
      example: '123'
    expirationMonth:
      maximum: 12
      minimum: 1
      type: integer
      description: Expiration Month
      format: int32
      example: 12
    expirationYear:
      maximum: 9000
      minimum: 2017
      type: integer
      description: Expiration Year
      format: int32
      example: 2017
    accountInfoLinks:
      required:
        - changeEmail
        - changePassword
        - getCreditCardInfo
        - getProfilePictureInfo
        - saveCompanyInfo
        - saveCreditCardInfo
        - savePersonalInfo
        - saveProfilePictureInfo
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getUserAccountInfoLink'
        savePersonalInfo:
          $ref: '#/components/schemas/links.savePersonalInfoLink'
        changeEmail:
          $ref: '#/components/schemas/links.changeEmailLink'
        changePassword:
          $ref: '#/components/schemas/links.changePasswordLink'
        saveCompanyInfo:
          $ref: '#/components/schemas/links.saveCompanyInfoLink'
        getProfilePictureInfo:
          $ref: '#/components/schemas/links.getProfilePictureInfoLink'
        saveProfilePictureInfo:
          $ref: '#/components/schemas/links.saveProfilePictureInfoLink'
        getCreditCardInfo:
          $ref: '#/components/schemas/links.getCreditCardInfoLink'
        saveCreditCardInfo:
          $ref: '#/components/schemas/links.saveCreditCardInfoLink'
        activateUserAccount:
          $ref: '#/components/schemas/links.activateUserAccountLink'
      description: The different actions you can make on this account
    accountInfo:
      required:
        - email
        - links
        - status
        - userId
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        email:
          $ref: '#/components/schemas/BeezUP_Common_Email'
        personalInfo:
          $ref: '#/components/schemas/personalInfo'
        status:
          $ref: '#/components/schemas/accountStatus'
        companyInfo:
          $ref: '#/components/schemas/companyInfo'
        profilePictureUrl:
          $ref: '#/components/schemas/profilePictureUrl'
        links:
          $ref: '#/components/schemas/accountInfoLinks'
        info:
          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'
    personalInfo:
      required:
        - beezUPTimeZoneId
        - firstName
        - lastName
        - phoneNumber
      type: object
      properties:
        lastName:
          $ref: '#/components/schemas/lastName'
        firstName:
          $ref: '#/components/schemas/firstName'
        phoneNumber:
          $ref: '#/components/schemas/phoneNumber'
        whatIDo:
          $ref: '#/components/schemas/whatIDo'
        beezUPTimeZoneId:
          $ref: '#/components/schemas/beezUPTimeZoneId'
    changeEmailRequest:
      required:
        - newEmail
      type: object
      properties:
        newEmail:
          $ref: '#/components/schemas/BeezUP_Common_Email'
    changePasswordRequest:
      required:
        - newPassword
        - oldPassword
      type: object
      properties:
        oldPassword:
          type: string
          description: Your current password
          format: password
        newPassword:
          type: string
          description: >-
            Your new password. Which must respect the same constraints as the
            user registeration
          format: password
    companyInfo:
      required:
        - address
        - city
        - company
        - countryIsoCodeAlpha3
        - postalCode
      type: object
      properties:
        address:
          $ref: '#/components/schemas/address'
        postalCode:
          $ref: '#/components/schemas/postalCode'
        city:
          $ref: '#/components/schemas/city'
        countryIsoCodeAlpha3:
          $ref: '#/components/schemas/BeezUP_Common_CountryIsoCodeAlpha3'
        company:
          $ref: '#/components/schemas/company'
        vatNumber:
          $ref: '#/components/schemas/vatNumber'
        accountingEmails:
          $ref: '#/components/schemas/accountingEmails'
    profilePictureInfoResponseLinks:
      required:
        - save
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getProfilePictureInfoLink'
        save:
          $ref: '#/components/schemas/links.saveProfilePictureInfoLink'
    profilePictureInfoResponse:
      required:
        - links
        - profilePictureInfo
      type: object
      properties:
        profilePictureInfo:
          $ref: '#/components/schemas/profilePictureInfoWithDefault'
        links:
          $ref: '#/components/schemas/profilePictureInfoResponseLinks'
    profilePictureInfoWithDefault:
      allOf:
        - $ref: '#/components/schemas/profilePictureInfo'
        - required:
            - gravatarProfilePictureUrl
            - initialsProfilePictureUrl
          type: object
          properties:
            initialsProfilePictureUrl:
              $ref: '#/components/schemas/initialsProfilePictureUrl'
            gravatarProfilePictureUrl:
              $ref: '#/components/schemas/gravatarProfilePictureUrl'
    initialsProfilePictureUrl:
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
      description: Indicate the url of your picture profil based on your initials
      example: https://dummyimage.com/50x50/000000/fff&text=AM
    gravatarProfilePictureUrl:
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
      description: Indicate the url of your picture profil based on gravatar
      example: https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?d=mm
    profilePictureInfo:
      required:
        - profilePictureSelected
      type: object
      properties:
        profilePictureUrl:
          $ref: '#/components/schemas/profilePictureUrl'
        profilePictureSelected:
          $ref: '#/components/schemas/profilePictureSelected'
    creditCardInfoResponseLinks:
      required:
        - saveCreditCardInfo
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getCreditCardInfoLink'
        saveCreditCardInfo:
          $ref: '#/components/schemas/links.saveCreditCardInfoLink'
      description: The different actions you can make on this offer
    creditCardInfoResponse:
      required:
        - currentPaymentMethod
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/creditCardInfoResponseLinks'
        currentPaymentMethod:
          $ref: '#/components/schemas/paymentMethod'
        creditCardInfo:
          $ref: '#/components/schemas/creditCardInfoWithCardType'
        info:
          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'
    creditCardInfo:
      required:
        - cardNumber
        - cardVerificationCode
        - expirationMonth
        - expirationYear
      type: object
      properties:
        cardNumber:
          $ref: '#/components/schemas/cardNumber'
        cardVerificationCode:
          $ref: '#/components/schemas/cardVerificationCode'
        expirationMonth:
          $ref: '#/components/schemas/expirationMonth'
        expirationYear:
          $ref: '#/components/schemas/expirationYear'
    creditCardInfoWithCardType:
      required:
        - cardNumber
        - cardType
        - expirationMonth
        - expirationYear
      type: object
      properties:
        cardNumber:
          $ref: '#/components/schemas/cardNumber'
        expirationMonth:
          $ref: '#/components/schemas/expirationMonth'
        expirationYear:
          $ref: '#/components/schemas/expirationYear'
        cardType:
          type: string
          description: 'Your credit card type. Example: VISA, MasterCard, etc...'
          example: VISA
    storeAlerts:
      type: object
      properties:
        alerts:
          type: array
          example:
            - alertId: '8'
              alertName: NoImportSinceXDays
              isActive: 'true'
              properties:
                - propertyId: '2'
                  propertyValidationExpression: \b0*([1-9]|[12][0-9]|30)\b
                  propertyValue: '2'
          items:
            $ref: '#/components/schemas/storeAlert'
    alertId:
      type: integer
      description: Alert identifier
      format: int32
      example: 8
    alertName:
      type: string
      description: The alert name
      example: NoImportSinceXDays
    alertEnabled:
      type: boolean
      description: Is the alert enable ?
      example: true
    storeAlert:
      required:
        - alertId
        - alertName
        - enabled
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/storeAlertLinks'
        alertId:
          $ref: '#/components/schemas/alertId'
        alertName:
          $ref: '#/components/schemas/alertName'
        enabled:
          $ref: '#/components/schemas/alertEnabled'
        properties:
          type: array
          description: The current configuration properties of the alert
          example:
            - propertyId: '2'
              propertyValidationExpression: \b0*([1-9]|[12][0-9]|30)\b
              propertyValue: '2'
          items:
            $ref: '#/components/schemas/storeAlertPropertyInfo'
    storeAlertLinks:
      type: object
      properties:
        save:
          $ref: '#/components/schemas/links.saveStoreAlertsLink'
      description: The different actions you can make on this alert
    alertPropertyId:
      type: integer
      description: The property identifier of the alert
      format: int32
      example: 2
    alertPropertyValue:
      type: string
      description: The property value
      example: '2'
    storeAlertPropertyInfo:
      allOf:
        - $ref: '#/components/schemas/storeAlertProperty'
        - required:
            - propertyName
          type: object
          properties:
            propertyName:
              type: string
              description: The property name of the alert
              example: NbDays
            propertyValidationExpression:
              type: string
              description: The regular expression related to the alert property
              example: \b0*([1-9]|[12][0-9]|30)\b
    saveStoreAlertsRequest:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/saveStoreAlertRequest'
      description: The key is the alert identifier (alertId)
    saveStoreAlertRequest:
      required:
        - enabled
      type: object
      properties:
        enabled:
          $ref: '#/components/schemas/alertEnabled'
        properties:
          type: array
          description: Properties to configure the alert
          example:
            - propertyId: '2'
              propertyValue: '3'
          items:
            $ref: '#/components/schemas/storeAlertProperty'
    storeAlertProperty:
      required:
        - propertyId
        - propertyValue
      type: object
      properties:
        propertyId:
          $ref: '#/components/schemas/alertPropertyId'
        propertyValue:
          $ref: '#/components/schemas/alertPropertyValue'
    standardOffersLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getStandardOffersLink'
    standardOffers:
      required:
        - functionalities
        - links
        - offers
      type: object
      properties:
        links:
          $ref: '#/components/schemas/standardOffersLinks'
        offers:
          type: array
          description: All standard offers
          example:
            - additionalClickPrice: '0'
              includedClick: '1200'
              isMostPopular: 'true'
              name: Wonder offer
              offerId: '1234'
              fixedPrice: '101'
              currencyCode: EUR
              position: '1'
              functionalities:
                - functionalityCode: MARKETMANA
                  maxValueInteger: '4'
                  unlimited: 'false'
                  text: Marketplace management
          items:
            $ref: '#/components/schemas/standardOffer'
        functionalities:
          type: array
          description: All functionalities...
          example:
            - code: MARKETMANA
              order: '1'
          items:
            $ref: '#/components/schemas/functionality'
    standardOfferLinks:
      type: object
      properties:
        getOffer:
          $ref: '#/components/schemas/links.getOfferLink'
    standardOffer:
      required:
        - links
        - name
        - offerId
      type: object
      properties:
        offerId:
          type: integer
          description: The offer Id
          format: int32
          example: 1234
        name:
          type: string
          description: The offer name
          example: Wonder offer
        additionalClickPrice:
          type: number
          description: The additional click price
          format: double
          example: 0.1234
        includedClick:
          type: integer
          description: The included click
          format: int32
          example: 1200
        isMostPopular:
          type: boolean
          description: UI purpose. Is the offer is the most popular
          example: true
        isOldOffer:
          type: boolean
          description: Is an old offer
          example: false
        fixedPrice:
          type: number
          description: The fixed price of the offer
          format: double
          example: 101.42
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        position:
          type: integer
          description: UI purpose. The position of the offer
          format: int32
          example: 1
        functionalities:
          type: array
          example:
            - functionalityCode: MARKETMANA
              maxValueInteger: '4'
              unlimited: 'false'
              text: Marketplace management
          items:
            $ref: '#/components/schemas/offerFunctionality'
        links:
          $ref: '#/components/schemas/standardOfferLinks'
    functionality:
      required:
        - code
        - order
      type: object
      properties:
        code:
          type: string
          description: The functionality code
          example: MARKETMANA
        order:
          type: integer
          description: 'UI purpose: Indicate the position of the functionality'
          format: int32
          example: 1
    offerFunctionality:
      required:
        - functionalityCode
        - unlimited
      type: object
      properties:
        functionalityCode:
          type: string
          description: The functionality code
          example: MARKETMANA
        maxValueInteger:
          type: integer
          description: The max value in integer for this feature in this offer
          format: int32
          example: 4
        unlimited:
          type: boolean
          description: Is this feature is unlimited for this offer?
          example: false
        text:
          type: string
          description: A description text of this feature
          example: Marketplace management
    billingPeriodListLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.getBillingPeriodsLink'
    billingPeriodList:
      required:
        - billingPeriods
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/billingPeriodListLinks'
        billingPeriods:
          type: array
          description: The billing period list
          example:
            - billingPeriodInMonth: '12'
              discountPercentage: '20'
          items:
            $ref: '#/components/schemas/billingPeriod'
    billingPeriod:
      required:
        - billingPeriodInMonth
        - discountPercentage
      type: object
      properties:
        billingPeriodInMonth:
          type: integer
          description: The billing period in month
          format: int32
          example: 12
        discountPercentage:
          type: number
          description: The discount percentage related to this billing period
          format: double
          example: 20
    promotionalCodeValidity:
      type: string
      description: Indicate the validaty of the discount
      example: Valid
      enum:
        - None
        - Valid
        - Invalid
        - ExpiredOrInactive
    bonusType:
      type: string
      enum:
        - OnlinePaymentMethodBonus
        - PreviousInvoiceProrataBonus
        - PreviousContractBonus
    zendeskToken:
      type: object
      properties:
        token:
          type: string
          description: A JWT token build from your name and email to use on Zendesk
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      description: JWT token to access Zendesk restricted help center
    BeezUP_Common_UserId:
      type: string
      description: The user identifier
      format: guid
      example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8
    BeezUP_Common_StoreId:
      type: string
      description: The store identifier
      format: guid
      example: 64f43358-63a1-47f7-97ec-0301fc39956b
    BeezUP_Common_CountryIsoCodeAlpha3:
      type: string
      description: >-
        The country iso code alpha 3 <a
        href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3">(ISO
        3166-1_alpha-3)</a>
      example: FRA
      x-lov: Country
    BeezUP_Common_CurrencyCode:
      type: string
      description: >
        The currency code <a href="https://en.wikipedia.org/wiki/ISO_4217">(ISO
        4217)</a>
      example: EUR
    links.Catalog_ComputeExpressionLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/computeExpression
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: computeExpressionRequest
    links.Catalog_ChangeCatalogColumnUserNameLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/rename
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: changeUserColumnNameRequest
    links.Catalog_GetBeezUPColumnsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/catalogs/beezupColumns
            method: GET
    links.CatalogIndexLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/catalogs
            method: GET
    links.CatalogStoreIndexLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3
            method: GET
    links.Auto_GetAutoImportConfigurationLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport
            method: GET
    links.Auto_StartAutoImportLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/start
            method: POST
    links.Auto_PauseAutoImportLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/pause
            method: POST
    links.Auto_ResumeAutoImportLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/resume
            method: POST
    links.Auto_ConfigureAutoImportIntervalLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/scheduling/interval
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: configureAutoImportIntervalRequest
    links.Auto_ScheduleAutoImportLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/scheduling/schedules
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: scheduleAutoImportRequest
    links.Catalog_GetCatalogColumnsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/catalogColumns
            method: GET
    links.Catalog_GetCustomColumnsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns
            method: GET
    links.Catalog_SaveCustomColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/{columnId}
            method: POST
            parameters:
              columnId:
                type: string
                required: true
                in: path
              request:
                type: object
                required: true
                in: body
                schema: createCustomColumnRequest
    links.Catalog_DeleteCustomColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb
            method: DELETE
    links.Catalog_ChangeCustomColumnUserNameLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/rename
            method: POST
            parameters:
              request:
                type: object
                required: true
                in: body
                schema: changeUserColumnNameRequest
    links.Catalog_GetCustomColumnExpressionLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression
            method: GET
    links.Catalog_ChangeCustomColumnExpressionLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression
            method: PUT
            parameters:
              request:
                type: object
                required: true
                in: body
                schema: changeCustomColumnExpressionRequest
    links.Catalog_GetCategoriesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/categories
            method: GET
    links.Catalog_GetProductsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/products/list
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: getProductsRequest
    links.Catalog_GetRandomProductsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/products/random
            method: GET
    links.Importation_ConfigureCatalogColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: configureCatalogColumnCatalogRequest
    links.Importation_IgnoreColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/ignore
            method: POST
    links.Importation_ReattendColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/reattend
            method: POST
    links.Importation_MapCatalogColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/map
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: mapBeezUPColumnRequest
    links.Importation_UnmapCatalogColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns/b45c1999-e089-4bb1-a219-80a7a50a6f53/map
            method: POST
    links.Importation_GetImportationMonitoringLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c
            method: GET
    links.Importation_CancelLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/cancel
            method: POST
    links.Importation_ConfigureRemainingCatalogColumnsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/configureRemainingCatalogColumns
            method: POST
    links.Importation_CommitColumnsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/commitColumns
            method: POST
    links.Importation_CommitLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/commit
            method: POST
    links.Importation_TechnicalProgressionLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/technicalProgression
            method: GET
    links.Importation_GetReportLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e911432/report
            method: GET
    links.Importation_GetReportingsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations
            method: GET
    links.Importation_StartManualUpdateLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/start
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: startManualImportRequest
    links.Importation_GetManualUpdateLastInputConfigLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/inputConfiguration
            method: GET
    links.Importation_GetDetectedCatalogColumnsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/catalogColumns
            method: GET
    links.Importation_GetCustomColumnsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns
            method: GET
    links.Importation_SaveCustomColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/{columnId}
            method: POST
            parameters:
              columnId:
                type: string
                required: true
                in: path
              request:
                type: object
                required: true
                in: body
                schema: createCustomColumnRequest
    links.Importation_DeleteCustomColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb
            method: DELETE
    links.Importation_GetCustomColumnExpressionLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/expression
            method: GET
    links.Importation_MapCustomColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/map
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: mapBeezUPColumnRequest
    links.Importation_UnmapCustomColumnLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb/map
            method: POST
    links.Importation_GetProductSampleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/productSamples/{productSampleIndex}
            method: GET
            parameters:
              productSampleIndex:
                in: path
                required: true
                type: integer
    links.Importation_GetProductSampleCustomColumnValueLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/importations/222ef571-bdb7-436d-a01a-e5a0e9161c0c/productSamples/{productSampleIndex}/customColumns/5b56bb78-bc0b-485e-abd8-8db7eed995cb
            method: GET
            parameters:
              productSampleIndex:
                in: path
                required: true
                type: integer
    links.Importation_ActivateAutoImportLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/catalogs/a42b780d-4585-4566-800e-4d77a4d6f8a3/autoImport/activate
            method: POST
    catalogIndexLinks:
      required:
        - beezUPColumns
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.CatalogIndexLink'
        beezUPColumns:
          $ref: '#/components/schemas/links.Catalog_GetBeezUPColumnsLink'
    catalogIndexLOVLinks:
      required:
        - beezUPColumnDataTypeLov
        - beezUPColumnDisplayGroupLov
        - beezUPColumnImportanceLov
        - beezUPColumnLov
        - compareOptionLov
        - duplicateProductValueStrategyLov
      type: object
      properties:
        beezUPColumnLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        beezUPColumnDataTypeLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        beezUPColumnImportanceLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        beezUPColumnDisplayGroupLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        duplicateProductValueStrategyLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        compareOptionLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
    catalogIndex:
      required:
        - links
        - lovLinks
      type: object
      properties:
        links:
          $ref: '#/components/schemas/catalogIndexLinks'
        lovLinks:
          $ref: '#/components/schemas/catalogIndexLOVLinks'
        storeLinks:
          $ref: '#/components/schemas/catalogStoreIndexList'
    catalogStoreIndexList:
      type: object
      properties:
        links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/catalogStoreIndex'
          description: The key is the store identifier.
    catalogStoreIndexLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.CatalogStoreIndexLink'
        inputConfiguration:
          $ref: >-
            #/components/schemas/links.Importation_GetManualUpdateLastInputConfigLink
        autoImportInfo:
          $ref: '#/components/schemas/links.Auto_GetAutoImportConfigurationLink'
        importations:
          $ref: '#/components/schemas/links.Importation_GetReportingsLink'
        startImportation:
          $ref: '#/components/schemas/links.Importation_StartManualUpdateLink'
        catalogColumns:
          $ref: '#/components/schemas/links.Catalog_GetCatalogColumnsLink'
        customColumns:
          $ref: '#/components/schemas/links.Catalog_GetCustomColumnsLink'
        categories:
          $ref: '#/components/schemas/links.Catalog_GetCategoriesLink'
        products:
          $ref: '#/components/schemas/links.Catalog_GetProductsLink'
        randomProducts:
          $ref: '#/components/schemas/links.Catalog_GetRandomProductsLink'
        computeExpression:
          $ref: '#/components/schemas/links.Catalog_ComputeExpressionLink'
    catalogStoreStatus:
      type: string
      description: |
        Indicates the status of the catalog store.
        * OK: If the latest importation is a success!
        * Failed: If the latest importation has failed !
        * Outdated: If the latest succeed importation is later than 1 day.
      example: OK
      enum:
        - OK
        - Failed
        - Outdated
    catalogStoreIndex:
      required:
        - links
        - status
      type: object
      properties:
        links:
          $ref: '#/components/schemas/catalogStoreIndexLinks'
        status:
          $ref: '#/components/schemas/catalogStoreStatus'
    importationsResponseLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.Importation_GetReportingsLink'
        start:
          $ref: '#/components/schemas/links.Importation_StartManualUpdateLink'
    importationReportingLinks:
      type: object
      properties:
        report:
          $ref: '#/components/schemas/links.Importation_GetReportLink'
    importationsPerStoreResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/importationsResponse'
    importationsResponse:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/importationsResponseLinks'
        importations:
          type: array
          items:
            $ref: '#/components/schemas/importationReporting'
    importAlreadyInProgressResponse:
      required:
        - errors
        - links
      type: object
      properties:
        errors:
          type: array
          description: The error message list
          items:
            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'
        links:
          $ref: '#/components/schemas/importAlreadyInProgressResponseLinks'
    importAlreadyInProgressResponseLinks:
      required:
        - cancelCurrentImportation
        - currentImportation
      type: object
      properties:
        currentImportation:
          $ref: '#/components/schemas/links.Importation_GetImportationMonitoringLink'
        cancelCurrentImportation:
          $ref: '#/components/schemas/links.Importation_CancelLink'
      description: The action links
    schedulingType:
      type: string
      description: >-
        Indicate the scheduling type. Schedule or Interval. We recommand you to
        use interval for a better reporting.
      example: Schedule
      default: Interval
      enum:
        - Schedule
        - Interval
    duplicateProductValueStrategy:
      type: string
      description: Indicate the duplicate product sku strategy.
      example: KeepFirstDuplicateProductOnly
      default: None
      enum:
        - None
        - SkipAllDuplicateProducts
        - KeepFirstDuplicateProductOnly
        - FailImportationIfAnyDuplicateProduct
    compareOptions:
      type: string
      description: Indicate how the product sku are compared for the duplication check.
      example: IgnoreCase
      default: None
      enum:
        - None
        - IgnoreCase
        - IgnoreNonSpace
        - IgnoreSymbols
        - OrdinalIgnoreCase
        - StringSort
        - Ordinal
    autoImportConfigurationLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.Auto_GetAutoImportConfigurationLink'
        activate:
          $ref: '#/components/schemas/links.Importation_ActivateAutoImportLink'
        start:
          $ref: '#/components/schemas/links.Auto_StartAutoImportLink'
        pause:
          $ref: '#/components/schemas/links.Auto_PauseAutoImportLink'
        resume:
          $ref: '#/components/schemas/links.Auto_ResumeAutoImportLink'
        scheduleInterval:
          $ref: '#/components/schemas/links.Auto_ConfigureAutoImportIntervalLink'
        schedule:
          $ref: '#/components/schemas/links.Auto_ScheduleAutoImportLink'
    autoImportConfiguration:
      required:
        - duplicateProductConfiguration
        - input
        - inputConfiguredByUserId
        - paused
        - schedulingType
        - schedulingValue
      type: object
      properties:
        input:
          $ref: '#/components/schemas/inputConfiguration'
        inputConfiguredByUserId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        schedulingType:
          $ref: '#/components/schemas/schedulingType'
        scheduledByUserId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        schedulingValue:
          minItems: 1
          type: array
          description: >-
            Indicate the scheduling value. If the scheduling type is Interval
            then the value will be a duration otherwise the values will be the
            time.
          example:
            - '21:00:00'
            - '23:00:00'
            - '08:30:00'
          items:
            type: string
        paused:
          type: boolean
          description: Indicate if the auto import is in pause or not.
          example: false
          default: false
        pauseStatusChangedByUserId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        pauseStatusChangedUtcDate:
          type: string
          description: Indicate when the pause status has changed in UTC date.
          format: date-time
          example: 2017-04-01T13:21:42.000Z
        duplicateProductConfiguration:
          $ref: '#/components/schemas/duplicateProductValueConfiguration'
        schedulingLocalTimeZoneName:
          type: string
          description: >-
            Indicate the time zone name of the scheduling. If the scheduling
            type is "Schedule"
          example: Romance Standard Time
          default: Romance Standard Time
    inputConfiguration:
      required:
        - files
      type: object
      properties:
        transformFileUrl:
          type: string
          description: Can be null. Use to transform multiple files with an XSLT file.
          format: uri
          example: http://beezupblob.com/Mytransformation.xslt
        files:
          minItems: 1
          type: array
          description: The list of files to get and read
          items:
            $ref: '#/components/schemas/inputFileConfiguration'
      description: Describe the input configuration
    inputFileConfiguration:
      required:
        - fetch
        - fileNumber
        - read
      type: object
      properties:
        fileNumber:
          minimum: 1
          type: integer
          description: The file number starting by 1
          format: int32
          example: 1
        fetch:
          $ref: '#/components/schemas/inputFileFetchConfiguration'
        read:
          $ref: '#/components/schemas/inputFileReadConfiguration'
      description: Describe how to get and read a file
    downloadCatalogStrategy:
      type: string
      description: >-
        Indicate the download strategy (simple uri, ftps, ftplatest file,
        etc...)
      example: SimpleUri
      enum:
        - SimpleUri
        - FtpLatest
        - Sftp
        - SftpLatest
        - Ftps
        - FtpsLatest
        - Local
    compressionFormatStrategy:
      type: string
      description: Indicate the compression type
      example: None
      enum:
        - None
        - Zip
        - TarGz
        - Gzip
        - Bzip2
        - Rar
    inputFileFetchConfiguration:
      required:
        - downloadCatalogStrategy
        - uri
      type: object
      properties:
        uri:
          type: string
          description: >-
            Indicate the Uri of the file. (http, https, ftp, ftps, sftp are
            allowed)
          example: http://www.mywebsite.com/mycatalog.csv
        credential:
          $ref: '#/components/schemas/credential'
        downloadCatalogStrategy:
          $ref: '#/components/schemas/downloadCatalogStrategy'
        compressionFormatStrategy:
          $ref: '#/components/schemas/compressionFormatStrategy'
        compressedRelativePath:
          type: string
          description: Indicate the relative path in the compressed file
          example: folder/file.xxx
        downloadTimeout:
          type: integer
          description: Indicate the download time out in second
          format: int32
          example: 360
          default: 30
      description: Describe the way to download the file
    fileFormatStrategy:
      type: string
      description: CSV or XML
      example: Csv
      enum:
        - Unknown
        - Csv
        - Xml
        - Json
    inputFileReadConfiguration:
      required:
        - format
      type: object
      properties:
        format:
          $ref: '#/components/schemas/fileFormatStrategy'
        encodingTypeName:
          type: string
          description: The encoding type. UTF-8 by default.
          example: UTF-8
          default: UTF-8
        cultureName:
          type: string
          description: >-
            The culture name of the file.  (i.e. fr-FR). If null then Invariant
            culture will be used.
          example: fr-FR
          default: ''
        csvFileReadProperties:
          $ref: '#/components/schemas/inputFileReadCsvConfiguration'
        xmlFileReadProperties:
          $ref: '#/components/schemas/inputFileReadXmlConfiguration'
      description: >
        Describe how to read the file. If FileFormatStrategy is CSV,
        csvFileReadProperties is required. Otherwise the xmlFileReadProperties
        is required.
    credential:
      required:
        - userName
      type: object
      properties:
        userName:
          type: string
          description: The user name
          example: MyLogin
        password:
          type: string
          description: The password
          format: password
          example: MyPassword
      description: Provides the credentials
    csvSeparator:
      type: string
      description: Indicate the separator of the values in the CSV file. Generally ";"
      example: ;
      default: ;
    inputFileReadCsvConfiguration:
      required:
        - csvSeparator
        - hasHeaderRecord
        - ignoreHeaderRecord
      type: object
      properties:
        hasHeaderRecord:
          type: boolean
          description: Indicate if the csv file contains the column name at the first row
          example: true
          default: true
        ignoreHeaderRecord:
          type: boolean
          description: >-
            Indicate if the importation should not use the csv column name from
            the file
          example: true
          default: false
        csvSeparator:
          $ref: '#/components/schemas/csvSeparator'
        csvTextQualifier:
          type: string
          description: >-
            Indicate the text qualifier of the CSV file. Generally the value is
            "
          example: ''
          default: ''
      description: The CSV file description
    inputFileReadXmlConfiguration:
      required:
        - flattenXmlChildElements
        - useXmlAttributes
      type: object
      properties:
        useXmlAttributes:
          type: boolean
          description: >-
            Indicate if the importation should take in account the attribute in
            the xml nodes.
          example: true
        flattenXmlChildElements:
          type: boolean
          description: >-
            Indicate if the children xml nodes should be flatten with there
            parent to take in account the sub node values.
          example: true
      description: The XML file description
    configureAutoImportIntervalRequest:
      required:
        - interval
      type: object
      properties:
        interval:
          pattern: >-
            (00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])
          type: string
          description: >-
            Indicate the interval in time span. (i.e. "04:00:00" for every 4
            hours)
          example: '04:00:00'
      description: The message request to configure the auto import interval
    scheduleAutoImportRequest:
      required:
        - schedules
      type: object
      properties:
        schedules:
          minItems: 1
          uniqueItems: true
          type: array
          description: >-
            Indicate the time span you want to import your catalog. (i.e.
            "21:00:00" to import your catalog at 9PM)
          example:
            - '21:00:00'
            - '23:00:00'
            - '08:30:00'
          items:
            pattern: >-
              (00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])
            type: string
        localTimeZoneName:
          type: string
          description: If null the local time zone name will be "Romance Standard Time"
          example: Romance Standard Time
          default: Romance Standard Time
      description: The message request to schedule the auto import
    lastManualImportInputConfiguration:
      required:
        - input
      type: object
      properties:
        input:
          $ref: '#/components/schemas/inputConfiguration'
      description: Last manual import input configuration
    displayGroupName:
      type: string
      description: Indicate the display group name where the column must be putted
      example: Category
    canBeTruncated:
      type: boolean
      description: >-
        If the size of the value is greater than the limit we can truncate the
        value instead of failing...
      example: false
      default: false
    beezUPColumnConfiguration:
      required:
        - beezUPColumnName
        - columnImportance
        - displayGroupName
      type: object
      properties:
        beezUPColumnName:
          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'
        unique:
          type: boolean
          description: "/!\\ ONLY AVAILABLE ON CATALOG COLUMN NOT ON CUSTOM COLUMNS!!\r\nIf true, an error happen at the second occurence of the same value for this column\r\nThis information will be used during the importation process and later for mapping proposal"
          example: false
          default: false
        columnImportance:
          $ref: '#/components/schemas/BeezUP_Common_ColumnImportance'
        columnDataType:
          $ref: '#/components/schemas/BeezUP_Common_ColumnDataType'
        canBeTruncated:
          $ref: '#/components/schemas/canBeTruncated'
        displayGroupName:
          $ref: '#/components/schemas/displayGroupName'
        description:
          type: string
          description: Describe the BeezUP column
          example: Use for big text, like description
      description: Describe a BeezUP column
    changeUserColumnNameRequest:
      required:
        - userColumName
      type: object
      properties:
        userColumName:
          $ref: '#/components/schemas/userColumName'
      description: The message request for the change user column name
    encryptedExpression:
      type: string
      description: The encrypted excel expression of the column
      example: uziushdczaniodnndonisodndsiondsoidsndoin
    encryptedBlocklyExpression:
      type: string
      description: The encrypted XML Blockly representation of the expression
      example: apokpoa,opz,sixsoisiosnoisn
    createCustomColumnRequest:
      required:
        - displayGroupName
        - encryptedBlocklyExpression
        - encryptedExpression
        - userColumnName
      type: object
      properties:
        userColumnName:
          $ref: '#/components/schemas/userColumName'
        encryptedExpression:
          $ref: '#/components/schemas/encryptedExpression'
        encryptedBlocklyExpression:
          $ref: '#/components/schemas/encryptedBlocklyExpression'
        displayGroupName:
          $ref: '#/components/schemas/displayGroupName'
      description: The request message to create a custom column
    changeCustomColumnExpressionRequest:
      required:
        - encryptedBlocklyExpression
        - encryptedExpression
      type: object
      properties:
        encryptedExpression:
          $ref: '#/components/schemas/encryptedExpression'
        encryptedBlocklyExpression:
          $ref: '#/components/schemas/encryptedBlocklyExpression'
      description: The request message to change the custom column expression
    computeExpressionRequest:
      required:
        - encryptedExpression
        - productValues
      type: object
      properties:
        productValues:
          $ref: '#/components/schemas/productValues'
        encryptedExpression:
          $ref: '#/components/schemas/encryptedExpression'
      description: >-
        The request message to compute an expression based on the provided
        product values
    importationMonitoring:
      required:
        - beginUtcDate
        - executionId
        - lastUpdateUtcDate
        - steps
        - success
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        success:
          type: boolean
          description: Indicates if the importation was successfully completed or not
          example: true
        executionId:
          $ref: '#/components/schemas/executionId'
        lastUpdateUtcDate:
          type: string
          description: The last update of the reporting
          format: date-time
          example: 2017-04-01T13:10:09.000Z
        beginUtcDate:
          type: string
          description: The start date of the importation
          format: date-time
          example: 2017-04-01T13:01:01.000Z
        errors:
          type: array
          description: In case of error a description will be indicated
          items:
            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'
        steps:
          type: object
          additionalProperties:
            type: boolean
          description: >-
            Contains all steps of the importation process with a boolean. If
            true the step has been passed, false the step is not complete
          example:
            isCatalogImportPrepareReadCompleted: 'false'
            isCatalogImportComputeDiffCompleted: 'false'
            isCatalogUpdateCompleted: 'false'
            isSavedInDb: 'false'
        links:
          $ref: '#/components/schemas/importationMonitoringLinks'
      description: Describe the reporting of the catalog importation
    importationMonitoringLinks:
      required:
        - self
        - technicalProgression
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.Importation_GetImportationMonitoringLink'
        technicalProgression:
          $ref: '#/components/schemas/links.Importation_TechnicalProgressionLink'
        cancel:
          $ref: '#/components/schemas/links.Importation_CancelLink'
        configureRemainingCatalogColumns:
          $ref: >-
            #/components/schemas/links.Importation_ConfigureRemainingCatalogColumnsLink
        commitColumns:
          $ref: '#/components/schemas/links.Importation_CommitColumnsLink'
        commit:
          $ref: '#/components/schemas/links.Importation_CommitLink'
        activateAutoImport:
          $ref: '#/components/schemas/links.Importation_ActivateAutoImportLink'
        catalogColumns:
          $ref: '#/components/schemas/links.Importation_GetDetectedCatalogColumnsLink'
        customColumns:
          $ref: '#/components/schemas/links.Importation_GetCustomColumnsLink'
        productSamples:
          $ref: '#/components/schemas/links.Importation_GetProductSampleLink'
      description: Applicable operations considering the state of the importation
    catalogColumnName:
      type: string
      description: The catalog column name
      example: SKU
    columnId:
      type: string
      description: The catalog column identifier
      format: guid
      example: 8f6671d6-a9bc-4de0-a0c4-4643b0c3f871
    detectedCatalogColumnListLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.Importation_GetDetectedCatalogColumnsLink'
    detectedCatalogColumnList:
      required:
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/detectedCatalogColumnListLinks'
        detectedCatalogColumns:
          type: array
          description: Contains all deteted catalog columns
          items:
            $ref: '#/components/schemas/detectedCatalogColumn'
      description: The list of detected catalog column
    detectedCatalogColumnLinks:
      type: object
      properties:
        configure:
          $ref: '#/components/schemas/links.Importation_ConfigureCatalogColumnLink'
        ignore:
          $ref: '#/components/schemas/links.Importation_IgnoreColumnLink'
        reattend:
          $ref: '#/components/schemas/links.Importation_ReattendColumnLink'
        map:
          $ref: '#/components/schemas/links.Importation_MapCatalogColumnLink'
        unmap:
          $ref: '#/components/schemas/links.Importation_UnmapCatalogColumnLink'
    detectedCatalogColumn:
      allOf:
        - $ref: '#/components/schemas/catalogColumn'
        - required:
            - links
          type: object
          properties:
            links:
              $ref: '#/components/schemas/detectedCatalogColumnLinks'
          description: The catalog column detected during the first parsing step
    productValues:
      type: object
      additionalProperties:
        type: string
      description: The key is the column identifier
      example:
        68082b11-4ffd-4bec-964a-465a471c7d37: SKU1234
        b6d74510-41ce-42ec-947a-0bdf62e9beee: Refrigerateur
        012929c0-e78b-462a-a96e-25c061575385: >-
          http://media.conforama.fr/Medias/500000/80000/5000/500/10/G_585511_A.jpg
        ba270fa0-8482-46be-905a-cae4ca746b92: >-
          http://www.conforama.fr/gros-electromenager/encastrable/refrigerateur-encastrable/refrigerateur-combine-161-litres-far-r5115s/p/585511
        46602e10-bc45-4944-a440-63d5f7ece1f8: '42'
    productSample:
      type: object
      properties:
        productValues:
          $ref: '#/components/schemas/productValues'
      description: Describe a product sample
    configureCatalogColumnCatalogRequest:
      required:
        - catalogColumn
      type: object
      properties:
        catalogColumn:
          $ref: '#/components/schemas/catalogColumn'
      description: The request to configure a catalog column
    catalogColumnList:
      required:
        - catalogColumns
      type: object
      properties:
        catalogColumns:
          type: array
          items:
            $ref: '#/components/schemas/catalogColumn'
    customColumnListLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.Catalog_GetCustomColumnsLink'
        add:
          $ref: '#/components/schemas/links.Catalog_SaveCustomColumnLink'
    customColumnList:
      required:
        - customColumns
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/customColumnListLinks'
        customColumns:
          type: array
          items:
            $ref: '#/components/schemas/customColumn'
    importationCustomColumnListLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.Importation_GetCustomColumnsLink'
        add:
          $ref: '#/components/schemas/links.Importation_SaveCustomColumnLink'
    importationCustomColumnList:
      required:
        - customColumns
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/customColumnListLinks'
        customColumns:
          type: array
          items:
            $ref: '#/components/schemas/importationCustomColumn'
    catalogColumnLinks:
      type: object
      properties:
        rename:
          $ref: '#/components/schemas/links.Catalog_ChangeCatalogColumnUserNameLink'
    catalogColumn:
      required:
        - catalogColumnName
        - configuration
        - id
        - links
        - userColumName
      type: object
      properties:
        ignored:
          type: boolean
          description: >-
            IF true, the product values of this column will be not taken in
            account during the importation process
          default: false
        duplicateProductValueConfiguration:
          $ref: '#/components/schemas/duplicateProductValueConfiguration'
        id:
          $ref: '#/components/schemas/columnId'
        catalogColumnName:
          $ref: '#/components/schemas/catalogColumnName'
        userColumName:
          $ref: '#/components/schemas/userColumName'
        configuration:
          $ref: '#/components/schemas/columnConfiguration'
        links:
          $ref: '#/components/schemas/catalogColumnLinks'
      description: The catalog column configuration
      example:
        ignored: 'true'
        duplicateProductValueConfiguration:
          strategy: KeepFirstDuplicateProductOnly
          compareOptions: IgnoreCase
        id: 8a76f06a-fefc-4c0d-bcfe-b210f1482977
        catalogColumnName: SKU
        userColumName: My SKU
        configuration:
          beezUPColumnName: CategoryFirstLevel
          columnImportance: Required
          columnDataType: String
          columnCultureName: fr-FR
          columnFormat: MM/dd/yyyy
          canBeTruncated: 'false'
          displayGroupName: Category
    duplicateProductValueConfiguration:
      required:
        - compareOptions
        - strategy
      type: object
      properties:
        strategy:
          $ref: '#/components/schemas/duplicateProductValueStrategy'
        compareOptions:
          $ref: '#/components/schemas/compareOptions'
      description: Describe how you want to manage the duplication of the product value
    columnConfiguration:
      required:
        - columnDataType
        - columnImportance
      type: object
      properties:
        beezUPColumnName:
          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'
        columnImportance:
          $ref: '#/components/schemas/BeezUP_Common_ColumnImportance'
        columnDataType:
          $ref: '#/components/schemas/BeezUP_Common_ColumnDataType'
        columnCultureName:
          $ref: '#/components/schemas/columnCultureName'
        columnFormat:
          $ref: '#/components/schemas/columnFormat'
        canBeTruncated:
          $ref: '#/components/schemas/canBeTruncated'
        displayGroupName:
          $ref: '#/components/schemas/displayGroupName'
      description: >-
        Indicates the configuration applied on the column (catalog or custom)
        during the importation process.
    columnCultureName:
      type: string
      description: >-
        If non null, culture used to parse the value to the storage type of this
        column\r\n will be used for parsing and for consolidation proces
      example: fr-FR
    columnFormat:
      type: string
      description: >-
        If non null, format used to parse the value to the storage type of this
        column\r\n will be used for parsing and for consolidation proces
      example: MM/dd/yyyy
    mapBeezUPColumnRequest:
      required:
        - beezUPColumnName
      type: object
      properties:
        beezUPColumnName:
          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'
    importationReporting:
      required:
        - beginUtcDate
        - executionId
        - lastUpdateUtcDate
        - steps
      type: object
      properties:
        links:
          $ref: '#/components/schemas/importationReportingLinks'
        executionId:
          $ref: '#/components/schemas/executionId'
        stepName:
          type: string
          description: The last step name of the importation process
          example: IsSaveInDb
        userId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        success:
          type: boolean
          description: Indicate if the importation succeed or not.
          example: true
        totalProductCount:
          type: integer
          description: >-
            Indicate the total product count detected in the catalog during the
            importation.
          format: int32
          example: 101
        totalProductErrorCount:
          type: integer
          description: >-
            Indicate the total product count in error detected in the catalog
            during the importation.
          format: int32
          example: 0
        totalProductSuccessCount:
          type: integer
          description: >-
            Indicate the total product count in success in the catalog during
            the importation.
          format: int32
          example: 101
        errors:
          type: array
          description: Indicate the error message list related to this importation.
          items:
            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'
        lastUpdateUtcDate:
          type: string
          description: Indicate the last update UTC date of the reporting.
          format: date-time
          example: 2017-04-01T13:10:09.000Z
        autoImported:
          type: boolean
          description: Indicate if this importation is an auto import or not.
          example: true
        beginUtcDate:
          type: string
          description: Indicate the begin UTC date of this importation.
          format: date-time
          example: 2017-04-01T13:01:01.000Z
        endUtcDate:
          type: string
          description: Indicate the end UTC date of this importation.
          format: date-time
          example: 2017-04-01T13:10:09.000Z
        inputConfigurationUrl:
          type: string
          description: Indicate the input url of this importation.
          format: uri
          example: http://blal.com/catalog.csv
        steps:
          type: object
          additionalProperties:
            type: boolean
          description: >-
            Indicate the steps that have been passed during the importation
            process
          example:
            isCatalogImportPrepareReadCompleted: 'false'
            isCatalogImportComputeDiffCompleted: 'false'
            isCatalogUpdateCompleted: 'false'
            isSavedInDb: 'false'
      description: The catalog importation reporting
    startManualImportRequest:
      required:
        - input
      type: object
      properties:
        input:
          $ref: '#/components/schemas/inputConfiguration'
        duplicateProductSkuConfiguration:
          $ref: '#/components/schemas/duplicateProductValueConfiguration'
      description: >-
        The message request start a manual importation process. Indicate the way
        to handle duplicate product. Can be null if you want to reuse the
        configuration of the previous importation succeed.
    importationTechnicalProgression:
      type: object
      properties:
        stepsProgression:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Indicate for each step of the importation the uris to look at
    changeCustomColumnRequest:
      required:
        - encryptedBlocklyExpression
        - encryptedExpression
        - userColumName
      type: object
      properties:
        encryptedExpression:
          $ref: '#/components/schemas/encryptedExpression'
        encryptedBlocklyExpression:
          $ref: '#/components/schemas/encryptedBlocklyExpression'
        userColumName:
          $ref: '#/components/schemas/userColumName'
      description: The message request to change a custom column expression an user name
    customColumnLinks:
      required:
        - delete
        - expression
        - rename
        - save
        - saveExpression
      type: object
      properties:
        save:
          $ref: '#/components/schemas/links.Catalog_SaveCustomColumnLink'
        delete:
          $ref: '#/components/schemas/links.Catalog_DeleteCustomColumnLink'
        rename:
          $ref: '#/components/schemas/links.Catalog_ChangeCustomColumnUserNameLink'
        expression:
          $ref: '#/components/schemas/links.Catalog_GetCustomColumnExpressionLink'
        saveExpression:
          $ref: '#/components/schemas/links.Catalog_ChangeCustomColumnExpressionLink'
    customColumn:
      required:
        - configuration
        - id
        - links
        - userColumName
      type: object
      properties:
        id:
          $ref: '#/components/schemas/columnId'
        userColumName:
          $ref: '#/components/schemas/userColumName'
        configuration:
          $ref: '#/components/schemas/columnConfiguration'
        catalogColumnDependencies:
          type: array
          items:
            $ref: '#/components/schemas/catalogColumnName'
        links:
          $ref: '#/components/schemas/customColumnLinks'
      description: The custom column configuration
    importationCustomColumnLinks:
      required:
        - delete
        - expression
        - save
      type: object
      properties:
        save:
          $ref: '#/components/schemas/links.Importation_SaveCustomColumnLink'
        delete:
          $ref: '#/components/schemas/links.Catalog_DeleteCustomColumnLink'
        expression:
          $ref: '#/components/schemas/links.Catalog_GetCustomColumnExpressionLink'
        map:
          $ref: '#/components/schemas/links.Importation_MapCustomColumnLink'
        unmap:
          $ref: '#/components/schemas/links.Importation_UnmapCustomColumnLink'
        productSampleValue:
          $ref: >-
            #/components/schemas/links.Importation_GetProductSampleCustomColumnValueLink
    importationCustomColumn:
      required:
        - configuration
        - id
        - links
        - userColumName
      type: object
      properties:
        id:
          $ref: '#/components/schemas/columnId'
        userColumName:
          $ref: '#/components/schemas/userColumName'
        configuration:
          $ref: '#/components/schemas/columnConfiguration'
        links:
          $ref: '#/components/schemas/importationCustomColumnLinks'
      description: The custom column configuration
    randomProductList:
      required:
        - products
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/product'
    productList:
      required:
        - paginationResult
        - products
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        products:
          type: array
          items:
            $ref: '#/components/schemas/product'
    product:
      required:
        - categoryId
        - exists
        - productId
        - values
      type: object
      properties:
        productId:
          $ref: '#/components/schemas/BeezUP_Common_ProductId'
        categoryId:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryId'
        values:
          $ref: '#/components/schemas/productValues'
        exists:
          type: boolean
          description: Indicates if the product exists in the current catalog
          example: true
      description: Represent a catalog product
    getProductsRequest:
      required:
        - pageNumber
        - pageSize
      type: object
      properties:
        pageNumber:
          $ref: '#/components/schemas/BeezUP_Common_PageNumber'
        pageSize:
          $ref: '#/components/schemas/BeezUP_Common_PageSize'
        columnIdList:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BeezUP_Common_CatalogColumnId'
        exists:
          type: boolean
          description: Search for existing products or not. If null you will received both.
          example: true
        productIdList:
          type: array
          description: Filter with a list of product identifier
          items:
            $ref: '#/components/schemas/BeezUP_Common_ProductId'
        sku:
          type: string
          description: Search for product by sku
          example: MySku123
        ean:
          type: string
          description: Search for product by ean
          example: MySku123
        mpn:
          type: string
          description: Search for product by mpn
          example: MySku123
        title:
          type: string
          description: Search for products containing this title
          example: Frigo
        categoryPath:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'
        orderByCatalogColumnId:
          $ref: '#/components/schemas/BeezUP_Common_CatalogColumnId'
        withoutSubCategories:
          type: boolean
          description: >-
            Do not retrieve sub categories. By default, this value is set to
            false
          example: false
      description: The request message to get products based on these filters
    categoryList:
      required:
        - categories
      type: object
      properties:
        categories:
          type: array
          description: The category list
          items:
            $ref: '#/components/schemas/category'
      description: The object which contains the category list
    category:
      required:
        - categoryPath
        - selfProductCount
        - totalProductCount
      type: object
      properties:
        categoryId:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryId'
        categoryPath:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'
        totalProductCount:
          type: integer
          description: >-
            The total product count related to this category and his sub
            categories
          format: int32
          example: 101
        selfProductCount:
          type: integer
          description: The product count related to this category
          format: int32
          example: 101
      description: The catalog category
    getImportationProductsReportRequest:
      required:
        - pageNumber
        - pageSize
      type: object
      properties:
        pageNumber:
          $ref: '#/components/schemas/BeezUP_Common_PageNumber'
        pageSize:
          $ref: '#/components/schemas/BeezUP_Common_PageSize'
        sku:
          type: string
          description: Filter by Sku (equals)
        ean:
          type: string
          description: Filter by EAN (equals)
        mpn:
          type: string
          description: Filter by MPN (equals)
        title:
          type: string
          description: Filter by Title (StartsWith)
        errorCodes:
          $ref: '#/components/schemas/getImportationProductsReportRequestErrorCodes'
      description: Get Importation Products Report Request
    getImportationProductsReportRequestErrorCodes:
      type: array
      description: Get Importation Products Report Request Error Codes
      items:
        $ref: '#/components/schemas/getImportationProductsReportRequestErrorCode'
    getImportationProductsReportRequestErrorCode:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        userColumnName:
          $ref: '#/components/schemas/userColumName'
      description: Get Importation Products Report Request Error Codes
    getImportationProductsReportResponse:
      required:
        - paginationResult
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        productErrors:
          $ref: '#/components/schemas/productErrors'
      description: Get Importation Products Report Response
    productErrors:
      type: array
      description: Product Errors
      items:
        $ref: '#/components/schemas/productError'
    productError:
      required:
        - errors
        - lineNumber
      type: object
      properties:
        lineNumber:
          type: integer
        sku:
          $ref: '#/components/schemas/sku'
        ean:
          type: string
        mpn:
          type: string
        title:
          type: string
        errors:
          $ref: '#/components/schemas/productErrorCodes'
    productErrorCodes:
      type: array
      items:
        $ref: '#/components/schemas/productErrorCode'
    productErrorCode:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        userColumName:
          $ref: '#/components/schemas/userColumName'
        beezUPColumnName:
          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'
        errorMessage:
          type: string
    errorCode:
      type: string
      description: Error Code
    getImportationReportResponseDiff:
      required:
        - createdCount
        - deletedCount
        - updatedCount
      type: object
      properties:
        createdCount:
          type: integer
        updatedCount:
          type: integer
        deletedCount:
          type: integer
        unchangedCount:
          type: integer
    getImportationReportResponseProductMetrics:
      required:
        - activeCount
        - detectedCount
        - duplicatedCount
        - failedCount
      type: object
      properties:
        detectedCount:
          type: integer
        duplicatedCount:
          type: integer
        failedCount:
          type: integer
        activeCount:
          type: integer
    getImportationReportResponse:
      required:
        - errors
        - executionId
        - importationInfo
      type: object
      properties:
        executionId:
          $ref: '#/components/schemas/executionId'
        importationInfo:
          $ref: '#/components/schemas/getImportationReportResponseImportationInfo'
        columns:
          $ref: '#/components/schemas/getImportationReportResponseDiff'
        categories:
          $ref: '#/components/schemas/getImportationReportResponseDiff'
        products:
          $ref: '#/components/schemas/getImportationReportResponseDiff'
        productMetrics:
          $ref: '#/components/schemas/getImportationReportResponseProductMetrics'
        errors:
          $ref: '#/components/schemas/getImportationReportResponseErrors'
      description: Get Importation Report Response
    getImportationReportResponseImportationInfo:
      required:
        - beginUtcDate
        - endUtcDate
        - inputConfiguration
        - userId
      type: object
      properties:
        beginUtcDate:
          type: string
          description: The start date of the importation
          format: date-time
          example: 2017-04-01T13:01:01.000Z
        endUtcDate:
          type: string
          description: The start date of the importation
          format: date-time
          example: 2017-04-01T13:01:01.000Z
        userId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        inputConfiguration:
          $ref: '#/components/schemas/inputFileConfiguration'
    getImportationReportResponseErrors:
      type: array
      items:
        $ref: '#/components/schemas/getImportationReportResponseError'
    getImportationReportResponseError:
      required:
        - errorCode
        - productCount
        - userColumName
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/errorCode'
        userColumName:
          $ref: '#/components/schemas/userColumName'
        beezUPColumnName:
          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'
        productCount:
          type: integer
    BeezUP_Common_BeezUPColumnName:
      type: string
      description: The BeezUP column name
      example: CategoryFirstLevel
    BeezUP_Common_ColumnImportance:
      type: string
      description: Importance of the column
      example: Required
      default: Optional
      enum:
        - Required
        - Recommended
        - Optional
    BeezUP_Common_ColumnDataType:
      type: string
      description: >-
        Data type of the column, will be used for parsing and for consolidation
        proces
      example: String
      default: String
      enum:
        - String
        - Url
        - Text
        - Decimal
        - DateTime
        - Int
        - SpecialInt
        - InStock
        - Unknown
        - ImageUrl
    userColumName:
      type: string
      description: Column named by the user
      example: My SKU
    BeezUP_Common_PageNumber:
      minimum: 1
      type: integer
      description: Indicates the page number
      format: int32
      example: 1
      default: 1
    BeezUP_Common_PageSize:
      maximum: 100
      minimum: 25
      type: integer
      description: Indicate the item count per page
      format: int32
      example: 100
      default: 100
    BeezUP_Common_CatalogColumnId:
      type: string
      description: The catalog column identifier (catalog or custom column)
      format: guid
      example: bea7c21e-948b-4ac3-9ffd-4396e62c4163
    BeezUP_Common_ProductId:
      type: string
      description: The product identifier
      format: guid
      example: 578419df-1bbf-41a6-96fa-862e42182b67
    BeezUP_Common_CatalogCategoryPath:
      type: array
      description: The catalog category path
      example:
        - Vêtements
        - Femmes
        - Chaussures
      items:
        type: string
    BeezUP_Common_PaginationResult:
      required:
        - entryCount
        - links
        - pageCount
        - totalEntryCount
      type: object
      properties:
        entryCount:
          minimum: 0
          type: integer
          description: The entry count currently returned
          example: 25
        pageCount:
          minimum: 0
          type: integer
          description: The page count
          example: 38
        totalEntryCount:
          minimum: 0
          type: integer
          description: The total entry count
          example: 943
        links:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResultLinks'
      example:
        entryCount: '25'
        pageCount: '38'
        totalEntryCount: '943'
        links:
          first:
            href: /v2/user/marketplaces/orders/list/full
            method: POST
            parameters:
              - name: request
                in: body
                type: object
                schema: orderListRequest
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageSize: '25'
                  pageNumber: '1'
          last:
            href: /v2/user/marketplaces/orders/list/full
            method: POST
            parameters:
              - name: request
                in: body
                type: object
                schema: orderListRequest
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageSize: '25'
                  pageNumber: '38'
          next:
            href: /v2/user/marketplaces/orders/list/full
            method: POST
            parameters:
              - name: request
                in: body
                type: object
                schema: orderListRequest
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageSize: '25'
                  pageNumber: '2'
    executionId:
      type: string
      description: The execution identifier of the catalog importation
      format: guid
      example: bf3bc288-604c-4267-925e-66b1a15dca75
    BeezUP_Common_CatalogCategoryId:
      type: string
      description: The catalog category identifier
      format: guid
      example: 81a058a6-0451-4b79-84ef-94c58d0ed4ac
    BeezUP_Common_PaginationResultLinks:
      required:
        - first
        - last
      type: object
      properties:
        first:
          $ref: '#/components/schemas/BeezUP_Common_Link3'
        last:
          $ref: '#/components/schemas/BeezUP_Common_Link3'
        previous:
          $ref: '#/components/schemas/BeezUP_Common_Link3'
        next:
          $ref: '#/components/schemas/BeezUP_Common_Link3'
      description: The navigation links 'first', 'last', 'next', 'previous'
    sku:
      maxLength: 50
      type: string
      description: >-
        The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a
        product or service, or the product to which the offer refers.
        http://schema.org/sku
    links.GetChannelInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/channels/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: GET
    channelHeader:
      required:
        - channelId
        - channelLogoUrl
        - channelName
        - links
        - types
      type: object
      properties:
        channelId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelId'
        channelName:
          $ref: '#/components/schemas/BeezUP_Common_ChannelName'
        channelLogoUrl:
          $ref: '#/components/schemas/BeezUP_Common_HttpUrl'
        types:
          type: array
          description: The type list related to a channel
          example:
            - Marketplace
          items:
            type: string
        links:
          $ref: '#/components/schemas/channelHeaderLinks'
      description: The available channel
    channelHeaderLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelInfoLink'
      description: The links related to an available channel
    channelInfo:
      required:
        - channelId
        - channelName
      type: object
      properties:
        channelId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelId'
        channelName:
          $ref: '#/components/schemas/BeezUP_Common_ChannelName'
        channelLogoUrl:
          $ref: '#/components/schemas/BeezUP_Common_HttpUrl'
        channelDescription:
          type: string
          description: Indicae a description to the channel
          example: >-
            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia
            dolorum, animi voluptatibus maiores, assumenda maxime illum, labore
            quae quas ducimus laudantium provident veritatis doloremque
            dignissimos eum. Error magni illum autem.
        beezUPOffer:
          type: string
          description: Indicate the BeezUP offer
          example: First month free
        salesContact:
          type: object
          properties:
            name:
              type: string
              description: Indicate the BeezUP offer
              example: Stéphanie Gregis
            email:
              type: string
              description: Indicate the sales contact email
              format: email
              example: stephanie.gregis@m6.fr
            phoneNumber:
              type: string
              description: The sales contact phone number
              example: 0033 6 08 87 85 45
        details:
          type: object
          properties:
            costs:
              type: string
              description: The cost's description of the channel
              example: CPC variation from 0.10€ to 0.20€
            businessModel:
              type: string
              description: The business model of the channel
              example: CPC
            channelType:
              type: string
              description: The channel type
              example: Comparator
            trackingType:
              type: string
              description: The tracking type
              example: Redirect
            category:
              type: string
              description: The channel category
              example: null
            homeUrl:
              type: string
              description: The home url of the channel
              format: uri
              example: http://www.achetezfacile.com
            subscriptionLink:
              type: string
              description: The subscription link to the channel
              example: |
                By Email at : stephanie.gregis@m6.fr
        keyNumbers:
          type: object
          properties:
            products:
              type: string
              description: The estimated product count of the channel
              example: 1M
            categories:
              type: string
              description: The estimated category count of the channel
              example: NC
            stores:
              type: string
              description: The estimated store count of the channel
              example: '3000'
            viewsPerMonth:
              type: string
              description: The estimated view count per month of the channel
              example: 3M
        technicalContact:
          type: object
          properties:
            name:
              type: string
              description: The technical contact name
              example: Pierre Guédon
            phoneNumber:
              type: string
              description: The technical contact phone number
              example: NC
            email:
              type: string
              description: The technical contact email
              example: pierre.guedon@m6.fr
    channelCategoryDefaultCost:
      type: number
      description: The default cost on this channel category
      format: decimal
      example: 10.42
    channelCategoryChannelCode:
      type: string
      description: The channel category channel code identifier
      example: '1342'
    channelCategoryLevel:
      maximum: 9
      minimum: 1
      type: integer
      description: The channel category level starting from 1
      format: int32
      example: 3
    channelRootCategory:
      required:
        - firstLevelCategories
      type: object
      properties:
        firstLevelCategories:
          type: array
          items:
            $ref: '#/components/schemas/channelFirstLevelCategory'
      description: Get channel first level category list
    channelFirstLevelCategory:
      required:
        - channelCategoryId
        - channelCategoryLevel
        - channelCategoryName
      type: object
      properties:
        channelCategoryId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryId'
        channelCategoryName:
          type: string
          description: The channel category name
          example: Clothing
        channelCategoryLevel:
          $ref: '#/components/schemas/channelCategoryLevel'
        channelCategoryDefaultCost:
          $ref: '#/components/schemas/channelCategoryDefaultCost'
        channelCategoryChannelCode:
          $ref: '#/components/schemas/channelCategoryChannelCode'
        channelCategoryColumnOverrides:
          $ref: '#/components/schemas/channelCategoryColumnOverrides'
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/channelCategory'
      description: The first level category with his sub categories
    channelCategory:
      required:
        - channelCategoryId
        - channelCategoryLevel
        - channelCategoryPath
      type: object
      properties:
        channelCategoryId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryId'
        channelCategoryPath:
          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryPath'
        channelCategoryLevel:
          $ref: '#/components/schemas/channelCategoryLevel'
        channelCategoryDefaultCost:
          $ref: '#/components/schemas/channelCategoryDefaultCost'
        channelCategoryChannelCode:
          $ref: '#/components/schemas/channelCategoryChannelCode'
        channelCategoryColumnOverrides:
          $ref: '#/components/schemas/channelCategoryColumnOverrides'
      description: The channel category
    channelCategoryColumnOverrides:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/channelCategoryColumnOverride'
      description: The channel category column overrides
    channelCategoryColumnOverride:
      required:
        - channelColumnId
        - channelColumnName
        - configuration
        - showInMapping
      type: object
      properties:
        channelColumnId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'
        channelColumnName:
          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnName'
        channelColumnDescription:
          $ref: '#/components/schemas/channelColumnDescription'
        showInMapping:
          $ref: '#/components/schemas/channelColumnShowInMapping'
        configuration:
          $ref: '#/components/schemas/channelColumnConfiguration'
        restrictedValues:
          $ref: '#/components/schemas/channelColumnRestrictedValues'
    channelColumnDescription:
      type: string
      description: The channel column description
      example: >-
        Please enter the base prices (price per unit) according to <a
        href="http://www.gesetze-im-internet.de/pangv/__2.html">Article
        PAngV</a>
    channelColumnShowInMapping:
      type: boolean
      description: Indicates if this column must shown in the mapping page or not
      example: true
    channelColumn:
      required:
        - channelColumnId
        - channelColumnName
        - configuration
        - position
        - showInMapping
      type: object
      properties:
        channelColumnId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'
        channelColumnName:
          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnName'
        channelColumnDescription:
          $ref: '#/components/schemas/channelColumnDescription'
        showInMapping:
          $ref: '#/components/schemas/channelColumnShowInMapping'
        position:
          type: integer
          description: The position of the column starting from 1
          example: 1
        configuration:
          $ref: '#/components/schemas/channelColumnConfiguration'
        restrictedValues:
          $ref: '#/components/schemas/channelColumnRestrictedValues'
      description: The channel column
    channelColumnRestrictedValues:
      type: object
      additionalProperties:
        type: string
      description: >
        The restricted values. The key will be the restricted value identifier
        (format:guid) and the value will be the restriced value
    channelColumnConfiguration:
      required:
        - columnDataType
        - columnImportance
      type: object
      properties:
        columnImportance:
          $ref: '#/components/schemas/BeezUP_Common_ColumnImportance'
        columnDataType:
          $ref: '#/components/schemas/BeezUP_Common_ColumnDataType'
        beezUPColumnName:
          $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'
      description: >-
        The channel column configuration. The BeezUP Column Name is optional. If
        the BeezUP column is mapped we will indicate the data type and column
        importance of the BeezUP column.
    BeezUP_Common_ChannelColumnId:
      type: string
      description: The channel column identifier
      format: guid
      example: 8a76f06a-fefc-4c0d-bcfe-b210f1482977
    BeezUP_Common_ChannelId:
      type: string
      description: The channel identifier
      format: guid
      example: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
    BeezUP_Common_ChannelName:
      type: string
      description: The channel name
      example: Amazon FRA
    BeezUP_Common_HttpUrl:
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
      description: >-
        The URL <a
        href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
      example: http://www.mydomain.com
    BeezUP_Common_ChannelColumnName:
      type: string
      description: The channel column name
      example: NAME
    BeezUP_Common_ChannelCategoryId:
      type: string
      format: guid
      example: 24f508da-a069-4467-b9d3-15baebe9bac7
    BeezUP_Common_ChannelCategoryPath:
      type: array
      description: The channel category path
      example:
        - Clothing
        - Women
        - Shoes
      items:
        type: string
    links.GetChannelCatalogsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/channelCatalogs
            method: GET
    links.GetChannelCatalogFilterOperatorsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/channelCatalogs/filterOperators
            method: GET
    links.GetChannelCatalogExportationCacheInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/cache
            method: GET
    links.GetChannelCatalogExportationHistoryLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/history
            method: GET
    links.ClearChannelCatalogExportationCacheLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exportations/cache/clear
            method: POST
    links.GetChannelCatalogLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: GET
    links.DeleteChannelCatalogLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: DELETE
    links.GetChannelCatalogCategoriesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          description: >-
            If you did not configure the cost settings this link will not be
            displayed.
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categories
            method: GET
    links.DisableChannelCatalogCategoryMappingLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categories/disableMapping
            method: POST
    links.ReenableChannelCatalogCategoryMappingLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/categories/reenableMapping
            method: POST
    links.ConfigureChannelCatalogCategoryLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/category/configure
            method: POST
    links.EnableChannelCatalogLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/enable
            method: POST
    links.DisableChannelCatalogLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/disable
            method: POST
    links.GetChannelCatalogProductInfoListLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products
            method: POST
    links.ExportChannelCatalogProductInfoListLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/export
            method: POST
            parameters:
              format:
                in: query
                required: true
                type: string
                value: csv
    links.ConfigureChannelCatalogColumnMappingsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/columnMappings
            method: PUT
    links.ConfigureChannelCatalogGeneralSettingsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings/general
            method: POST
    links.ConfigureChannelCatalogCostSettingsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings/cost
            method: POST
    links.AddChannelCatalogLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/channelCatalogs
            method: POST
    links.ConfigureChannelCatalogExclusionFiltersLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters
            method: PUT
    links.GetChannelCatalogExclusionFiltersCopyLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/copy
            method: GET
    links.ConfigureChannelCatalogExclusionFiltersCopyLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/copy
            method: POST
    links.GetChannelCatalogExclusionFiltersLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/exclusionFilters
            method: GET
    links.GetChannelCatalogProductInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67
            method: GET
    links.DisableChannelCatalogProductLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/disable
            method: POST
    links.ReenableChannelCatalogProductLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/reenable
            method: POST
    links.OverrideChannelCatalogProductValuesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides
            method: POST
    links.GetChannelCatalogProductValueOverrideCopyLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides/copy
            method: GET
    links.ConfigureChannelCatalogProductValueOverrideCopyLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/products/578419df-1bbf-41a6-96fa-862e42182b67/overrides/copy
            method: POST
    channelCatalogExportCacheInfoResponse:
      required:
        - cacheInfo
        - links
      type: object
      properties:
        cacheInfo:
          $ref: '#/components/schemas/channelCatalogExportCacheInfo'
        links:
          $ref: '#/components/schemas/channelCatalogExportCacheInfoResponseLinks'
    channelCatalogExportCacheInfoResponseLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelCatalogExportationCacheInfoLink'
        clear:
          $ref: '#/components/schemas/links.ClearChannelCatalogExportationCacheLink'
    channelCatalogExportCacheInfo:
      required:
        - cacheStatus
      type: object
      properties:
        cacheStatus:
          type: string
          description: The cache status
          example: ReadyForGeneration
          x-lov: ChannelCatalogExportCacheStatus
        lastUpdateUtcDate:
          type: string
          description: The last update UTC date of the cache
          format: date-time
          example: 2014-08-25T07:32:31.584Z
        lastContentChangeUtcDate:
          type: string
          description: The last content change UTC date
          format: date-time
          example: 2014-08-25T07:30:31.584Z
        expirationUtcDate:
          type: string
          description: The expiration UTC date of the cache
          format: date-time
          example: 2014-08-25T08:02:31.584Z
        feedUrl:
          type: string
          description: The feed url
          example: https://www.scootmotoshop.com/feed.xml
    channelCatalogExportationHistoryLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelCatalogExportationHistoryLink'
    channelCatalogExportationHistory:
      required:
        - exportations
        - links
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        exportations:
          type: array
          items:
            $ref: '#/components/schemas/channelCatalogExportationReporting'
        links:
          $ref: '#/components/schemas/channelCatalogExportationHistoryLinks'
    channelCatalogExportationReporting:
      required:
        - clientIpAddress
        - clientUserAgent
        - exportationUtcDate
      type: object
      properties:
        exportationUtcDate:
          type: string
          description: The exportation UTC date
          format: date-time
          example: 2014-08-25T07:32:31.584Z
        exportationDuration:
          pattern: >-
            (00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])
          type: string
          description: |
            The exportation duration. \
            '00:01:00' measn 1 minute.
          example: '00:01:00'
        cacheStatus:
          type: string
          description: The cache status during the exportation
          example: Available
          x-lov: ChannelCatalogExportationCacheGenerationStatus
        exportedProductCount:
          type: integer
          description: The exportated product count during this exportation
          format: int32
          example: 10142
        clientIpAddress:
          type: string
          description: The IP address of the client who requests this exportation
          example: 42.101.42.101
        clientUserAgent:
          type: string
          description: >-
            The http header User-Agent sent by the client who requests this
            operation
          example: Wget/1.13.4 (linux-gnu)
    externalLinks.Catalog_GetBeezUPColumnsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/catalogs/beezUPColumns
            method: GET
    channelCatalogListLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelCatalogsLink'
        beezUPColumns:
          $ref: '#/components/schemas/externalLinks.Catalog_GetBeezUPColumnsLink'
        add:
          $ref: '#/components/schemas/links.AddChannelCatalogLink'
        filterOperators:
          $ref: '#/components/schemas/links.GetChannelCatalogFilterOperatorsLink'
      description: >
        Indicates how global actions you can do like how to create a channel
        catalog, exclusion filter operators, etc...
    channelCatalogListLovLinks:
      type: object
      properties:
        channelCatalogExclusionFilterOperatorLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        channelCatalogExportCacheStatusLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
    channelCatalogList:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/channelCatalogListLinks'
        lovLinks:
          $ref: '#/components/schemas/channelCatalogListLovLinks'
        channelCatalogs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/channelCatalog'
          description: The channel catalog list. The key is the channel catalog identifier
      description: This is the index of the channel catalog API
    addChannelCatalogRequest:
      required:
        - channelId
        - storeId
      type: object
      properties:
        channelId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelId'
        storeId:
          $ref: '#/components/schemas/BeezUP_Common_StoreId'
    generalSettings:
      required:
        - acceptToPublishInfo
        - activeBeezUPTracking
        - doNotExportOutOfStockProducts
      type: object
      properties:
        acceptToPublishInfo:
          type: boolean
          description: >-
            If true then you authorize disclosure of my statistics generated
            from clicks and sales
          example: true
        doNotExportOutOfStockProducts:
          type: boolean
          description: >
            Do not export "out of stock" products. Note: this option is not
            taken into account by the counter.
          example: true
        activeBeezUPTracking:
          type: boolean
          description: Activate BeezUP tracking for my statistics (checked by default)
          example: true
          default: true
      description: Represents the general settings of your channel catalog
    costType:
      type: string
      description: |
        CPC means cost per click.
        CPA means cost per action.
        You can have CPC/CPA with a global cost value.
        You can have CPC/CPA by category the cost value MUST be null
        You can have global fixed price.
      example: Fixed_Global
      enum:
        - CPC_Global
        - CPA_Global
        - CPC_ByCategory
        - CPA_ByCategory
        - Fixed_Global
    channelCostSettings:
      required:
        - costType
      type: object
      properties:
        costType:
          $ref: '#/components/schemas/costType'
        globalCostValue:
          type: number
          description: In case of global cost type, you have to indicate the cost value.
          format: decimal
          example: 10.21
      description: Indicate the default configuration of the cost on this channel.
    costSettings:
      required:
        - costType
      type: object
      properties:
        costType:
          $ref: '#/components/schemas/costType'
        globalCostValue:
          type: number
          description: In case of global cost type, you have to indicate the cost value.
          format: decimal
          example: 10.21
      description: >
        If this property is not indicated please force the user to configure the
        cost settings.

        Defines the cost type you have on this channel with the cost value.
    unmapCategoryRequest:
      required:
        - catalogCategoryPath
      type: object
      properties:
        catalogCategoryPath:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'
      description: >-
        The request message to unmap a catalog category path to a channel
        category path
    configureCategoryRequest:
      required:
        - channelCatalogCategories
        - overrideSubCategoryMappings
      type: object
      properties:
        overrideSubCategoryMappings:
          type: boolean
          description: >-
            Great feature! In case of mapping to parent channel category, you
            can ask to override the mapping of all sub channel category to this
            catalog category path
          example: true
        channelCatalogCategories:
          type: array
          items:
            $ref: '#/components/schemas/channelCatalogCategoryConfiguration'
      description: >-
        The request message to make a mapping between catalog category path and
        a channel category path
    channelCatalogCategoryMappingsLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelCatalogCategoriesLink'
        disable:
          $ref: '#/components/schemas/links.DisableChannelCatalogCategoryMappingLink'
        reenable:
          $ref: '#/components/schemas/links.ReenableChannelCatalogCategoryMappingLink'
      description: The action you can do on the category mappings
    channelCatalogCategoryConfigurationList:
      required:
        - channelCatalogCategoryConfigurations
        - costStatus
        - links
        - mappingStatus
      type: object
      properties:
        links:
          $ref: '#/components/schemas/channelCatalogCategoryMappingsLinks'
        channelCatalogCategoryConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/channelCatalogCategoryConfigurationInfo'
        mappingStatus:
          $ref: '#/components/schemas/mappingStatus'
        costStatus:
          $ref: '#/components/schemas/costStatus'
    mappingStatus:
      type: string
      example: required
      enum:
        - required
        - optional
        - notConfigurable
    costStatus:
      type: string
      example: required
      enum:
        - required
        - optional
        - notConfigurable
    channelCatalogCategoryMappingInfoLinks:
      type: object
      properties:
        configureCategories:
          $ref: '#/components/schemas/links.ConfigureChannelCatalogCategoryLink'
    channelCatalogCategoryConfigurationInfo:
      required:
        - catalogCategoryPath
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/channelCatalogCategoryMappingInfoLinks'
        catalogCategoryPath:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'
        channelCategoryPath:
          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryPath'
        costValue:
          $ref: '#/components/schemas/channelCatalogCategoryCostValue'
      description: For all catalog categories the current mapping applied
    channelCatalogCategoryCostValue:
      type: number
      description: >-
        In case of CPC_ByCategory or CPA_ByCategory cost type, you have to
        indicate the cost value.
      format: decimal
      example: 10.21
    channelCatalogCategoryConfiguration:
      required:
        - autoMapNewSubCategories
        - catalogCategoryPath
      type: object
      properties:
        autoMapNewSubCategories:
          type: boolean
          description: >-
            Great feature! In case of mapping to parent catalog category, you
            can ask to automatically map new sub catalog category in the next
            importation to this channel category path.
          example: true
        catalogCategoryPath:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'
        channelCategoryPath:
          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryPath'
        costValue:
          $ref: '#/components/schemas/channelCatalogCategoryCostValue'
      description: >
        Represent a mapping between a catalog category path and a channel
        category path.

        The cost on this mapping can be applied.
    channelCatalogColumnMappingWithName:
      allOf:
        - $ref: '#/components/schemas/channelCatalogColumnMapping'
        - required:
            - channelColumnName
          type: object
          properties:
            channelColumnName:
              $ref: '#/components/schemas/BeezUP_Common_ChannelColumnName'
            channelBeezUPColumnName:
              $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'
            catalogColumnName:
              $ref: '#/components/schemas/BeezUP_Common_CatalogColumnUserName'
            catalogBeezUPColumnName:
              $ref: '#/components/schemas/BeezUP_Common_BeezUPColumnName'
    channelCatalogColumnMapping:
      required:
        - channelColumnId
      type: object
      properties:
        channelColumnId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'
        channelCategoryPath:
          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryPath'
        catalogColumnId:
          $ref: '#/components/schemas/BeezUP_Common_CatalogColumnId'
      description: >-
        Represent a mapping between a channel column (considering channel
        category mapping) and a catalog column
    upgradeOfferRequired:
      required:
        - offerId
      type: object
      properties:
        offerId:
          type: integer
          description: The offer identifier required
          format: int32
          example: 9
      description: >-
        The message contains the offer identifier required to execute this
        operation
    channelCatalogColumnMappingListWithName:
      type: array
      description: The column mapping list between a channel and a catalog
      items:
        $ref: '#/components/schemas/channelCatalogColumnMappingWithName'
    channelCatalogColumnMappingList:
      type: array
      description: The column mapping list between a channel and a catalog
      items:
        $ref: '#/components/schemas/channelCatalogColumnMapping'
    channelCatalogState:
      required:
        - categoryMappingState
        - columnMappingStatus
        - exportedProductCount
      type: object
      properties:
        exportedProductCount:
          type: integer
          format: int32
          example: 101
        columnMappingStatus:
          $ref: '#/components/schemas/columnMappingStatus'
        categoryMappingState:
          $ref: '#/components/schemas/categoryMappingState'
        apiSettingsStatus:
          $ref: '#/components/schemas/BeezUP_Common_ApiSettingsStatus'
      description: Channel Catalog State
    columnMappingStatus:
      type: string
      example: success
      enum:
        - warning
        - success
        - failed
    categoryMappingState:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/categoryMappingStatus'
        uncategorizedProductCount:
          type: integer
          description: Indicates the uncategorized product count
          format: int32
          example: 101
        withoutCategoryCostProductCount:
          type: integer
          description: Indicates the count of products without cost defined
          format: int32
          example: 42
      description: The category mapping state of the channel catalog
    categoryMappingStatus:
      type: string
      example: success
      enum:
        - warning
        - success
        - failed
    channelCategorySettings:
      type: object
      properties:
        mappingRequired:
          type: boolean
          description: >-
            Indicates if the category mapping is required, otherwise you can map
            the categories but it will not block the publication of your catalog
          example: true
        mappingLeafRequired:
          type: boolean
          description: >-
            Indicates if the category mapping is required on category path leaf
            or not
          example: true
    channelCatalogCategoryMappingSettings:
      type: object
      properties:
        categoryMappingDisabledByMerchant:
          type: boolean
          description: >-
            Optional parameter. Indicates that you have decided to do not map
            your categories with the channel's categories.
          example: false
    channelCatalog:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'
        - required:
            - channelCatalogId
            - channelCategorySettings
            - channelCostSettings
            - enabled
            - generalSettings
            - isMarketplace
            - links
            - state
            - storeId
            - types
          type: object
          properties:
            enabled:
              type: boolean
              description: Indicates if the channel catalog is enable
              example: true
            isMarketplace:
              type: boolean
              description: Indicates if this channel catalog is related to a marketplace
              example: true
            channelCatalogId:
              $ref: '#/components/schemas/BeezUP_Common_ChannelCatalogId'
            storeId:
              $ref: '#/components/schemas/BeezUP_Common_StoreId'
            generalSettings:
              $ref: '#/components/schemas/generalSettings'
            channelCostSettings:
              $ref: '#/components/schemas/channelCostSettings'
            channelCategorySettings:
              $ref: '#/components/schemas/channelCategorySettings'
            costSettings:
              $ref: '#/components/schemas/costSettings'
            categoryMappingSettings:
              $ref: '#/components/schemas/channelCatalogCategoryMappingSettings'
            columnMappings:
              $ref: '#/components/schemas/channelCatalogColumnMappingListWithName'
            exclusionFilters:
              $ref: '#/components/schemas/exclusionFilters'
            exportUrl:
              $ref: '#/components/schemas/BeezUP_Common_HttpUrl'
            state:
              $ref: '#/components/schemas/channelCatalogState'
            types:
              type: array
              description: The channel type list related to the channel
              example:
                - Marketplace
              items:
                type: string
            links:
              $ref: '#/components/schemas/channelCatalogLinks'
          description: The channel catalog
    externalLinks.GetChannelCatalogMarketplaceSettingsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/channelcatatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/settings
            method: GET
    externalLinks.GetChannelInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/channels/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: GET
    channelCatalogLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelCatalogLink'
        delete:
          $ref: '#/components/schemas/links.DeleteChannelCatalogLink'
        enable:
          $ref: '#/components/schemas/links.EnableChannelCatalogLink'
        disable:
          $ref: '#/components/schemas/links.DisableChannelCatalogLink'
        configureGeneralSettings:
          $ref: >-
            #/components/schemas/links.ConfigureChannelCatalogGeneralSettingsLink
        configureCostSettings:
          $ref: '#/components/schemas/links.ConfigureChannelCatalogCostSettingsLink'
        configureColumnMappings:
          $ref: '#/components/schemas/links.ConfigureChannelCatalogColumnMappingsLink'
        reenableCategoryMappings:
          $ref: '#/components/schemas/links.ReenableChannelCatalogCategoryMappingLink'
        disableCategoryMappings:
          $ref: '#/components/schemas/links.DisableChannelCatalogCategoryMappingLink'
        categoryMappings:
          $ref: '#/components/schemas/links.GetChannelCatalogCategoriesLink'
        exclusionFilters:
          $ref: '#/components/schemas/links.GetChannelCatalogExclusionFiltersLink'
        products:
          $ref: '#/components/schemas/links.GetChannelCatalogProductInfoListLink'
        exportationCacheInfo:
          $ref: '#/components/schemas/links.GetChannelCatalogExportationCacheInfoLink'
        marketplaceSettings:
          $ref: >-
            #/components/schemas/externalLinks.GetChannelCatalogMarketplaceSettingsLink
        channelInfo:
          $ref: '#/components/schemas/externalLinks.GetChannelInfoLink'
      description: Indicates the actions you can do on a channel catalog
    productOverridesCopyResponse:
      type: object
      additionalProperties:
        type: string
      description: Product overrides compatibilites list
      example:
        8a76f06a-fefc-4c0d-bcfe-b210f1482977: '3563'
        B7B79A0B-A8DE-54DA-964C-E2704DF3738A: SHBELNL56
        57F70E81-E4F2-5034-BC65-E1D5C48EBEDA: Sony bravia
        2A77749D-0AAB-5245-89B5-6A1A4E06DACA: http://www.blalbla.nl/images/cache/dldldl.jpg
        54B3B3CB-5CA5-5471-9DAE-5310C032059A: http://www.blalbla.nl/images/cache/dlmdl.jpg
        0EA21509-1141-57BD-B679-371BC98B2ADA: http://www.blalbla.nl/images/cache/ldldld.jpg
    productOverrides:
      type: object
      additionalProperties:
        type: string
      description: The key is the channel column identifier
      example:
        8a76f06a-fefc-4c0d-bcfe-b210f1482977: '3563'
        B7B79A0B-A8DE-54DA-964C-E2704DF3738A: SHBELNL56
        57F70E81-E4F2-5034-BC65-E1D5C48EBEDA: Sony bravia
        2A77749D-0AAB-5245-89B5-6A1A4E06DACA: http://www.blalbla.nl/images/cache/dldldl.jpg
        54B3B3CB-5CA5-5471-9DAE-5310C032059A: http://www.blalbla.nl/images/cache/dlmdl.jpg
        0EA21509-1141-57BD-B679-371BC98B2ADA: http://www.blalbla.nl/images/cache/ldldld.jpg
    productOverridesWithCatalogValues:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/productOverrideWithCatalogValue'
      description: The key is the channel column identifier
      example:
        8a76f06a-fefc-4c0d-bcfe-b210f1482977:
          catalogValue: x235
          override: '3563'
        B7B79A0B-A8DE-54DA-964C-E2704DF3738A:
          catalogValue: x_ezlSHBELNL56
          override: SHBELNL56
        57F70E81-E4F2-5034-BC65-E1D5C48EBEDA:
          catalogValue: Sony
          override: Sony bravia
        2A77749D-0AAB-5245-89B5-6A1A4E06DACA:
          catalogValue: http://www.toto.com/thing/images/cache/dldldl.jpg
          override: http://www.blalbla.nl/images/cache/dldldl.jpg
        54B3B3CB-5CA5-5471-9DAE-5310C032059A:
          catalogValue: http://www.toto.com/thing/cache/dlmdl.jpg
          override: http://www.blalbla.nl/images/cache/dlmdl.jpg
        0EA21509-1141-57BD-B679-371BC98B2ADA:
          catalogValue: http://www.toto.com/thing/images/cache/ldldld.jpg
          override: http://www.blalbla.nl/images/cache/ldldld.jpg
    productOverrideWithCatalogValue:
      required:
        - override
      type: object
      properties:
        override:
          type: string
          description: The overridden product value
          example: Sony bravia
        catalogValue:
          type: string
          description: The catalog product value
          example: Sony
    exclusionFiltersResponseLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelCatalogExclusionFiltersLink'
        configure:
          $ref: >-
            #/components/schemas/links.ConfigureChannelCatalogExclusionFiltersLink
    exclusionFiltersResponse:
      required:
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/exclusionFiltersResponseLinks'
        exclusionFilters:
          $ref: '#/components/schemas/exclusionFilters'
    exclusionFilters:
      type: array
      description: The exclusion filter list
      items:
        $ref: '#/components/schemas/exclusionFilter'
    exclusionFilterName:
      type: string
      description: The exclusion filter name
      example: Exclude sony products
    exclusionFilter:
      required:
        - channelColumnId
        - enabled
        - groupId
        - name
        - operatorName
        - position
        - positionInGroup
      type: object
      properties:
        name:
          $ref: '#/components/schemas/exclusionFilterName'
        position:
          minimum: 1
          type: integer
          description: The position of the exclusion filter
          format: int32
          example: 1
        groupId:
          type: string
          description: >-
            Indicate the filter's group. All filters in the same group means an
            "AND" operation in the filter group
          format: guid
          example: d9833f4b-718a-436f-bab5-89da3d21bf60
        positionInGroup:
          minimum: 1
          type: integer
          description: >-
            Indicate the filter group position. This information is used for the
            UI purpose and must be unique in the filter group.
          format: int32
          example: 1
        channelColumnId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelColumnId'
        operatorName:
          $ref: '#/components/schemas/filterOperatorName'
        value:
          maxLength: 4000
          type: string
          description: >-
            The value indicate by the user when the filter operation requires
            it.
          example: sony
        enabled:
          type: boolean
          description: indicates if the filter is currently enable.
          example: true
      description: The exclusion filter
    filterOperatorName:
      type: string
      description: The exclusion filter operator name
      example: Contains
      x-lov: ProductColumnFilterOperatorName
    filterOperatorDataType:
      type: string
      description: Data type of the operator
      example: string
      default: string
      enum:
        - string
        - number
    filterOperator:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/filterOperatorName'
        expectedChannelColumnDataType:
          $ref: '#/components/schemas/filterOperatorDataType'
        valueRequired:
          type: boolean
          description: This operator requires a value
          example: true
        expectedValueDataType:
          $ref: '#/components/schemas/filterOperatorDataType'
      description: The filter operator
    productSetVisibilityCriteriaLogicType:
      type: string
      description: >
        Indicate how you want to combine the filters:

        * funnel: You will get the products which meet at least one of the
        product set criterion. The criteria are applied in the following order:
          - categorization
          - exclusion filters
          - deactivations
        * cumulative: You will get the products which have all the product set
        criteria
      enum:
        - funnel
        - cumulative
    productSetVisibilityCriteria:
      required:
        - logic
      type: object
      properties:
        logic:
          $ref: '#/components/schemas/productSetVisibilityCriteriaLogicType'
        exist:
          type: boolean
          description: >-
            If false, search for products absent from the current catalog. If
            true, search for products currently in the catalog. If null the
            filter will not be taken in account.
          example: true
        uncategorized:
          type: boolean
          description: >-
            Search product WITHOUT category mapped with the channel. If null the
            filter will not be taken in account.
          example: false
        excluded:
          type: boolean
          description: >-
            Search excluded products by at least an exclusion filter. If null
            the filter will not be taken in account.
          example: false
        disabled:
          type: boolean
          description: >-
            Search disabled products. If null the filter will not be taken in
            account.
          example: false
    getChannelCatalogProductInfoListRequest:
      required:
        - criteria
        - pageNumber
        - pageSize
      type: object
      properties:
        pageNumber:
          minimum: 1
          type: integer
          format: int32
          example: 1
        pageSize:
          minimum: 100
          type: integer
          format: int32
          example: 100
        criteria:
          $ref: '#/components/schemas/productSetVisibilityCriteria'
        overridden:
          type: boolean
          description: >-
            Search overridden products. If null the filter will not be taken in
            account.
          example: true
        productFilters:
          $ref: '#/components/schemas/channelCatalogProductFilters'
        catalogCategoryFilter:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryFilter'
        channelCategoryFilter:
          $ref: '#/components/schemas/BeezUP_Common_ChannelCategoryFilter'
    channelCatalogProductFilters:
      type: object
      properties:
        catalogSkus:
          type: array
          description: The catalog product SKU filter (multiple values)
          items:
            type: string
        catalogEans:
          type: array
          description: The catalog product EAN filter (multiple values)
          items:
            type: string
        catalogMpns:
          type: array
          description: The catalog product MPN filter (multiple values)
          items:
            type: string
        channelSkus:
          type: array
          description: The channel product SKU filter (multiple values)
          items:
            type: string
        channelEans:
          type: array
          description: The channel product EAN filter (multiple values)
          items:
            type: string
        channelMpns:
          type: array
          description: The channel product MPN filter (multiple values)
          items:
            type: string
        title:
          type: string
          description: The product title filter
          example: Refrigérateur
        additionalProductFilters:
          $ref: '#/components/schemas/BeezUP_Common_AdditionalProductFilters'
    channelCatalogProductsCounters:
      type: object
      properties:
        existingProductCount:
          type: integer
          description: Imported product count currently in your catalog.
          format: int32
          example: 1000
        uncategorizedProductCount:
          type: integer
          description: Product count WITHOUT category mapped on existing products.
          format: int32
          example: 250
        disabledProductCountIncludingUncategorized:
          type: integer
          description: >-
            Disabled product count INCLUDING uncategorized products on existing
            products.
          format: int32
          example: 169
        disabledProductCountExcludingUncategorized:
          type: integer
          description: >-
            Disabled product count EXCLUDING uncategorized products on existing
            products.
          format: int32
          example: 150
        excludedProductCountIncludingUncategorizedAndDisabled:
          type: integer
          description: >-
            Excluded product count INCLUDING uncategorized products AND disabled
            products on existing products.
          format: int32
          example: 66
        excludedProductCountExcludingUncategorizedAndDisabled:
          type: integer
          description: >-
            Excluded product count EXCLUDING uncategorized products AND disabled
            products on existing products.
          format: int32
          example: 50
      description: >-
        The channel catalog products counters. For each counter you will have a
        count.
    channelCatalogProductInfoListLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelCatalogProductInfoListLink'
        export:
          $ref: '#/components/schemas/links.ExportChannelCatalogProductInfoListLink'
    channelCatalogProductInfoList:
      required:
        - links
        - paginationResult
        - productInfos
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        links:
          $ref: '#/components/schemas/channelCatalogProductInfoListLinks'
        productInfos:
          type: array
          items:
            $ref: '#/components/schemas/channelCatalogProductInfo'
      description: The channel catalog product info list
    channelCatalogProductInfo:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_ProductBasicInfo'
        - required:
            - disabled
            - excluded
            - links
            - overrides
            - uncategorized
          type: object
          properties:
            overrides:
              $ref: '#/components/schemas/productOverridesWithCatalogValues'
            disabled:
              type: boolean
              description: Indicates if the product has been disabled or not
              example: false
              default: false
            uncategorized:
              type: boolean
              description: >-
                Indicates if the product's category has been NOT mapped to a
                channel category
              example: true
            excluded:
              type: boolean
              description: Indicates if the product has been excluded by a exclusion filter
              example: true
              default: false
            excludedBy:
              type: array
              example:
                - Exclude sony products
              items:
                $ref: '#/components/schemas/exclusionFilterName'
            links:
              $ref: '#/components/schemas/channelCatalogProductInfoLinks'
          description: The channel catalog product information
    channelCatalogProductInfoLinks:
      required:
        - override
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelCatalogProductInfoLink'
        override:
          $ref: '#/components/schemas/links.OverrideChannelCatalogProductValuesLink'
        disable:
          $ref: '#/components/schemas/links.DisableChannelCatalogProductLink'
        reenable:
          $ref: '#/components/schemas/links.ReenableChannelCatalogProductLink'
      description: Indicates the differents actions you can do on a channel product
    channelCatalogProductByChannelCatalogRequest:
      required:
        - channelCatalogIds
        - productId
        - storeId
      type: object
      properties:
        storeId:
          $ref: '#/components/schemas/BeezUP_Common_StoreId'
        productId:
          $ref: '#/components/schemas/BeezUP_Common_ProductId'
        channelCatalogIds:
          type: array
          description: The list of channel catalog identifier
          items:
            $ref: '#/components/schemas/BeezUP_Common_ChannelCatalogId'
    channelCatalogProductByChannelCatalogResponse:
      type: object
      properties:
        channelCatalogs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/channelCatalogProductInfo'
          description: >-
            The channel catalog product by channel catalog. The key is the
            channel catalog identifier
    BeezUP_Common_CatalogCategoryFilter:
      type: object
      properties:
        categoryPath:
          type: array
          description: Indicates on which catalog category path you want to make the filter
          example:
            - Maison
            - Chambre
          items:
            type: string
    BeezUP_Common_ChannelCategoryFilter:
      type: object
      properties:
        categoryPath:
          type: array
          description: Indicates on which channel category path you want to make the filter
          example:
            - Home
            - Bedroom
          items:
            type: string
    BeezUP_Common_ChannelCatalogId:
      type: string
      description: The channel catalog identifier
      format: guid
      example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
    BeezUP_Common_ChannelBasicInfo:
      required:
        - channelId
        - channelImageUrl
        - channelName
      type: object
      properties:
        channelId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelId'
        channelName:
          $ref: '#/components/schemas/BeezUP_Common_ChannelName'
        channelImageUrl:
          $ref: '#/components/schemas/BeezUP_Common_HttpUrl'
      description: The basic info related to a channel
    BeezUP_Common_AdditionalProductFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/BeezUP_Common_AdditionalProductFiltersValue'
      description: |
        Describe a filter on a product's column.
        The key is the column identifier of your catalog or a custom column.
    BeezUP_Common_ProductBasicInfo:
      required:
        - productExists
        - productId
        - productSku
        - productTitle
      type: object
      properties:
        productId:
          type: string
          description: The product identifier
          format: guid
          example: 00000000-0000-0000-0000-000000000000
        productSku:
          type: string
          description: The product SKU
          example: SKU1234
        productTitle:
          type: string
          description: The product tile
          example: My supert product
        productImageUrl:
          type: string
          description: The product image Url
          format: uri
          example: >-
            http://i2.cdscdn.com/pdt2/3/9/0/1/550x550/hai6901018043390/rw/haier-b20fwrss-refrigerateur-americain.jpg
        productExists:
          type: boolean
          description: Indicates if the product still exists in your catalog
          example: true
      description: The basic information related to a product
    BeezUP_Common_ApiSettingsStatus:
      type: string
      example: success
      enum:
        - warning
        - success
        - failed
    BeezUP_Common_AdditionalProductFiltersValue:
      type: object
      properties:
        operatorName:
          $ref: '#/components/schemas/BeezUP_Common_ProductColumnFilterOperatorName'
        values:
          type: array
          description: >
            Must be null if the operator is "IsNull" or "IsNotNull".

            Can contains multiple value in case of "InList" operator. Otherwise
            a single value is expected.
          example:
            - My value
          items:
            type: string
      example:
        672644c7-5bd0-4e25-88c1-1f732bda5e4c:
          operatorName: GreaterTo
          values:
            - '100'
    BeezUP_Common_CatalogColumnUserName:
      type: string
      description: The catalog column named by the user (catalog or custom column)
      example: My title
    BeezUP_Common_ProductColumnFilterOperatorName:
      type: string
      description: Indicate the operator you want to make on the columnId
      x-lov: ProductColumnFilterOperatorName
    publicationStrategy:
      type: string
      description: The Publication Type
      x-lov: MarketplacePublicationV3Strategy
    publicationType:
      type: string
      description: The Publication Type
      example: PublishOffers
      enum:
        - PublishProducts
        - PublishOffers
        - Unpublish
      x-lov: MarketplacePublicationType
    feedType:
      type: string
      description: The Feed Type
      example: Offers
      enum:
        - Products
        - Inventory
        - Pricing
        - Images
        - Relationships
        - Unpublish
        - Offers
      x-lov: MarketplacePublicationFeedType
    accountPublicationsLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetPublicationsLink'
    accountPublications:
      required:
        - links
        - publications
      type: object
      properties:
        links:
          $ref: '#/components/schemas/accountPublicationsLinks'
        publications:
          type: array
          description: The recent publications for the requested account
          example:
            - publicationType: PublishOffers
              feeds:
                - feedType: Offers
                  startUtcDate: 2016-02-13T12:01:11.000Z
                  endUtcDate: 2016-02-13T12:02:00.000Z
                  processingStatus: Done
                  exportedProducts: '10142'
                  transmittedItems: '10042'
                  publishedItems: '10041'
                  publishedItemsWithWarning: '123'
                  failedItems: '1'
                  errorMessage: ''
                  htmlReportUrl: http://www.myreporthtml.com
                  htmlReportGenerationErrorMessage: ''
                - feedType: Inventory
                  startUtcDate: 2016-02-13T12:01:11.000Z
                  endUtcDate: 2016-02-13T12:02:00.000Z
                  processingStatus: Done
                  exportedProducts: '10142'
                  transmittedItems: '10042'
                  publishedItems: '10041'
                  publishedItemsWithWarning: '123'
                  failedItems: '1'
                  errorMessage: ''
                  htmlReportUrl: http://www.myreporthtml.com
                  htmlReportGenerationErrorMessage: ''
                - feedType: Pricing
                  startUtcDate: 2016-02-13T12:01:11.000Z
                  processingStatus: InProgress
                  exportedProducts: '10142'
                  transmittedItems: '10042'
                  publishedItems: '10041'
                  publishedItemsWithWarning: '123'
                  failedItems: '1'
                  errorMessage: ''
                  htmlReportUrl: http://www.myreporthtml.com
                  htmlReportGenerationErrorMessage: ''
            - publicationType: PublishProducts
              feeds:
                - feedType: Product
                  startUtcDate: 2016-02-13T12:01:11.000Z
                  endUtcDate: 2016-02-13T12:02:00.000Z
                  processingStatus: Done
                  exportedProducts: '10142'
                  transmittedItems: '10042'
                  publishedItems: '10041'
                  publishedItemsWithWarning: '123'
                  failedItems: '1'
                  errorMessage: ''
                  htmlReportUrl: http://www.myreporthtml.com
                  htmlReportGenerationErrorMessage: ''
                - feedType: Inventory
                  startUtcDate: 2016-02-13T12:01:11.000Z
                  endUtcDate: 2016-02-13T12:02:00.000Z
                  processingStatus: Done
                  exportedProducts: '10142'
                  transmittedItems: '10042'
                  publishedItems: '10041'
                  publishedItemsWithWarning: '123'
                  failedItems: '1'
                  errorMessage: ''
                  htmlReportUrl: http://www.myreporthtml.com
                  htmlReportGenerationErrorMessage: ''
                - feedType: Pricing
                  startUtcDate: 2016-02-13T12:01:11.000Z
                  processingStatus: InProgress
                  exportedProducts: '10142'
                  transmittedItems: '10042'
                  publishedItems: '10041'
                  publishedItemsWithWarning: '123'
                  failedItems: '1'
                  errorMessage: ''
                  htmlReportUrl: http://www.myreporthtml.com
                  htmlReportGenerationErrorMessage: ''
          items:
            $ref: '#/components/schemas/publicationReporting'
      description: The publication history for an account
    publicationReporting:
      required:
        - feeds
        - publicationType
      type: object
      properties:
        publicationType:
          $ref: '#/components/schemas/publicationType'
        feeds:
          type: array
          description: The feeds that were published
          example:
            - feedType: Offers
              startUtcDate: 2016-02-13T12:01:11.000Z
              endUtcDate: 2016-02-13T12:02:00.000Z
              processingStatus: Done
              exportedProducts: '10142'
              transmittedItems: '10042'
              publishedItems: '10041'
              publishedItemsWithWarning: '123'
              failedItems: '1'
              errorMessage: ''
              htmlReportUrl: http://www.myreporthtml.com
              htmlReportGenerationErrorMessage: ''
          items:
            $ref: '#/components/schemas/publicationFeedReporting'
      description: Model for a publication reporting, can have multiple feeds
    publicationFeedReporting:
      required:
        - feedType
        - processingStatus
        - startUtcDate
      type: object
      properties:
        feedType:
          $ref: '#/components/schemas/feedType'
        startUtcDate:
          type: string
          description: The feed publication start time (UTC timezone)
          format: date-time
          example: 2016-02-13T12:01:11.000Z
        endUtcDate:
          type: string
          description: The feed publication end time (UTC timezone)
          format: date-time
          example: 2016-02-13T12:02:00.000Z
        processingStatus:
          type: string
          description: The processing status
          example: Done
        exportedProducts:
          type: integer
          description: The product count downloaded from BeezUP Export
          format: int32
          example: 10142
        transmittedItems:
          type: integer
          description: The item count (products or offers) sent to the marketplace
          format: int32
          example: 10042
        publishedItems:
          type: integer
          description: >-
            The item count (products or offers) the marketplace flagged as
            successful
          format: int32
          example: 10041
        publishedItemsWithWarning:
          type: integer
          description: >-
            The item count (products or offers) the marketplace flagged as
            successful with warnings
          format: int32
          example: 123
        failedItems:
          type: integer
          description: >-
            The item count (products or offers) the marketplace flagged as
            failed
          format: int32
          example: 1
        errorMessage:
          type: string
          description: The error message
          example: ''
        htmlReportUrl:
          type: string
          description: The Url for the Html Report generated
          format: uri
          example: http://www.myreporthtml.com
        htmlReportGenerationErrorMessage:
          type: string
          description: The error message if the Html Report generation failed
          example: Example error message
        completed:
          type: boolean
          description: Indicates if the publication is completed or not
          example: true
      description: Publication feed reporting
    links.GetChannelCatalogMarketplacePropertiesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/properties
    externalLinks.GetExternalConfigurationPageLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
    channelCatalogMarketplacePropertiesLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: >-
            #/components/schemas/links.GetChannelCatalogMarketplacePropertiesLink
        settings:
          $ref: '#/components/schemas/links.GetChannelCatalogMarketplaceSettingsLink'
        externalConfigurationPage:
          $ref: '#/components/schemas/externalLinks.GetExternalConfigurationPageLink'
    channelCatalogMarketplaceProperties:
      required:
        - links
        - propertyGroups
      type: object
      properties:
        info:
          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'
        links:
          $ref: '#/components/schemas/channelCatalogMarketplacePropertiesLinks'
        propertyGroups:
          type: array
          description: The groups settings with constraints
          example:
            - name: AccountInformations
              position: '1'
              properties:
                - name: EbayToken
                  position: '1'
                  readOnly: 'true'
                  values:
                    - >-
                      AgAAAA**AQAAAA**aAAAAA**2VFhVg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AElISgCJaLpwWdj6x9nY+seQ**OEsBAA**AAMAAA**jzsVAMwj1dPBsyCEp0Fuj/toSBrfZF2JpKKDrrXIirMzgvgbsyxnA2h1wl7WjFD+TfdCmaBq3CAFLOog/433G5gsse1DLTT6uXFajdiHnPVfnL7QtKIpQEIwL8ZO5Tx1dGl0XQLsU7knPwbGHn5X6Z3JzXrCGvvpw2+MIzDNhasYlqPfOEr8Lct5dcsIIdhXl/qgrzALe5++v76/XjaXvP6eic3uCWBEXBiXC1uisjEtOqaNIPkFaiICBaXsQUzVZdM68bQatBg5bwf6hxvqOyNJRw4pttGStovcXXjL+aszw7ejbxLv1lJ6qeTMj5oRwTPl0AzBAejcY+DTBrLEmgdzrvWHLvMOa1ijGOGzVodBoDGimiqadCPQpAVZr0e7HvQIVbOlbmKpuCUFJ4RPCv0NxpkCm1/nxZWeS9H8gd/SfLf9Chgd115dcKzgxFBoSh7myJcw+MRM7szPQ2Pwv980dTRyHvbI8XR4OieYvXmU4H7Nl51N8B3qkjYFkdcp6J06eqs4dO68lDNdWZfXHkjwI3dY6umDUp4y82IdQl8IykPty3/DZfUAfqafgiAwMHZvXjewp5HhPjDi2zgf+5EcDlvf6rNMzjsghjdWUQi4WldDk+LXgkos6jswIQaNPdpW1D4KyPYWtGYknx0Xzzuc6WmBoVwGFalgMvCWWI9Gs2w6PG5GqB9zm1Fnr3svtPbNYPQ6q3VQpkKL2SWQXy383O1cp6ZMLI9GwZe0FnrqCxb/wc4XJUVw2RoR3qiX
                - name: PayPalEmailAddress
                  position: '2'
                  required: true
                  pattern: >-
                    (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
                  x-pattern: >-
                    (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
            - displayGroupCode: AnnounceTitle
              displayGroupPosition: '2'
              properties:
                - name: Postalcode
                  required: true
                  position: '1'
                - name: Country
                  position: '2'
                  required: true
                  lovLink:
                    href: /v2/user/lov/Country_eBay
                  lovRequired: 'true'
                - name: ReturnsWithinOption
                  position: '3'
                  required: true
                  lovLink:
                    href: /v2/user/lov/ReturnsWithinDuration_eBay
                  lovRequired: 'true'
                - name: ShippingService
                  position: '4'
                  required: true
                  lovLink:
                    href: /v2/user/lov/FRA_ShippingService_eBay
                  lovRequired: 'true'
                - name: Currency
                  position: '5'
                  required: true
                  lovLink:
                    href: /v2/user/lov/Currency_eBay
                  lovRequired: 'true'
                - name: PaymentMethods
                  position: '6'
                  required: true
                  lovLink:
                    href: /v2/user/lov/PaymentMethods_eBay
                  lovRequired: 'true'
                  minItems: 1
                  maxItems: 2
            - displayGroupCode: SalesConditions
              displayGroupPosition: '3'
              properties:
                - name: ReturnsAcceptedOption
                  position: '1'
                  required: true
                  lovLink:
                    href: /v2/user/lov/ReturnsAcceptedOption_eBay
                  lovRequired: 'true'
                - name: ShippingCostPaidByOption
                  position: '2'
                  required: true
                  lovLink:
                    href: /v2/user/lov/ShippingCostPaidByOption_eBay
                  lovRequired: 'true'
                - name: RefundOption
                  position: '3'
                  required: true
                  lovLink:
                    href: /v2/user/lov/RefundOption_eBay
                  lovRequired: 'true'
                - name: ReturnsWithinOption
                  position: '4'
                  required: true
                  lovLink:
                    href: /v2/user/lov/ReturnsWithinDuration_eBay
                  lovRequired: 'true'
                - name: ReturnDescription
                  position: '5'
                  required: false
                  maxLength: 5000
            - displayGroupCode: HTML
              displayGroupPosition: '4'
              properties:
                - name: Template_HTML
                  position: '1'
                  required: false
                  maxLength: 50000
            - displayGroupCode: OrdersRetrievalOptions
              displayGroupPosition: '5'
              properties:
                - name: RetrieveOnlyOneCountry
                  description: If true allows to retireve one marketplace country only
                  position: '1'
                  type: boolean
                  required: false
          items:
            $ref: '#/components/schemas/channelCatalogMarketplacePropertyGroup'
    channelCatalogMarketplacePropertyGroup:
      required:
        - name
        - position
        - properties
      type: object
      properties:
        name:
          type: string
          description: Indicate the code identifier of the group
          example: AccountInformations
          x-lov: MarketplaceStorePropertyGroup
        position:
          minimum: 1
          type: integer
          description: Indicate the position of the group
          example: 1
        properties:
          type: array
          example:
            - name: EbayToken
              position: '1'
              readOnly: 'true'
              values:
                - >-
                  AgAAAA**AQAAAA**aAAAAA**2VFhVg**nY+sHZ2PrBmdj6wVnY+sEZ2PrA2dj6AElISgCJaLpwWdj6x9nY+seQ**OEsBAA**AAMAAA**jzsVAMwj1dPBsyCEp0Fuj/toSBrfZF2JpKKDrrXIirMzgvgbsyxnA2h1wl7WjFD+TfdCmaBq3CAFLOog/433G5gsse1DLTT6uXFajdiHnPVfnL7QtKIpQEIwL8ZO5Tx1dGl0XQLsU7knPwbGHn5X6Z3JzXrCGvvpw2+MIzDNhasYlqPfOEr8Lct5dcsIIdhXl/qgrzALe5++v76/XjaXvP6eic3uCWBEXBiXC1uisjEtOqaNIPkFaiICBaXsQUzVZdM68bQatBg5bwf6hxvqOyNJRw4pttGStovcXXjL+aszw7ejbxLv1lJ6qeTMj5oRwTPl0AzBAejcY+DTBrLEmgdzrvWHLvMOa1ijGOGzVodBoDGimiqadCPQpAVZr0e7HvQIVbOlbmKpuCUFJ4RPCv0NxpkCm1/nxZWeS9H8gd/SfLf9Chgd115dcKzgxFBoSh7myJcw+MRM7szPQ2Pwv980dTRyHvbI8XR4OieYvXmU4H7Nl51N8B3qkjYFkdcp6J06eqs4dO68lDNdWZfXHkjwI3dY6umDUp4y82IdQl8IykPty3/DZfUAfqafgiAwMHZvXjewp5HhPjDi2zgf+5EcDlvf6rNMzjsghjdWUQi4WldDk+LXgkos6jswIQaNPdpW1D4KyPYWtGYknx0Xzzuc6WmBoVwGFalgMvCWWI9Gs2w6PG5GqB9zm1Fnr3svtPbNYPQ6q3VQpkKL2SWQXy383O1cp6ZMLI9GwZe0FnrqCxb/wc4XJUVw2RoR3qiX
            - name: PaypalAddress
              position: '2'
              required: true
              pattern: >-
                (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
              x-pattern: >-
                (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
          items:
            $ref: '#/components/schemas/channelCatalogMarketplaceProperty'
    type:
      type: string
      description: The Data Type
      example: string
      enum:
        - string
        - integer
        - boolean
        - number
    channelCatalogMarketplacePropertyDiscriminatorType:
      type: string
      example: string
      enum:
        - channelCatalogMarketplaceStringProperty
        - channelCatalogMarketplaceIntegerProperty
        - channelCatalogMarketplaceBooleanProperty
        - channelCatalogMarketplaceNumberProperty
    channelCatalogMarketplaceProperty:
      required:
        - discriminatorType
        - name
        - position
        - readOnly
        - required
        - type
        - visible
      type: object
      properties:
        name:
          $ref: '#/components/schemas/channelCatalogMarketplacePropertyName'
        info:
          $ref: '#/components/schemas/BeezUP_Common_InfoSummaries'
        description:
          type: string
          description: Indicate the description of the property
          example: If true allows to retireve one marketplace country only
        position:
          minimum: 1
          type: integer
          description: Indicate the position of the property in the display group
          example: 1
        readOnly:
          type: boolean
          description: >-
            Indicate if the value cannot be changed. This is used for example
            for ebay token that should not be changed.
          example: false
          default: false
        minLength:
          minimum: 0
          type: integer
          description: Indicates the minimum size of the property value
          format: int32
          example: 1
          default: 0
        maxLength:
          minimum: 1
          type: integer
          description: Indicates the maximum size of the property value
          format: int32
          example: 500
        minItems:
          minimum: 0
          type: integer
          description: Indicates the minimum item count of the property value.
          format: int32
          example: 1
          default: 1
        maxItems:
          minimum: 1
          type: integer
          description: Indicates the maximum item count of the property value
          format: int32
          example: 2
          default: 1
        lovLink:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        lovRequired:
          type: boolean
          description: Indicates if the property value must be in the list of value.
          example: true
          default: false
        required:
          type: boolean
          description: Indicate if the property is required or not
          example: true
          default: false
        offerIdRequired:
          type: integer
          description: Indicates the offer identifier required to configure this property.
          example: 10
        visible:
          type: boolean
          description: >-
            Indicates if this property should be displayed in the configuration
            page.
          example: true
          default: true
        type:
          $ref: '#/components/schemas/type'
        discriminatorType:
          $ref: >-
            #/components/schemas/channelCatalogMarketplacePropertyDiscriminatorType
        pattern:
          type: string
          description: >-
            Channel catalog marketplace setting value format validation regular
            expression
          example: >-
            (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])
      description: Model for fetching a channel catalog marketplace property
      discriminator:
        propertyName: discriminatorType
    channelCatalogMarketplaceStringProperty:
      allOf:
        - $ref: '#/components/schemas/channelCatalogMarketplaceProperty'
        - type: object
          properties:
            default:
              type: array
              description: Indicate the default values of the property
              example:
                - My default value
              items:
                type: string
    channelCatalogMarketplaceIntegerProperty:
      allOf:
        - $ref: '#/components/schemas/channelCatalogMarketplaceProperty'
        - type: object
          properties:
            default:
              type: array
              description: Indicate the default values of the property
              example:
                - '201'
              items:
                type: integer
    channelCatalogMarketplaceBooleanProperty:
      allOf:
        - $ref: '#/components/schemas/channelCatalogMarketplaceProperty'
        - type: object
          properties:
            default:
              type: boolean
              description: Indicate the default values of the property
              example: false
    channelCatalogMarketplaceNumberProperty:
      allOf:
        - $ref: '#/components/schemas/channelCatalogMarketplaceProperty'
        - type: object
          properties:
            default:
              type: array
              description: Indicate the default values of the property
              example:
                - '201.69'
              items:
                type: number
    setChannelCatalogMarketplaceSettingsRequest:
      required:
        - settings
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/channelCatalogMarketplaceSettingArray'
      description: The channel catalog marketplace settings to save
    publishCatalogToMarketplaceRequest:
      required:
        - feedType
        - publicationStrategyKind
        - withUnpublish
      type: object
      properties:
        publicationStrategyKind:
          $ref: '#/components/schemas/publicationStrategyKind'
        feedType:
          $ref: '#/components/schemas/feedType'
        withUnpublish:
          type: boolean
          description: >-
            In full publication strategy kind, for some marktetplace, you can
            ask to unpublish or not your existing feeds on the markeptlace
            absent from your exported catalog.
      description: Publish the catalog to the marketplace
    publicationStrategyKind:
      type: string
      description: >
        Define the publication strategy kind, for that you have 2 choices 

        * Delta - This is the recommanded publication strategy kind, this
        strategy will push to the marketplace only the difference between your
        catalog and the previous published feeds done by BeezUP. 

        * Full - If you want to force the publication of all your catalog feeds
        to the marketplace. 
              !WARNING! Depending to the marketplace this operation will purge the existing offers on the marketplace that are not in the catalog or unknown from the publication feed referential.
      default: Delta
      enum:
        - Delta
        - Full
    links.GetChannelCatalogMarketplaceSettingsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/settings
    links.SetChannelCatalogMarketplaceSettingsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/channelcatatalogs/6a90fcfd-24c7-422e-a65f-aadb1725bbfe/settings
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: setChannelCatalogMarketplaceSettingsRequest
    channelCatalogMarketplaceSettingsLinks:
      required:
        - save
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetChannelCatalogMarketplaceSettingsLink'
        save:
          $ref: '#/components/schemas/links.SetChannelCatalogMarketplaceSettingsLink'
    channelCatalogMarketplaceSettings:
      required:
        - links
        - settings
      type: object
      properties:
        links:
          $ref: '#/components/schemas/channelCatalogMarketplaceSettingsLinks'
        settings:
          type: array
          example:
            - name: Country
              values:
                - FR
            - name: Currency
              values:
                - EUR
            - name: ListingDuration
              values:
                - GTC
            - name: PaymentMethods
              values:
                - CCAccepted
            - name: PayPalEmailAddress
              values:
                - pascal@ixeoline.com
            - name: PostalCode
              values:
                - '69630'
            - name: RefundOption
              values:
                - MoneyBackOrExchange
            - name: ReturnsAcceptedOption
              values:
                - ReturnsAccepted
            - name: ReturnsWithinOption
              values:
                - Days_10
            - name: ShippingCostPaidByOption
              values:
                - Buyer
            - name: ShippingService
              values:
                - FR_ColiposteColissimo
          items:
            $ref: '#/components/schemas/channelCatalogMarketplaceSetting'
      description: The channel catalog marketplace settings
    channelCatalogMarketplaceSettingArray:
      type: array
      example:
        - name: Country
          values:
            - FR
        - name: Currency
          values:
            - EUR
        - name: ListingDuration
          values:
            - GTC
        - name: PaymentMethods
          values:
            - CCAccepted
        - name: PayPalEmailAddress
          values:
            - pascal@ixeoline.com
        - name: PostalCode
          values:
            - '69630'
        - name: RefundOption
          values:
            - MoneyBackOrExchange
        - name: ReturnsAcceptedOption
          values:
            - ReturnsAccepted
        - name: ReturnsWithinOption
          values:
            - Days_10
        - name: ShippingCostPaidByOption
          values:
            - Buyer
        - name: ShippingService
          values:
            - FR_ColiposteColissimo
      items:
        $ref: '#/components/schemas/channelCatalogMarketplaceSetting'
    channelCatalogMarketplacePropertyName:
      type: string
      description: Channel catalog marketplace property name
      example: PaypalAddress
      x-lov: MarketplaceStoreProperty
    channelCatalogMarketplaceSettingDiscriminatorType:
      type: string
      example: string
      enum:
        - channelCatalogMarketplaceStringSetting
        - channelCatalogMarketplaceIntegerSetting
        - channelCatalogMarketplaceBooleanSetting
        - channelCatalogMarketplaceNumberSetting
    channelCatalogMarketplaceSetting:
      required:
        - discriminatorType
        - name
      type: object
      properties:
        name:
          $ref: '#/components/schemas/channelCatalogMarketplacePropertyName'
        discriminatorType:
          $ref: >-
            #/components/schemas/channelCatalogMarketplaceSettingDiscriminatorType
      description: Model for fetching a channel catalog marketplace setting
      discriminator:
        propertyName: discriminatorType
    channelCatalogMarketplaceStringSetting:
      allOf:
        - $ref: '#/components/schemas/channelCatalogMarketplaceSetting'
        - type: object
          properties:
            values:
              type: array
              description: Channel catalog marketplace property values
              example:
                - myemail@mydomain.com
              items:
                type: string
    channelCatalogMarketplaceIntegerSetting:
      allOf:
        - $ref: '#/components/schemas/channelCatalogMarketplaceSetting'
        - type: object
          properties:
            values:
              type: array
              description: Channel catalog marketplace property values
              example:
                - '201'
              items:
                type: integer
    channelCatalogMarketplaceBooleanSetting:
      allOf:
        - $ref: '#/components/schemas/channelCatalogMarketplaceSetting'
        - type: object
          properties:
            value:
              type: boolean
              description: Channel catalog marketplace property values
              example: false
    channelCatalogMarketplaceNumberSetting:
      allOf:
        - $ref: '#/components/schemas/channelCatalogMarketplaceSetting'
        - type: object
          properties:
            values:
              type: array
              description: Channel catalog marketplace property values
              example:
                - '201.69'
              items:
                type: number
    marketplaceChannelCatalogList:
      required:
        - links
        - marketplaceChannelCatalogs
      type: object
      properties:
        links:
          $ref: '#/components/schemas/marketplaceChannelCatalogListLinks'
        marketplaceChannelCatalogs:
          type: array
          description: The list of marketplace channel catalog
          items:
            $ref: '#/components/schemas/marketplaceChannelCatalog'
      description: The marketplace channel catalog list
    links.GetMarketplaceChannelCatalogsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/channelcatalogs
    marketplaceChannelCatalogListLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetMarketplaceChannelCatalogsLink'
    marketplaceChannelCatalog:
      required:
        - apiSettingsStatus
        - beezUPChannelCatalogId
        - beezUPChannelId
        - beezUPMarketplaceName
        - beezUPStoreId
        - beezUPStoreName
        - enabled
        - links
        - lovLinks
        - marketplaceBusinessCode
        - marketplaceIsoCountryCodeAlpha2
        - marketplaceMarketPlaceId
        - marketplaceTechnicalCode
      type: object
      properties:
        apiSettingsStatus:
          $ref: '#/components/schemas/BeezUP_Common_ApiSettingsStatus'
        enabled:
          type: boolean
          description: The enabled status of the Channel Catalog
          example: true
        marketplaceTechnicalCode:
          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'
        marketplaceBusinessCode:
          $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'
        marketplaceMarketPlaceId:
          type: string
          description: The marketplace identifier in the marketplace
          example: '71'
        marketplaceIsoCountryCodeAlpha2:
          type: string
          description: >-
            The marketplace country iso code alpha 2 (see
            http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for
            more details)
          example: FR
        beezUPMarketplaceName:
          type: object
          description: The marketplace name
          example: ebay FRA
        beezUPChannelId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelId'
        beezUPChannelCatalogId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelCatalogId'
        beezUPStoreId:
          $ref: '#/components/schemas/BeezUP_Common_StoreId'
        beezUPStoreName:
          type: string
          description: The store name
          example: My Store 1
        marketplaceMerchantIdentifiers:
          type: object
          additionalProperties:
            type: string
          description: The marketplace merchant identifier list
          example:
            Ebay_PayPalEmailAddress: yourEbayId@paypal.com
        marketplaceAccountId:
          $ref: '#/components/schemas/BeezUP_Common_MarketplaceAccountId'
        lovLinks:
          $ref: '#/components/schemas/marketplaceChannelCatalogLovLinks'
        links:
          $ref: '#/components/schemas/marketplaceChannelCatalogLinks'
      description: >-
        This object indicates you the association between a channel catalog and
        a marketplace. The account identifier will be automatically defined
        based on your marketplace merchant identfier.
    links.GetPublicationsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/channelcatalogs/publications/Amazon/123/history
    links.PublishCatalogToMarketplaceLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/channelcatalogs/publications/Cdiscount/123/publish
    marketplaceChannelCatalogLovLinks:
      type: object
      properties:
        shippingMethodLOV:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        carrierCodeLOV:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        cancelationReasonCodeLOV:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        refundReasonCodeLOV:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        marketplaceStorePropertyLOV:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        marketplaceStorePropertyGroupLOV:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
      description: Indicates the List Of Values related to the marketplace
    marketplaceChannelCatalogLinks:
      required:
        - properties
        - settings
      type: object
      properties:
        properties:
          $ref: >-
            #/components/schemas/links.GetChannelCatalogMarketplacePropertiesLink
        settings:
          $ref: '#/components/schemas/links.GetChannelCatalogMarketplaceSettingsLink'
        publications:
          $ref: '#/components/schemas/links.GetPublicationsLink'
        publishOptions:
          type: array
          items:
            $ref: '#/components/schemas/marketplaceChannelCatalogPublicationOption'
      description: >-
        Indicate the actions you can do on a channel catalog. If the settings
        are valid, you will be able to access to the publication history.
    marketplaceChannelCatalogPublicationOption:
      required:
        - feedType
        - kind
        - link
        - strategy
        - withUnpublish
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/publicationStrategyKind'
        feedType:
          $ref: '#/components/schemas/feedType'
        withUnpublish:
          type: boolean
        strategy:
          $ref: '#/components/schemas/publicationStrategy'
        link:
          $ref: '#/components/schemas/links.PublishCatalogToMarketplaceLink'
    BeezUP_Common_MarketplaceTechnicalCode:
      type: string
      description: The technical code of the marketplace.
      example: Amazon
      x-lov: OMMarketplaceTechnicalCode
    BeezUP_Common_MarketplaceBusinessCode:
      type: string
      description: >-
        In an marketplace technical code like CDiscount you can have several
        marketplaces like GO SPORT, etc. We identify them by a business code.
      example: GOSPORT
      x-lov: MarketplaceBusinessCode
    BeezUP_Common_MarketplaceAccountId:
      type: integer
      description: >-
        The marketplace account identifier in BeezUP. This account identifier is
        based on your api settings.
      format: int32
      example: 1234
    beezUPOrderId:
      type: string
      description: The BeezUP Order identifier
      format: uuid
    accountId:
      type: integer
      description: >-
        The marketplace account identifier in BeezUP. This account identifier is
        based on your api settings.
      format: int32
      example: 1234
    order_MerchantOrderId:
      type: string
      description: The order merchant identifier
      example: MyOrderMerchantId
    order_MerchantECommerceSoftwareName:
      type: string
      description: The e-commerce software name of the merchant
      example: Prestashop
    order_MerchantECommerceSoftwareVersion:
      type: string
      description: The e-commece software version of the merchant
      example: 123.0.1
    orderExportationsLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetOrderExportationsLink'
    links.GetOrderExportationsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/exportations
            method: GET
    links.ExportOrdersLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/exportations
            method: POST
            properties:
              request:
                in: body
                required: true
                type: object
                schema: exportOrderListRequest
    orderExportations:
      required:
        - exportations
        - links
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        exportations:
          type: array
          items:
            $ref: '#/components/schemas/orderExportationReporting'
        links:
          $ref: '#/components/schemas/orderExportationsLinks'
      description: |
        The list of Order report exportations.\
        The paginationResult properties can be null if the list is empty.
    orderExportationReporting:
      required:
        - enqueuedUtcDate
        - executionUUID
        - ipAddress
        - processingStatus
        - sourceType
        - sourceUserName
      type: object
      properties:
        abortionUtcDate:
          type: string
          format: date-time
          example: 2017-04-01T13:10:12.000Z
        beginUtcDate:
          type: string
          format: date-time
          example: 2017-04-01T13:10:12.000Z
        blobNameUri:
          type: string
          example: http://beezuporder2.blob.com/yourReport.csv
        endUtcDate:
          type: string
          format: date-time
          example: 2017-04-01T15:10:12.000Z
        enqueuedUtcDate:
          type: string
          format: date-time
          example: 2017-04-01T13:09:12.000Z
        errorMessage:
          type: string
          example: You have an error here
        executionUUID:
          type: string
          format: uuid
        expirationUtcDate:
          type: string
          format: date-time
          example: 2017-04-01T13:39:12.000Z
        failureUtcDate:
          type: string
          format: date-time
          example: 2017-04-01T13:39:12.000Z
        ipAddress:
          type: string
          example: 127.0.0.1
        jsonCriteria:
          type: string
          description: Raw representation of the JSON
          example: >-
            {"StartDate:"2016-09-30T22:00:00Z","EndDate:"2016-10-30T23:00:00Z","OrderListingFilterDateSearchType:0,"MarketPlaceOrderIds:null,"BeezUPOrderStatusNames:null,"ResultByPage:20,"MerchantOrderIds:null,"PageIndex:0,"MarketPlaceTechnicalCodes:["PriceMinister","Amazon","CDiscount","Mirakl"],"MarketPlaceBusinessCodes:["PRICEMINISTER"],"AccountIds:[1234,987],"StoreIds:["00000000-0000-0000-0000-00000000007c"],"BuyerFullName:null}
        lastUpdateUtcDate:
          type: string
          format: date-time
          example: 2017-04-01T15:10:12.000Z
        orderCount:
          type: integer
          format: int32
          example: 1024
        processingStatus:
          $ref: '#/components/schemas/orderExportationReportingProcessingStatus'
        remainingOrderCount:
          type: integer
          format: int32
          example: 0
        resumedUtcDate:
          type: string
          format: date-time
          example: 2017-04-01T13:39:12.000Z
        sourceType:
          $ref: '#/components/schemas/sourceType'
        sourceUserId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        sourceUserName:
          type: string
          example: Marilyn monroe
        suspendedUtcDate:
          type: string
          format: date-time
          example: 2017-04-01T13:39:12.000Z
        timeoutDuration:
          type: string
          example: '00:30:00'
        warningMessage:
          type: string
          example: You have a warning here
      description: Represent the reporting of the Order report exportations
    dateSearchType:
      type: string
      description: Indicates on which date you want to make the filter
      default: Modification
      enum:
        - Modification
        - Purchase
        - MarketPlaceModification
    invoiceAvailabilityType:
      type: string
      description: Indicates on which invoice availability to filter
      example: All
      x-lov: InvoiceAvailabilityType
    orderMerchantInfoSynchronizationStatus:
      type: string
      description: Indicates on which order merchant info synchronization status to filter
      example: All
      x-lov: OrderMerchantInfoSynchronizationStatus
    pageSize:
      maximum: 100
      minimum: 25
      type: integer
      description: Indicate the order count per page
      format: int32
      example: 100
      default: 100
    pageNumber:
      minimum: 1
      type: integer
      description: Indicates the page number
      format: int32
      example: 1
      default: 1
    order_Buyer_Name:
      type: string
      description: Buyer full name
      example: Monroe
    orderListRequestWithoutPagination:
      required:
        - beginPeriodUtcDate
        - endPeriodUtcDate
      type: object
      properties:
        marketplaceTechnicalCodes:
          type: array
          example:
            - PriceMinister
          items:
            $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'
        marketplaceBusinessCodes:
          type: array
          example:
            - PRICEMINISTER
          items:
            $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'
        accountIds:
          type: array
          description: Account Id list
          example:
            - '12345'
          items:
            $ref: '#/components/schemas/accountId'
        storeIds:
          type: array
          description: Store Id list
          items:
            $ref: '#/components/schemas/BeezUP_Common_StoreId'
        beezUPOrderStatuses:
          type: array
          example:
            - InProgress
          items:
            $ref: '#/components/schemas/beezUPOrderStatus'
        dateSearchType:
          $ref: '#/components/schemas/dateSearchType'
        beginPeriodUtcDate:
          type: string
          description: |
            The begin period you want to make the search. \
            The period MUST not be greater than 30 days.
            The begin period MUST be lower than the end period.
          format: date-time
          example: 2017-03-01T13:10:01.000Z
        endPeriodUtcDate:
          type: string
          description: |
            The end period of you search. \
            The period MUST not be greater than 30 days. \
            The end period MUST be greater than the begin period.
            The end period MUST be lower to the current date.
          format: date-time
          example: 2017-04-01T13:10:01.000Z
        invoiceAvailabilityType:
          $ref: '#/components/schemas/invoiceAvailabilityType'
        order_Buyer_Name:
          $ref: '#/components/schemas/order_Buyer_Name'
        marketplaceOrderIds:
          type: array
          example:
            - AmazonOrderId1234
          items:
            $ref: '#/components/schemas/marketplaceOrderId'
        orderMerchantInfoSynchronizationStatus:
          $ref: '#/components/schemas/orderMerchantInfoSynchronizationStatus'
        order_MerchantOrderIds:
          type: array
          description: Merchant order id list
          example:
            - MyOrderId1234
          items:
            $ref: '#/components/schemas/order_MerchantOrderId'
    orderListRequest:
      allOf:
        - $ref: '#/components/schemas/orderListRequestWithoutPagination'
        - required:
            - pageNumber
            - pageSize
          type: object
          properties:
            pageSize:
              $ref: '#/components/schemas/pageSize'
            pageNumber:
              $ref: '#/components/schemas/pageNumber'
    exportOrderListFormat:
      type: string
      description: The type of the file to export
      example: csv
      default: csv
      enum:
        - csv
    exportOrderListRequest:
      required:
        - orderListRequestWithoutPagination
        - storeId
      type: object
      properties:
        format:
          $ref: '#/components/schemas/exportOrderListFormat'
        storeId:
          $ref: '#/components/schemas/BeezUP_Common_StoreId'
        orderListRequestWithoutPagination:
          $ref: '#/components/schemas/orderListRequestWithoutPagination'
      description: >-
        The message request to export order list. The store identifier is
        requested to regroup the exportations.
    orderExportationReportingProcessingStatus:
      type: string
      example: Done
      enum:
        - None
        - InProgress
        - Done
        - Failed
        - AlreadyInProgress
        - Aborted
        - Suspended
    automaticTransitionInfoListLinks:
      required:
        - configure
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetAutomaticTransitionsLink'
        configure:
          $ref: '#/components/schemas/links.ConfigureAutomaticTransitionsLink'
    automaticTransitionInfoList:
      required:
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/automaticTransitionInfoListLinks'
        automaticTransitionInfos:
          type: array
          items:
            $ref: '#/components/schemas/automaticTransitionInfo'
    businessOperationType:
      type: string
      example: ShipOrder
      x-lov: OrderChangeBusinessOperationType
    automaticTransitionInfoLinks:
      required:
        - configure
      type: object
      properties:
        configure:
          $ref: '#/components/schemas/links.ConfigureAutomaticTransitionsLink'
    automaticTransitionInfo:
      allOf:
        - $ref: '#/components/schemas/automaticTransition'
        - required:
            - beezUPOrderStatus
            - businessOperationType
            - marketplaceBusinessCode
          type: object
          properties:
            marketplaceBusinessCode:
              $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'
            beezUPOrderStatus:
              $ref: '#/components/schemas/beezUPOrderStatus'
            businessOperationType:
              $ref: '#/components/schemas/businessOperationType'
            links:
              $ref: '#/components/schemas/automaticTransitionInfoLinks'
    configureAutomaticTransitionRequest:
      required:
        - automaticTransitions
      type: object
      properties:
        automaticTransitions:
          type: array
          items:
            $ref: '#/components/schemas/automaticTransition'
    automaticTransition:
      required:
        - accountId
        - enabled
        - marketplaceTechnicalCode
        - orderStatusTransitionId
      type: object
      properties:
        marketplaceTechnicalCode:
          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'
        accountId:
          $ref: '#/components/schemas/accountId'
        orderStatusTransitionId:
          type: integer
          format: int32
          example: 1234
        enabled:
          type: boolean
          example: false
    orderIdentifier:
      required:
        - accountId
        - beezUPOrderId
        - marketplaceTechnicalCode
      type: object
      properties:
        marketplaceTechnicalCode:
          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'
        accountId:
          $ref: '#/components/schemas/accountId'
        beezUPOrderId:
          $ref: '#/components/schemas/beezUPOrderId'
    clearMerchantOrderInfoListRequest:
      required:
        - orders
      type: object
      properties:
        orders:
          maxItems: 100
          minItems: 1
          uniqueItems: true
          type: array
          example:
            - marketplaceTechnicalCode: Amazon
              accountId: '1234'
              beezUPOrderId: '0'
            - marketplaceTechnicalCode: Amazon
              accountId: '5678'
              beezUPOrderId: '0'
            - marketplaceTechnicalCode: Ebay
              accountId: '9876'
              beezUPOrderId: '0'
          items:
            $ref: '#/components/schemas/orderIdentifier'
    setMerchantOrderInfoListRequest:
      required:
        - order_MerchantECommerceSoftwareName
        - order_MerchantECommerceSoftwareVersion
        - orders
      type: object
      properties:
        order_MerchantECommerceSoftwareName:
          $ref: '#/components/schemas/order_MerchantECommerceSoftwareName'
        order_MerchantECommerceSoftwareVersion:
          $ref: '#/components/schemas/order_MerchantECommerceSoftwareVersion'
        orders:
          maxItems: 100
          minItems: 1
          uniqueItems: true
          type: array
          example:
            - marketplaceTechnicalCode: Amazon
              accountId: '1234'
              beezUPOrderId: 8D47FF1427A26B064ca98e95f644361ada5a5be0bbb3b53
              order_MerchantOrderId: BX1234
            - marketplaceTechnicalCode: Amazon
              accountId: '5678'
              beezUPOrderId: 8D47FF149F213D055f26e3c413e4c9ba5c5cfda460547a4
              order_MerchantOrderId: BX5678
            - marketplaceTechnicalCode: Ebay
              accountId: '9876'
              beezUPOrderId: 8D47FF150217B60bdec05ab61c445d1a59e3da050b52823
              order_MerchantOrderId: BX9876
          items:
            $ref: '#/components/schemas/setMerchantOrderInfoListRequestItem'
    setMerchantOrderInfoListRequestItem:
      allOf:
        - $ref: '#/components/schemas/orderIdentifier'
        - required:
            - order_MerchantOrderId
          type: object
          properties:
            order_MerchantOrderId:
              $ref: '#/components/schemas/order_MerchantOrderId'
    setMerchantOrderInfoRequest:
      required:
        - order_MerchantECommerceSoftwareName
        - order_MerchantECommerceSoftwareVersion
        - order_MerchantOrderId
      type: object
      properties:
        order_MerchantOrderId:
          $ref: '#/components/schemas/order_MerchantOrderId'
        order_MerchantECommerceSoftwareName:
          $ref: '#/components/schemas/order_MerchantECommerceSoftwareName'
        order_MerchantECommerceSoftwareVersion:
          $ref: '#/components/schemas/order_MerchantECommerceSoftwareVersion'
    accountSynchronizationList:
      type: object
      properties:
        accountSynchronizations:
          type: array
          items:
            $ref: '#/components/schemas/accountSynchronization'
    accountSynchronization:
      required:
        - accountId
        - marketplaceBusinessCode
        - marketplaceTechnicalCode
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/accountId'
        completedHarvestSynchroUtcDate:
          type: string
          format: date-time
        marketplaceBusinessCode:
          $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'
        marketplaceTechnicalCode:
          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'
    processing:
      type: boolean
      description: >-
        If true, there is currently a harvest or an order change in progress.
        Otherwise false.
      example: false
    links.GetOrderLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000
            method: GET
    orderHeaderLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetOrderLink'
    orderHeader:
      required:
        - accountId
        - beezUPOrderId
        - etag
        - links
        - marketplaceBusinessCode
        - marketplaceTechnicalCode
        - order_LastModificationUtcDate
        - order_MarketplaceLastModificationUtcDate
        - order_MarketplaceOrderId
        - order_PurchaseUtcDate
        - order_Status_BeezUPOrderStatus
        - processing
      type: object
      properties:
        marketplaceTechnicalCode:
          $ref: '#/components/schemas/BeezUP_Common_MarketplaceTechnicalCode'
        accountId:
          $ref: '#/components/schemas/accountId'
        beezUPOrderId:
          $ref: '#/components/schemas/beezUPOrderId'
        beezUPOrderUrl:
          $ref: '#/components/schemas/BeezUP_Common_HttpUrl'
        marketplaceBusinessCode:
          $ref: '#/components/schemas/BeezUP_Common_MarketplaceBusinessCode'
        order_MarketplaceOrderId:
          $ref: '#/components/schemas/marketplaceOrderId'
        order_Status_BeezUPOrderStatus:
          $ref: '#/components/schemas/beezUPOrderStatus'
        order_Status_MarketplaceOrderStatus:
          $ref: '#/components/schemas/marketplaceOrderStatus'
        order_MerchantOrderId:
          $ref: '#/components/schemas/order_MerchantOrderId'
        order_MerchantECommerceSoftwareName:
          $ref: '#/components/schemas/order_MerchantECommerceSoftwareName'
        order_MerchantECommerceSoftwareVersion:
          $ref: '#/components/schemas/order_MerchantECommerceSoftwareVersion'
        order_PurchaseUtcDate:
          type: string
          description: The purchase date of this order
          format: date-time
          example: 2017-03-31T21:30:23.000Z
        order_LastModificationUtcDate:
          type: string
          description: The last modification UTC date done by BeezUP of this order
          format: date-time
          example: 2017-04-16T10:30:23.000Z
        order_MarketplaceLastModificationUtcDate:
          type: string
          description: The last modification UTC date done by the marketplace on this order
          format: date-time
          example: 2017-04-16T10:25:23.000Z
        order_Buyer_Name:
          $ref: '#/components/schemas/order_Buyer_Name'
        order_TotalPrice:
          type: number
          description: >-
            The total price of this order (corresponding to the amount paid by
            the customer)
          format: decimal
          example: 101.42
        order_CurrencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        order_Invoice_Number:
          type: string
          description: The order invoice number
        order_Invoice_Uri:
          type: string
          description: The order invoice URI
        processing:
          $ref: '#/components/schemas/processing'
        etag:
          $ref: '#/components/schemas/etag'
        links:
          $ref: '#/components/schemas/orderHeaderLinks'
      description: >-
        Describe the basic information related to an order. All properties with
        the prefix order_ are translated in the list of values
        /user/lov/OrderMetaInfoOrderDetails
    etag:
      type: string
      description: >
        ETag value to identify the order.\

        This information is required for the operation GetOrder and
        ChangeOrder.\

        For more details go to this link:
        http://tools.ietf.org/html/rfc7232#section-2.3
      example: '"ca071a4580129f932a03971968ffef69"'
    orderItem:
      required:
        - beezUPOrderItemId
        - orderItem_OrderItemType
      type: object
      properties:
        beezUPOrderItemId:
          type: string
          description: The BeezUP identifier of the order Item
          example: '1'
        orderItem_OrderItemType:
          type: string
          description: The order item type of the order item
          example: Product
        orderItem_MerchantImportedProductId:
          type: string
          description: >-
            The product id indicated in the catalog importation in BeezUP system
            for this order item. This property will help you to match the order
            to the inventory system.
          example: '73267'
        orderItem_MerchantImportedProductIdColumnName:
          type: string
          description: >-
            The column name for the product id indicated in the catalog
            importation in BeezUP system related to this order item. This
            property will help you to match the order to the inventory system.
          example: reference
        orderItem_MerchantImportedProductUrl:
          type: string
          description: >-
            The product url indicated in the catalog importation in BeezUP
            system related to this order item
          example: http://blabla.com/my-folder/73267.html
        orderItem_MerchantProductIdColumnName:
          type: string
          description: >-
            The column name indicate in the mapping for the product id related
            to the order item
          example: reference_produit
        orderItem_BeezUPStoreId:
          type: string
          description: >-
            The store id in the beezup system related to the order item. This
            property will help you to match the order to the inventory system.
          example: 00000000-cceb-4c20-b2c9-000000000000
        orderItem_ItemTax:
          type: number
          description: The tax of the order item
          format: decimal
          example: 0
        orderItem_Title:
          type: string
          description: The title of the order item
          example: bLA acide-plomb 6v-4.5ah 70x48x106mm
        orderItem_ImageUrl:
          type: string
          description: The URL of the image of the order item
          example: http://blabla.com//das6-45.jpg
        orderItem_MerchantProductId:
          type: string
          description: The merchant product id of the order item
          example: BlaLdas6-4.5
        orderItem_MarketPlaceProductId:
          type: string
          description: The marketplace product identifier of the order item
          example: ''
        orderItem_gtin:
          type: string
          description: The order item gtin
          example: gtin_sample
        orderItem_ItemPrice:
          type: number
          description: The price of the order item
          format: decimal
          example: 6.86
        orderItem_Quantity:
          type: number
          description: The quantity of the order item
          format: decimal
          example: 1
        orderItem_TotalPrice:
          type: number
          description: The total price of the order item
          format: decimal
          example: 6.86
        orderItem_Shipping_Price:
          type: number
          description: The shipping price of the order item
          format: decimal
          example: 0
        orderItem_Condition:
          type: string
          description: The merchant product condition of the order item
          example: New
        orderItem_MarketplaceProductUri:
          type: string
          description: The merchant product uri of the order item
          example: http://beezupblob.com/productLink.xml
        orderItem_MarketplaceImageUri:
          type: string
          description: The marketplace image uri
          example: http://beezupblob.com/marketplaceImg.jpg
      description: >-
        Describe an order item. All properties with the prefix orderItem_ are
        translated in the list of values /user/lov/OrderMetaInfoOrderItems
    orderLinks:
      allOf:
        - $ref: '#/components/schemas/orderHeaderLinks'
        - required:
            - clearMerchantInfo
            - harvest
            - history
            - setMerchantInfo
          type: object
          properties:
            history:
              $ref: '#/components/schemas/links.GetOrderHistoryLink'
            harvest:
              $ref: '#/components/schemas/links.HarvestOrderLink'
            setMerchantInfo:
              $ref: '#/components/schemas/links.SetMerchantOrderInfoLink'
            clearMerchantInfo:
              $ref: '#/components/schemas/links.ClearMerchantOrderInfoLink'
    links.GetOrderHistoryLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/history
            method: GET
    links.SetMerchantOrderInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/setMerchantOrderInfo
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: setMerchantOrderInfoRequest
    links.ClearMerchantOrderInfoLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/clearMerchantOrderInfo
            method: POST
    links.HarvestOrderLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/harvest
            method: POST
    order:
      allOf:
        - $ref: '#/components/schemas/orderHeader'
        - required:
            - links
            - orderItems
            - transitionLinks
          type: object
          properties:
            links:
              $ref: '#/components/schemas/orderLinks'
            order_MarketPlaceChannel:
              type: string
              description: >-
                Useful to identify the origin of the order. For example in
                Amazon.
              example: Amazon France
            order_TotalTax:
              type: number
              description: The total tax of this order
              format: decimal
              example: 0
            order_TotalCommission:
              type: number
              description: The total commission of this order
              format: decimal
              example: 0
            order_PaymentMethod:
              type: string
              description: The payment method of this order
              example: 1 / 1X
            order_PayingUtcDate:
              type: string
              description: The UTC date of the payment of this order
              format: date-time
              example: 2017-04-01T13:22:01.000Z
            order_Comment:
              type: string
              description: The comment associated to this order
              example: This is a comment
            order_Shipping_FirstName:
              type: string
              description: Order Shipping first name
              example: Monroe
            order_Shipping_LastName:
              type: string
              description: Order Shipping last name
              example: Monroe
            order_Shipping_Civility:
              type: string
              description: >-
                The civility of the person in the shipping address for this
                order
              example: MRS
            order_Shipping_CompanyName:
              type: string
              description: The company name of the shipping address for this order
              example: My Company
            order_Shipping_AddressName:
              type: string
              description: The name of the person in the shipping address for this order
              example: Jacques BAUREGARD
            order_Shipping_Email:
              type: string
              description: The email of the person in the shipping address for this order
              example: client_000000@manomano.fr
            order_Shipping_AddressLine1:
              type: string
              description: The shipping address line 1 of this order
              example: 5 rue amélie
            order_Shipping_AddressLine2:
              type: string
              description: The shipping address line 2 of this order
              example: BDR
            order_Shipping_AddressLine3:
              type: string
              description: The shipping address line 3 of this order
              example: RDC
            order_Shipping_AddressPostalCode:
              type: string
              description: The shipping address postal code of this order
              example: '13014'
            order_Shipping_AddressCity:
              type: string
              description: The shipping address city of this order
              example: Marseille
            order_Shipping_AddressStateOrRegion:
              type: string
              description: The shipping address state or region of this order
              example: BDR
            order_Shipping_AddressCountryName:
              type: string
              description: The shipping address country name
              example: France
            order_Shipping_AddressCountryIsoCodeAlpha2:
              type: string
              description: >-
                The shipping address country iso code alpha 2 (see
                http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table
                for more details)
              example: FR
            order_Shipping_Phone:
              type: string
              description: >-
                The phone number of the person in the shipping address for this
                order
              example: 33000000041
            order_Shipping_MobilePhone:
              type: string
              description: >-
                The mobile phone number of the person in the shipping address
                for this order
              example: 33000000042
            order_Shipping_Price:
              type: number
              description: The shipping price of this order
              format: decimal
              example: 6.9
            order_Shipping_Method:
              type: string
              description: The shipping method of this order
              example: DPD Domicile
            order_Shipping_ShippingTax:
              type: number
              description: The shipping tax for this order
              format: decimal
              example: 0
            order_Shipping_EarliestShipUtcDate:
              type: string
              description: The UTC date of the earliest ship for this order
              format: date-time
              example: 2017-04-02T21:30:00.000Z
            order_Shipping_LatestShipUtcDate:
              type: string
              description: The UTC date of the latest ship for this order
              format: date-time
              example: 2017-04-30T21:30:00.000Z
            order_Buyer_Identifier:
              type: string
              description: The buyer identifier for this order
              example: '1234567890'
            order_Buyer_FirstName:
              type: string
              description: Order Buyer first name
              example: Monroe
            order_Buyer_LastName:
              type: string
              description: Order Buyer last name
              example: Monroe
            order_Buyer_Civility:
              type: string
              description: The buyer civility for this order
              example: Marseille
            order_Buyer_CompanyName:
              type: string
              description: The buyer company name for this order
              example: Marsillia
            order_Buyer_Email:
              type: string
              description: The email of the buyer for this order
              example: client_000000@manomano.fr
            order_Buyer_AddressLine1:
              type: string
              description: The Buyer address line 1 of this order
              example: 5 rue amélie
            order_Buyer_AddressLine2:
              type: string
              description: The Buyer address line 2 of this order
              example: BDR
            order_Buyer_AddressLine3:
              type: string
              description: The Buyer address line 3 of this order
              example: RDC
            order_Buyer_AddressPostalCode:
              type: string
              description: The Buyer address postal code of this order
              example: '13014'
            order_Buyer_AddressCity:
              type: string
              description: The Buyer address city of this order
              example: Marseille
            order_Buyer_AddressStateOrRegion:
              type: string
              description: The Buyer address state or region of this order
              example: BDR
            order_Buyer_AddressCountryName:
              type: string
              description: The Buyer address country name
              example: France
            order_Buyer_AddressCountryIsoCodeAlpha2:
              type: string
              description: >-
                The Buyer address country iso code alpha 2 (see
                http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table
                for more details)
              example: FR
            order_Buyer_Phone:
              type: string
              description: The phone number of the buyer for this order
              example: 33000000101
            order_Buyer_MobilePhone:
              type: string
              description: The mobile phone number of the buyer for this order
              example: 33000000042
            order_IsPrime:
              type: boolean
              description: Indicates if the order is considered as Prime (only on Amazon)
              example: true
            order_FulfilledBy:
              type: string
              description: The order FulfilledBy
            order_IsBusiness:
              type: boolean
              description: The order IsBusiness
            order_OrderSourceUri:
              type: string
              description: >
                Technical information: The url to the source of this order. We
                received this information from the marketplace.
              format: uri
              example: http://beezupblob.com/order.xml
            order_OrderItemsSourceUri:
              type: string
              description: >
                Technical information: The url to the source of this order
                items. We received this information from the marketplace.
              format: uri
              example: http://beezupblob.com/orderItems.xml
            orderItems:
              type: array
              items:
                $ref: '#/components/schemas/orderItem'
            transitionLinks:
              $ref: '#/components/schemas/orderTransitionLinks'
          description: >-
            Describe in details all informations related to an order. All
            properties with the prefix order_ are translated in the list of
            values /user/lov/OrderMetaInfoOrderDetails.
    links.ChangeOrderLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          properties:
            rel:
              type: string
              description: Indicate the relation name related to the link
              example: self
        - type: object
          example:
            rel: ShipOrder
            href: >-
              /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder
            method: POST
            templated: 'true'
            parameters:
              If-Match:
                in: header
                value: '"ca071a4580129f932a03971968ffef69"'
                required: true
                type: string
              testMode:
                in: query
                type: boolean
                required: false
                value: 'false'
              userName:
                in: query
                type: string
                required: true
              request:
                in: body
                type: object
                schema: changeOrderRequest
                properties:
                  order_Shipping_FulfillmentDate:
                    required: true
                    type: date-time
                  order_Shipping_ShipperTrackingNumber:
                    required: true
                    type: string
                  order_Shipping_CarrierName:
                    required: true
                    type: string
                    lovRequired: 'true'
                    lovLink:
                      href: /v2/user/PriceMinisterCarrierName
                  order_Shipping_Method:
                    required: true
                    type: string
                    lovRequired: 'false'
                    lovLink:
                      href: /v2/user/ShippingMethod_PriceMinister
    orderTransitionLinks:
      type: array
      description: Contains the authorized change actions for an order
      example:
        - rel: ShipOrder
          href: >-
            /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder
          method: POST
          templated: 'true'
          parameters:
            If-Match:
              in: header
              value: '"ca071a4580129f932a03971968ffef69"'
              required: true
              type: string
            testMode:
              in: query
              type: boolean
              required: false
              value: 'false'
            userName:
              in: query
              type: string
              required: true
            request:
              in: body
              type: object
              schema: changeOrderRequest
              properties:
                order_Shipping_FulfillmentDate:
                  required: true
                  type: date-time
                order_Shipping_ShipperTrackingNumber:
                  required: true
                  type: string
                order_Shipping_CarrierName:
                  required: true
                  type: string
                  lovRequired: 'true'
                  lovLink:
                    href: /v2/user/PriceMinisterCarrierName
                order_Shipping_Method:
                  required: true
                  type: string
                  lovRequired: 'false'
                  lovLink:
                    href: /v2/user/ShippingMethod_PriceMinister
        - rel: CancelOrder
          href: >-
            /v2/user/marketplaces/orders/Amazon/1001/00000000000000000000000000000000000000000000000/CancelOrder
          method: POST
          templated: 'true'
          parameters:
            If-Match:
              in: header
              value: '"ca071a4580129f932a03971968ffef69"'
              required: true
              type: string
            testMode:
              in: query
              type: boolean
              required: false
              value: 'false'
            userName:
              in: query
              type: string
              required: true
            request:
              in: body
              type: object
              schema: changeOrderRequest
              properties:
                order_Cancel_Reason:
                  required: true
                  type: string
      items:
        $ref: '#/components/schemas/links.ChangeOrderLink'
    orderIndex:
      required:
        - links
        - lovLinks
      type: object
      properties:
        links:
          $ref: '#/components/schemas/orderIndexLinks'
        lovLinks:
          $ref: '#/components/schemas/orderIndexLovLinks'
    links.GetOrderIndexLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders
            method: GET
    orderIndexLinks:
      required:
        - autoTransitions
        - clearMerchantInfos
        - export
        - harvest
        - lightOrders
        - orders
        - self
        - setMerchantInfos
        - status
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetOrderIndexLink'
        status:
          $ref: '#/components/schemas/links.GetMarketplaceAccountsSynchronizationLink'
        harvest:
          $ref: '#/components/schemas/links.HarvestAllLink'
        setMerchantInfos:
          $ref: '#/components/schemas/links.SetMerchantOrderInfoListLink'
        clearMerchantInfos:
          $ref: '#/components/schemas/links.ClearMerchantOrderInfoListLink'
        export:
          $ref: '#/components/schemas/links.ExportOrdersLink'
        autoTransitions:
          $ref: '#/components/schemas/links.GetAutomaticTransitionsLink'
        exportations:
          $ref: '#/components/schemas/links.GetOrderExportationsLink'
        orders:
          $ref: '#/components/schemas/links.GetOrderListFullLink'
        lightOrders:
          $ref: '#/components/schemas/links.GetOrderListLightLink'
      description: Gives you all entry point operations you can do on this API
    orderIndexLovLinks:
      required:
        - orderChangeBusinessOperationType
        - orderProperty
        - orderPropertyPosted
        - orderState
      type: object
      properties:
        orderChangeBusinessOperationType:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        orderState:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        orderProperty:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        orderPropertyPosted:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
      description: >-
        Gives you all the LOV to get the translations realated to operation
        name, codes, property names and statuses.
    links.GetOrderListFullLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/list/full
            method: POST
            properties:
              Accept-Encoding:
                in: header
                required: true
                type: ​array
                schema: string
              request:
                in: body
                required: false
                type: object
                schema: orderListRequest
    links.GetOrderListLightLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/list/light
            method: POST
            properties:
              request:
                in: body
                required: false
                type: object
                schema: orderListRequest
    links.GetAutomaticTransitionsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/autoTransitions
            method: GET
    links.ConfigureAutomaticTransitionsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/autoTransitions
            method: POST
            parameters:
              request:
                in: body
                request: 'true'
                schema: configureAutomaticTransitionRequest
    orderListLinks:
      required:
        - clearMerchantInfos
        - export
        - harvest
        - setMerchantInfos
        - status
      type: object
      properties:
        harvest:
          $ref: '#/components/schemas/links.HarvestAllLink'
        setMerchantInfos:
          $ref: '#/components/schemas/links.SetMerchantOrderInfoListLink'
        clearMerchantInfos:
          $ref: '#/components/schemas/links.ClearMerchantOrderInfoListLink'
        export:
          $ref: '#/components/schemas/links.ExportOrdersLink'
        status:
          $ref: '#/components/schemas/links.GetMarketplaceAccountsSynchronizationLink'
      description: The list of actions you can do from the order list response
    links.GetMarketplaceAccountsSynchronizationLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/status
            method: GET
    orderListLightLinks:
      allOf:
        - $ref: '#/components/schemas/orderListLinks'
        - required:
            - self
          type: object
          properties:
            self:
              $ref: '#/components/schemas/links.GetOrderListLightLink'
    orderListFullLinks:
      allOf:
        - $ref: '#/components/schemas/orderListLinks'
        - required:
            - self
          type: object
          properties:
            self:
              $ref: '#/components/schemas/links.GetOrderListFullLink'
    links.SetMerchantOrderInfoListLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/setMerchantOrderInfos
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: setMerchantOrderInfoRequest
    links.ClearMerchantOrderInfoListLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/clearMerchantOrderInfos
            method: POST
    links.HarvestAllLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/marketplaces/orders/harvest
            method: POST
    orderListLight:
      required:
        - links
        - orders
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/orderHeader'
        links:
          $ref: '#/components/schemas/orderListLightLinks'
      description: |
        The order list with minimum information we have from the orders.\
        The paginationResult properties can be null if the list is empty.
    orderListFull:
      required:
        - links
        - orders
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/order'
        links:
          $ref: '#/components/schemas/orderListFullLinks'
      description: >
        The order list with all information we have from the orders and its
        items.\

        The paginationResult properties can be null if the list is empty.
    beezUPOrderStatus:
      type: string
      description: BeezUP order status. Unified for all marketplaces.
      example: Shipped
      x-lov: BeezUPOrderState
    marketplaceOrderStatus:
      type: string
      description: The marketplace order state
      example: In_progress_3
    marketplaceOrderId:
      type: string
      description: The order marketplace identifier
      example: AMAZON12345
    orderHistory:
      type: object
      properties:
        changeOrderReportings:
          type: array
          description: The list of change order operation
          items:
            $ref: '#/components/schemas/changeOrderReporting'
        harvestOrderReportings:
          type: array
          items:
            $ref: '#/components/schemas/harvestOrderReporting'
        lastModificationUtcDate:
          type: string
          format: date-time
      description: Describe the history related to an order
    sourceType:
      type: string
      description: Indicates the origin of the operation
      example: Api
      enum:
        - Api
        - Go
    executionUUID:
      type: string
      description: The execution identifier
      format: uuid
    changeOrderReporting:
      type: object
      properties:
        executionUUID:
          $ref: '#/components/schemas/executionUUID'
        changeOrderType:
          $ref: '#/components/schemas/businessOperationType'
        sourceType:
          $ref: '#/components/schemas/sourceType'
        sourceUserId:
          $ref: '#/components/schemas/BeezUP_Common_UserId'
        sourceUserName:
          type: string
          example: Guillaume Tell
        creationUtcDate:
          type: string
          description: The creation UTC date of the execution
          format: date-time
          example: 2017-04-01T13:10:03.000Z
        processingStatus:
          type: string
          description: The processing status of the execution
          example: Done
        lastUpdateUtcDate:
          type: string
          description: The last update UTC date of the execution
          format: date-time
          example: 2017-04-01T13:10:05.000Z
        errorMessage:
          type: string
          description: The error message during the execution
          example: This is an error message
        ipAddress:
          type: string
          description: The IP address who request this operation
          example: 127.0.0.1
        testMode:
          type: boolean
          description: This operation was a test
          example: false
        details:
          type: object
          additionalProperties:
            type: object
            properties: {}
      description: The reporting related to a change order operation
    harvestOrderReporting:
      type: object
      properties:
        executionUUID:
          $ref: '#/components/schemas/executionUUID'
        creationUtcDate:
          type: string
          description: The creation UTC date of the execution
          format: date-time
          example: 2017-04-01T13:10:03.000Z
        processingStatus:
          type: string
          description: The processing status of the execution
          example: Done
        lastUpdateUtcDate:
          type: string
          description: The last update UTC date of the execution
          format: date-time
          example: 2017-04-01T13:10:05.000Z
        errorMessage:
          type: string
          description: The warning message during the execution
          example: This is an error message
        warningMessage:
          type: string
          description: The warning message during the execution
          example: This is a warning
        beezUPStatus:
          $ref: '#/components/schemas/beezUPOrderStatus'
        marketplaceStatus:
          type: string
          description: The order marketplace status
          example: In_progress_3
        beezUPForcedStatus:
          type: string
          description: >-
            The marketplace order status forced by BeezUP during the order
            change oepration. This could happend when there is no status on the
            marketplace side.
          example: In_progress_3
      description: The reporting related to a harvest order operation
    changeOrderListRequest:
      required:
        - changeOrders
      type: object
      properties:
        changeOrders:
          type: array
          description: The change order operations
          items:
            $ref: '#/components/schemas/changeOrderListRequestItem'
      description: >-
        Contains all change order operations you want to make.  (max 100 items
        per call)
    changeOrderListRequestItem:
      required:
        - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/orderIdentifierWithETag'
        changeOrderRequest:
          $ref: '#/components/schemas/changeOrderRequest'
      description: Contains the order identifier and the change order request
    orderIdentifierWithETag:
      allOf:
        - $ref: '#/components/schemas/orderIdentifier'
        - required:
            - etag
          type: object
          properties:
            etag:
              $ref: '#/components/schemas/etag'
    changeOrderRequest:
      type: object
      additionalProperties:
        type: string
      description: >-
        All properties with the prefix order_ are translated in the list of
        values /user/lov#OrderMetaInfoPosted
      example:
        order_Shipping_ShipperTrackingNumber: 1H01845163783
        order_Shipping_ShippingUrl: https://trackingpackage.com?number=1H01845163783
        order_Shipping_CarrierName: La poste
        order_Shipping_FulfillmentDate: 2014-09-23T09:58:00.000Z
        order_Shipping_EstimatedDeliveryDate: 2014-09-24T09:58:00.000Z
    batchOrderOperationResponse:
      required:
        - operations
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/orderOperationResponse'
      description: The response given by the batch operation
    orderOperationResponse:
      required:
        - order
        - status
        - success
      type: object
      properties:
        order:
          $ref: '#/components/schemas/orderIdentifier'
        success:
          type: boolean
          description: Indicates if the operation succeed or not
          example: true
        status:
          type: integer
          description: Indicates the http status corresponding to the individual operation
          example: 204
        errors:
          type: array
          description: The error list
          items:
            $ref: '#/components/schemas/BeezUP_Common_UserErrorMessage'
      description: The response given by the batch operation for an order
    oMReadyMarketplaceBusinessCodeResponse:
      type: array
      items:
        $ref: '#/components/schemas/listOfValueItem'
    orderListFullWithLinks:
      required:
        - links
        - orders
        - paginationResult
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/orderWithLinks'
        links:
          $ref: '#/components/schemas/orderListFullLinks'
        paginationResult:
          $ref: '#/components/schemas/paginationResult'
    orderListLightWithLinks:
      required:
        - links
        - orders
        - paginationResult
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/orderHeaderWithLinks'
        links:
          $ref: '#/components/schemas/orderListLightLinks'
        paginationResult:
          $ref: '#/components/schemas/paginationResult'
    orderWithLinks:
      allOf:
        - $ref: '#/components/schemas/order'
        - required:
            - links
            - transitionLinks
          type: object
          properties:
            links:
              $ref: '#/components/schemas/orderLinks'
            transitionLinks:
              $ref: '#/components/schemas/orderTransitionLinks'
    orderHeaderWithLinks:
      allOf:
        - $ref: '#/components/schemas/orderHeader'
        - required:
            - links
          type: object
          properties:
            links:
              $ref: '#/components/schemas/orderHeaderLinks'
    links.GetOrderV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: >-
              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000
            method: GET
    links.GetOrderHistoryV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: >-
              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/history
            method: GET
    links.HarvestOrderV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: >-
              /orders/v3/Amazon/1001#/00000000000000000000000000000000000000000000000/harvest
            method: POST
    links.SetMerchantOrderInfoV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: >-
              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/setMerchantOrderInfo
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: setMerchantOrderInfoRequest
    links.ClearMerchantOrderInfoV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: >-
              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/clearMerchantOrderInfo
            method: POST
    links.GetOrderListLightV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: /orders/v3/list/light
            method: POST
            properties:
              request:
                in: body
                required: false
                type: object
                schema: orderListRequest
    links.HarvestAllV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: /orders/v3/harvest
            method: POST
    links.SetMerchantOrderInfoListV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: /orders/v3/setMerchantOrderInfos
            method: POST
            parameters:
              request:
                in: body
                required: true
                type: object
                schema: setMerchantOrderInfoRequest
    links.ClearMerchantOrderInfoListV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: /orders/v3/clearMerchantOrderInfos
            method: POST
    links.GetMarketplaceAccountsSynchronizationV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: /orders/v3/status
            method: GET
    links.ChangeOrderV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          properties:
            rel:
              type: string
              description: Indicate the relation name related to the link
              example: self
        - type: object
          example:
            rel: ShipOrder
            href: >-
              /orders/v3/Amazon/1001/00000000000000000000000000000000000000000000000/ShipOrder
            method: POST
            templated: 'true'
            parameters:
              If-Match:
                in: header
                value: '"ca071a4580129f932a03971968ffef69"'
                required: true
                type: string
              testMode:
                in: query
                type: boolean
                required: false
                value: 'false'
              userName:
                in: query
                type: string
                required: true
              request:
                in: body
                type: object
                schema: changeOrderRequest
                properties:
                  order_Shipping_FulfillmentDate:
                    required: true
                    type: date-time
                  order_Shipping_ShipperTrackingNumber:
                    required: true
                    type: string
                  order_Shipping_CarrierName:
                    required: true
                    type: string
                    lovRequired: 'true'
                    lovLink:
                      href: /v2/user/PriceMinisterCarrierName
                  order_Shipping_Method:
                    required: true
                    type: string
                    lovRequired: 'false'
                    lovLink:
                      href: /v2/user/ShippingMethod_PriceMinister
    links.GetOrderListFullV3Link:
      allOf:
        - $ref: '#/components/schemas/link3'
        - type: object
          example:
            href: /orders/v3/list/full
            method: POST
            properties:
              Accept-Encoding:
                in: header
                required: true
                type: string
              request:
                in: body
                required: false
                type: object
                schema: orderListRequest
    errorResponseMessage:
      required:
        - errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/userErrorMessage'
      x-exclude: true
    changeOrderListRequestV2:
      required:
        - changeOrders
      type: object
      properties:
        changeOrders:
          type: array
          description: The change order operations
          items:
            $ref: '#/components/schemas/changeOrderListRequestItemV2'
      description: >-
        Contains all change order operations you want to make.  (max 100 items
        per call)
    listOfValueItem:
      required:
        - codeIdentifier
        - intIdentifier
      type: object
      properties:
        position:
          type: integer
          format: int32
          example: 1
        codeIdentifier:
          type: string
          example: FRA
        translationText:
          type: string
          example: France
        intIdentifier:
          type: integer
          format: int32
          example: 1
      description: This object is used by LOV apis
    userErrorMessage:
      required:
        - code
        - message
      type: object
      properties:
        docUrl:
          $ref: '#/components/schemas/docUrl'
        code:
          $ref: '#/components/schemas/errorCode'
        message:
          type: string
          description: The error message
          example: >
            There is already an importation in progress:
            b24d0dd8-a561-478a-9b26-34f573f03527
        cultureName:
          $ref: '#/components/schemas/cultureName'
        arguments:
          $ref: '#/components/schemas/userErrorMessageArguments'
      x-exclude: true
    paginationResult:
      required:
        - entryCount
        - links
        - pageCount
        - totalEntryCount
      type: object
      properties:
        entryCount:
          minimum: 0
          type: integer
          description: The entry count currently returned
          example: 25
        pageCount:
          minimum: 0
          type: integer
          description: The page count
          example: 38
        totalEntryCount:
          minimum: 0
          type: integer
          description: The total entry count
          example: 943
        links:
          $ref: '#/components/schemas/paginationResultLinks'
      example:
        entryCount: '25'
        pageCount: '38'
        totalEntryCount: '943'
        links:
          first:
            href: /merchant/orders/v1/list/full
            method: POST
            parameters:
              - name: request
                in: body
                type: object
                schema: orderListRequest
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageSize: '25'
                  pageNumber: '1'
          last:
            href: /merchant/orders/v1/list/full
            method: POST
            parameters:
              - name: request
                in: body
                type: object
                schema: orderListRequest
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageSize: '25'
                  pageNumber: '38'
          next:
            href: /merchant/orders/v1/list/full
            method: POST
            parameters:
              - name: request
                in: body
                type: object
                schema: orderListRequest
                value:
                  beginPeriodUtcDate: 2014-08-25T07:32:31.584Z
                  endPeriodUtcDate: 2014-09-24T07:32:31.584Z
                  pageSize: '25'
                  pageNumber: '2'
      x-exclude: true
    orderChangeType:
      type: string
      description: The business operation type that can be done on an order
      x-lov: OrderChangeBusinessOperationType
    changeOrderListRequestItemV2:
      required:
        - order
      type: object
      properties:
        order:
          $ref: '#/components/schemas/orderIdentifier'
        changeOrderRequest:
          $ref: '#/components/schemas/changeOrderRequest'
      description: Contains the order identifier and the change order request
    docUrl:
      type: string
      description: The documentation related to this operation.
      format: uri
      example: https://api-docs.imn.io/#operation/EnableChannelCatalog
      x-exclude: true
    cultureName:
      type: string
      description: If the error is translated, the culture name will be indicated
      example: en
      x-exclude: true
      x-lov: Go2CultureName
    userErrorMessageArguments:
      type: object
      additionalProperties:
        type: object
        properties: {}
      description: a dictionary string/object
      x-exclude: true
    beezUPMarketplaceAccountId:
      type: integer
      description: >-
        The marketplace account identifier in BeezUP. This account identifier is
        based on your api settings.
      format: int32
      example: 1234
    beezUPMarketplaceBusinessCode:
      type: string
      description: >-
        In an marketplace technical code like CDiscount you can have several
        marketplaces like GO SPORT, etc. We identify them by a business code.
      example: GOSPORT
      x-lov: MarketplaceBusinessCode
    beezUPMarketplaceTechnicalCode:
      type: string
      description: The technical code of the marketplace.
      example: Amazon
      x-lov: MarketplaceTechnicalCode
    storeId:
      type: string
      description: The store identifier
      format: guid
      x-exclude: true
    orderListDateSearchType:
      type: string
      description: Indicates on which date you want to make the filter
      default: Modification
      enum:
        - Modification
        - Purchase
        - MarketPlaceModification
    paginationResultLinks:
      required:
        - first
        - last
      type: object
      properties:
        first:
          $ref: '#/components/schemas/link3'
        last:
          $ref: '#/components/schemas/link3'
        previous:
          $ref: '#/components/schemas/link3'
        next:
          $ref: '#/components/schemas/link3'
      description: The navigation links 'first', 'last', 'next', 'previous'
      x-exclude: true
    userId:
      type: string
      description: The user identifier
      format: guid
      example: 8a7fbdec-9e71-472e-9974-27d5c1d57cf8
      x-exclude: true
    exchangedMessagesItem:
      required:
        - operationName
      type: object
      properties:
        operationName:
          type: string
        requestUri:
          type: string
          format: uri
        responseUri:
          type: string
          format: uri
        requestUtcDate:
          type: string
          format: date-time
        responseUtcDate:
          type: string
          format: date-time
    link3:
      required:
        - href
      type: object
      properties:
        label:
          type: string
          description: >-
            The label corresponding to the link. This label is automatically
            translated based on the Accept-Language http header.
          example: The translated label
        docUrl:
          $ref: '#/components/schemas/docUrl'
        description:
          type: string
          description: The description of the link
          example: This is a description link
        href:
          $ref: '#/components/schemas/href'
        operationId:
          $ref: '#/components/schemas/operationId'
        method:
          $ref: '#/components/schemas/httpMethod'
        parameters:
          $ref: '#/components/schemas/linkParameter3Types'
        urlTemplated:
          type: boolean
          description: indicates whether the href is templated or not
        allRequiredParamsProvided:
          type: boolean
          description: indicates whether all required params have been provided
        allOptionalParamsProvided:
          type: boolean
          description: indicates whether all optionals params have been provided
        info:
          $ref: '#/components/schemas/infoSummaries'
        rel:
          type: string
          description: Indicate the relation name related to the link
      x-exclude: true
    orderHarvestErrors:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/orderHarvestErrorValue'
      description: The key is the OrderMetaInfo.
    httpUrl:
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
      type: string
      description: >-
        The URL <a
        href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
      example: http://www.mydomain.com
      x-exclude: true
      x-pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
    currencyCode:
      pattern: ^[A-Z]{3}$
      type: string
      description: >
        The currency code <a href="https://en.wikipedia.org/wiki/ISO_4217">(ISO
        4217)</a>
      example: EUR
      x-exclude: true
      x-pattern: ^[A-Z]{3}$
    href:
      type: string
      description: Indicate the relative uri for this link
      example: /merchant/orders/v1/{marketplaceCode}/{IMNOrderId}
      x-exclude: true
    operationId:
      type: string
      description: The operationId to call.
      example: GetOrder
      x-exclude: true
    httpMethod:
      type: string
      description: Indicate the http method to use on this link
      example: GET
      default: GET
      enum:
        - GET
        - POST
        - PATCH
        - DELETE
        - PUT
        - HEAD
      x-exclude: true
    linkParameter3Types:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/linkParameter3'
    infoSummaries:
      type: object
      properties:
        successes:
          type: array
          items:
            $ref: '#/components/schemas/successSummary'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/errorSummary'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/warningSummary'
        informations:
          type: array
          items:
            $ref: '#/components/schemas/infoSummary'
      x-exclude: true
    orderHarvestErrorValue:
      required:
        - errorMessage
        - technicalCodePropertyName
      type: object
      properties:
        technicalCodePropertyName:
          type: string
        errorMessage:
          type: string
    linkParameter3:
      required:
        - in
      type: object
      properties:
        label:
          type: string
          description: >-
            The label corresponding to the link parameter. This label is
            automatically translated based on the Accept-Language http header.
          example: The translated label
        value:
          type: object
          properties: {}
          description: >-
            The value of the parameter. It can be an integer a string or an
            object.
        required:
          type: boolean
          example: true
          default: false
        in:
          $ref: '#/components/schemas/parameterIn'
        lovLink:
          $ref: '#/components/schemas/LOVLink3'
        lovRequired:
          type: boolean
          description: >-
            If true, you MUST indicate a value from the list of values otherwise
            it's a freetext
          example: true
        description:
          type: string
          description: description of the parameter
          example: the store identifier
        schema:
          type: string
          description: schema of the parameter
          example: orderListRequest
        pattern:
          $ref: '#/components/schemas/validationPattern'
        properties:
          type: object
          description: >-
            If the parameter is an object with flexible properties
            (additionProperties/dictionary), we will describe the properties of
            the object.
      x-exclude: true
    successSummary:
      type: object
      properties:
        successCode:
          type: string
        successMessage:
          type: string
        successArguments:
          type: object
          additionalProperties:
            type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        objectName:
          type: string
    errorSummary:
      type: object
      properties:
        utcDate:
          type: string
          format: date-time
        errorGuid:
          type: string
          format: uuid
        errorCode:
          type: string
        errorMessage:
          type: string
        technicalErrorMessage:
          type: string
        exceptionDetail:
          $ref: '#/components/schemas/exceptionDetail'
        errorArguments:
          type: object
          additionalProperties:
            type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        objectName:
          type: string
        source:
          type: string
    warningSummary:
      type: object
      properties:
        technicalErrorMessage:
          type: string
        warningMessage:
          type: string
        warningCode:
          type: string
        warningArguments:
          type: object
          additionalProperties:
            type: string
    infoSummary:
      type: object
      properties:
        informationCode:
          type: string
        informationMessage:
          type: string
        informationArguments:
          type: object
          additionalProperties:
            type: string
        propertyName:
          type: string
        propertyValue:
          type: string
        objectName:
          type: string
    parameterIn:
      type: string
      description: >
        * path: if the parameter must be pass in the path uri

        * header: if the parameter must be passed in http header

        * query: if the parameter must be passed in querystring

        * body: if the parameter must be passed in the body

        * file: if the parameter must be passed in a multipart/form-data
        (https://swagger.io/docs/specification/2-0/file-upload/)
      example: path
      enum:
        - path
        - header
        - query
        - body
        - file
      x-exclude: true
    LOVLink3:
      required:
        - href
      type: object
      properties:
        href:
          type: string
          description: Indicate the uri to the list of value
          format: uri
          example: /merchant/lov/v1/Go2CultureName
        method:
          $ref: '#/components/schemas/httpMethod'
      description: Describe the way you have to follow to get access to the LOV
      x-exclude: true
    validationPattern:
      type: string
      description: The regular expression to validate the value
      example: '*.-api$'
    linkParameterProperty3:
      required:
        - type
      type: object
      properties:
        label:
          type: string
          description: >-
            The label corresponding to the link parameter property. This label
            is automatically translated based on the Accept-Language http
            header.
          example: The translated label
        value:
          type: object
          properties: {}
          description: >-
            The value of the parameter. It can be an integer a string or an
            object.
        required:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/parameterType'
        lovLink:
          $ref: '#/components/schemas/LOVLink3'
        lovRequired:
          type: boolean
          description: >-
            If true, you MUST use indicate a value from the list of values
            otherwise it's a freetext
          example: true
        description:
          type: string
          description: description of the parameter
          example: the store identifier
        schema:
          type: string
          description: schema of the parameter
          example: orderListRequest
        pattern:
          $ref: '#/components/schemas/validationPattern'
      x-exclude: true
    exceptionDetail:
      type: object
      properties:
        helpLink:
          type: string
        message:
          type: string
        stackTrace:
          type: string
        type:
          type: string
    parameterType:
      type: string
      description: The value type of the parameter
      example: string
      default: string
      enum:
        - string
        - integer
        - number
        - boolean
        - object
        - array
        - date
        - date-time
        - file
      x-exclude: true
    subscriptionLinks:
      type: object
      properties:
        reporting:
          $ref: '#/components/schemas/link3'
        activate:
          $ref: '#/components/schemas/link3'
        deactivate:
          $ref: '#/components/schemas/link3'
        retry:
          $ref: '#/components/schemas/link3'
        delete:
          $ref: '#/components/schemas/link3'
    subscriptionIndex:
      allOf:
        - $ref: '#/components/schemas/subscription'
        - type: object
          properties:
            links:
              $ref: '#/components/schemas/subscriptionLinks'
    createSubscriptionRequest:
      required:
        - merchantApplicationName
        - merchantApplicationVersion
        - name
        - targetUrl
      type: object
      properties:
        targetUrl:
          $ref: '#/components/schemas/httpUrl'
        name:
          $ref: '#/components/schemas/subscriptionName'
        merchantApplicationName:
          $ref: '#/components/schemas/subscriptionMerchantApplicationName'
        merchantApplicationVersion:
          $ref: '#/components/schemas/subscriptionMerchantApplicationVersion'
        merchantEmailAlert:
          $ref: '#/components/schemas/email'
      x-format: Message
    subscriptionPushReporting:
      required:
        - duration
        - eventId
        - lastOrderModificationUtcDate
        - orderCount
        - subscriptionId
        - succeed
      type: object
      properties:
        subscriptionId:
          $ref: '#/components/schemas/subscriptionId'
        eventId:
          $ref: '#/components/schemas/messageId'
        succeed:
          type: boolean
          description: Indicates if the push operation has succeed
        lastOrderModificationUtcDate:
          type: string
          description: >-
            This modification date correspond to the last order pushed by your
            subscription consumer
          format: date-time
        retryCount:
          type: integer
          description: >-
            The retry count. When we the retry count will reach maximum retry
            count, the subscription will be deactivated.
        maxRetryCount:
          type: integer
          description: >-
            The maximum BeezUP will retry to push orders. When we the retry
            count will reach maximum retry count, the subscription will be
            deactivated.
        nextScheduledRetryUtcDate:
          type: string
          description: The next scheduled  date we retry to send orders
          format: date-time
        errorMessage:
          $ref: '#/components/schemas/errorResponseMessage'
        requestUri:
          $ref: '#/components/schemas/httpUrl'
        responseUri:
          $ref: '#/components/schemas/httpUrl'
        orderCount:
          type: integer
          description: The order count sent
          format: int32
        duration:
          type: string
          description: The duration of the push operation
          format: TimeSpan
        httpStatus:
          type: integer
          description: The HTTP status received from the consumer
          format: int32
      description: The subscription push reporting
    activateSubscriptionRequest:
      type: object
      properties:
        recoverBeginPeriodOrderLastModificationUtcDate:
          type: string
          description: >-
            If set, the date must be in the past the subscription will recover
            existing orders using the begin period order last modification date.
            If not set then you will receive new/updated orders in real-time.
          format: date-time
        recoverEndPeriodOrderLastModificationUtcDate:
          type: string
          description: >-
            If end period set, first the date must be in the past, the
            subscription will recover existing orders using the begin and the
            end period order last modification date. 

            If end period is not set and the begin period is set, then you will
            recover existing orders from the past using the begin period last
            modification date and after than you will continue to receive
            new/updated orders in real-time.

            If begin/end period are not set then you will receive new/updated
            orders in real-time.

            REMARK: The begin period is required if the end period is fulfilled.

            REMARK: If the end period is order last modification date is
            indicated then once we have push all orders to your target url the
            subscription will be desactivated.
          format: date-time
      x-format: Message
    subscription:
      required:
        - id
        - merchantApplicationName
        - merchantApplicationVersion
        - name
        - status
        - targetUrl
      type: object
      properties:
        id:
          $ref: '#/components/schemas/subscriptionId'
        status:
          $ref: '#/components/schemas/subscriptionStatus'
        targetUrl:
          $ref: '#/components/schemas/httpUrl'
        name:
          $ref: '#/components/schemas/subscriptionName'
        merchantApplicationName:
          $ref: '#/components/schemas/subscriptionMerchantApplicationName'
        merchantApplicationVersion:
          $ref: '#/components/schemas/subscriptionMerchantApplicationVersion'
        recoverBeginPeriodOrderLastModificationUtcDate:
          type: string
          description: >-
            Recover existing orders using the begin period order last
            modification date. If not set then you will receive new/updated
            orders in real-time.
          format: date-time
        recoverEndPeriodOrderLastModificationUtcDate:
          type: string
          description: >
            Recover existing orders using the begin and the end period order
            last modification date.

            Otherwise, you will receive new/updated orders in real-time.
          format: date-time
        lastOrderPushedModificationUtcDate:
          type: string
          description: >-
            This modification date correspond to the last order pushed by your
            subscription consumer
          format: date-time
        lastSuccessfulOrderPushedUtcDate:
          type: string
          description: >-
            The date of the last pushed order successfully received by your
            subscription consumer
          format: date-time
        consumerHealthStatus:
          $ref: '#/components/schemas/consumptionAvailabilityStatus'
        consumerUnvailableSinceUtcDate:
          type: string
          description: >-
            This date indicates since when the subscription consumer is
            unavailable
          format: date-time
        lastRetryUtcDate:
          type: string
          description: The last date we retry to send orders
          format: date-time
        retryCount:
          type: integer
          description: >-
            The retry count. When we the retry count will reach maximum retry
            count, the subscription will be deactivated.
        maxRetryCount:
          type: integer
          description: >-
            The maximum BeezUP will retry to push orders. When we the retry
            count will reach maximum retry count, the subscription will be
            deactivated.
        nextScheduledRetryUtcDate:
          type: string
          description: The next scheduled  date we retry to send orders
          format: date-time
        merchantEmailAlert:
          $ref: '#/components/schemas/email'
        lastErrorMessage:
          $ref: '#/components/schemas/errorResponseMessage'
        consumerLastRequestSentUri:
          $ref: '#/components/schemas/httpUrl'
      description: The subscription definition
    subscriptionName:
      type: string
      description: The subscription name you want to use
      example: MySubscriptionName
    subscriptionMerchantApplicationName:
      type: string
      description: The name of your application
      example: MyApp
    subscriptionMerchantApplicationVersion:
      type: string
      description: The version of your application
      example: '1.0'
      default: '1.0'
    email:
      pattern: ^(.+)@(.+)$
      type: string
      description: The email
      format: email
      example: paulsimon@mysupercompany.com
      x-exclude: true
      x-pattern: ^(.+)@(.+)$
    subscriptionId:
      type: string
      description: The identifier of the subscription to the orders for a merchant
      format: guid
    messageId:
      type: string
      description: The message identifier. It's a guid.
      format: MessageId
      example: b0d3faea-f881-439f-ba92-02b1168511ea
      x-exclude: true
    subscriptionStatus:
      type: string
      description: The status of your subscription
      example: active
      enum:
        - active
        - inactive
    consumptionAvailabilityStatus:
      type: string
      description: The subscription consumption status
      enum:
        - Available
        - Degraded
        - Unavailable
    getOrderInvoiceGeneralSettingsResponse:
      allOf:
        - $ref: '#/components/schemas/orderInvoiceGeneralSettings'
        - type: object
          properties:
            lastInvoiceSequenceNumber:
              $ref: '#/components/schemas/invoiceSequenceNumber'
    getOrderInvoiceDesignPreviewResponse:
      required:
        - invoiceHtmlContent
      type: object
      properties:
        invoiceHtmlContent:
          $ref: '#/components/schemas/invoiceContentHtml'
    generateOrderInvoiceRequest:
      type: object
      properties:
        invoiceSequenceNumber:
          $ref: '#/components/schemas/invoiceSequenceNumber'
    previewOrderInvoiceRequest:
      type: object
      properties:
        invoiceSequenceNumber:
          $ref: '#/components/schemas/invoiceSequenceNumber'
    previewOrderInvoiceResponse:
      required:
        - invoiceHtmlContent
      type: object
      properties:
        invoiceHtmlContent:
          $ref: '#/components/schemas/invoiceContentHtml'
    getOrderInvoicePdfFromHtmlInvoiceUrlRequest:
      required:
        - orderInvoiceUri
      type: object
      properties:
        orderInvoiceUri:
          $ref: '#/components/schemas/orderInvoiceUri'
    orderInvoiceGeneralSettings:
      required:
        - cultureName
        - invoicePrefix
        - invoiceStartingSequenceNumber
        - productVATPercent
        - shippingVATPercent
      type: object
      properties:
        cultureName:
          $ref: '#/components/schemas/cultureName'
        productVATPercent:
          $ref: '#/components/schemas/productVATPercent'
        shippingVATPercent:
          $ref: '#/components/schemas/shippingVATPercent'
        invoicePrefix:
          $ref: '#/components/schemas/invoicePrefix'
        invoiceStartingSequenceNumber:
          $ref: '#/components/schemas/invoiceSequenceNumber'
      description: Order Invoice General Settings
    orderInvoiceDesignSettings:
      type: object
      properties:
        headerContentHtml:
          $ref: '#/components/schemas/headerContentHtml'
        footerContentHtml:
          $ref: '#/components/schemas/footerContentHtml'
    productVATPercent:
      maximum: 100
      minimum: 0
      type: number
      description: Product VAT in percent
      example: 4
    shippingVATPercent:
      maximum: 100
      minimum: 0
      type: number
      description: Shipping cost VAT in percent
      example: 8
    invoicePrefix:
      pattern: ^[a-zA-Z0-9#_-]{1,50}$
      type: string
      description: >-
        Invoice Prefix. Can contain 1 to 50 characters, with alphanumeric
        characters in lowercase uppercase and #, _, -
      example: TOTO
      x-pattern: ^[a-zA-Z0-9#_-]{1,50}$
    invoiceSequenceNumber:
      minimum: 0
      type: integer
      description: Invoice Sequence Number
      example: 879
    headerContentHtml:
      maxLength: 1000
      type: string
      description: Header Content HTML
      x-minValueLength: '0'
    footerContentHtml:
      maxLength: 1000
      type: string
      description: Footer Content HTML
      x-minValueLength: '0'
    invoiceContentHtml:
      type: string
      description: Invoice Content HTML
    orderInvoiceUri:
      pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.?&\%-=])*\/?$
      type: string
      description: order invoice url
      example: http://www.mydomain.com
      x-exclude: true
      x-pattern: ^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.?&\%-=])*\/?$
    analyticsIndexLovLinks:
      type: object
      properties:
        performanceIndicatorTypeLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        performanceIndicatorTypeForReportsByChannelLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        performanceIndicatorTypeForReportsByCategoryLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        performanceIndicatorTypeForReportsByProductLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        performanceIndicatorFormulaParameterTypeLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        performanceIndicatorFormulaOperatorNameLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        performanceIndicatorFilterOperatorNameLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        analyticsProductColumnFilterOperatorNameLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        analyticsNumericalProductColumnFilterOperatorNameLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        analyticsStringProductColumnFilterOperatorNameLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
        storeOptimisationRuleExecutionStatusLov:
          $ref: '#/components/schemas/BeezUP_Common_LOVLink3'
    links.AnalyticsIndexLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/analytics
            method: GET
    links.GetTrackingStatusLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/analytics/tracking/status
            method: GET
    links.GetStoreTrackingStatusLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/status
            method: GET
    links.GetStoreTrackedClicksLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/clicks
            method: GET
    links.GetStoreTrackedOrdersLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/orders
            method: GET
    links.GetStoreTrackedExternalOrdersLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/tracking/externalorders
            method: GET
    links.GetStoreReportByDayLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/byday
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: reportByDayRequest
    links.GetStoreReportByChannelLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/bychannel
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: reportByChannelRequest
    links.GetStoreReportByCategoryLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/bycategory
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: reportByCategoryRequest
    links.GetStoreReportByProductLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/byproduct
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: reportByProductRequest
    links.OptimiseAllLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/all/enable
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: optimiseAllRequest
                value:
                  channelId: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
                  beginPeriodUtcDate: 2006-11-20T00:00:00.000Z
                  endPeriodUtcDate: 2006-12-20T00:00:00.000Z
                  categoryFilter:
                    categoryPath:
                      - Home
                      - Bedroom
                  performanceIndicatorFilters:
                    - performanceIndicator: Cost
                      operatorName: Equals
                      value: '10'
                  advancedFilters:
                    marginType: Global
                    globalmarginPercent: '10'
                    linkClickToOrderType: OnClickDate
                    linkClickToOrderMaxDay: '5'
                    onlyPaymentValidatedOrders: 'true'
                    onlyDirectSales: 'true'
                    performanceIndicatorFormula:
                      firstParameter: Cost
                      operatorName: Multiply
                      secondParamter: ROI
                      thirdParameter: '100'
                  productState: All
                  analyticsProductColumnFilters:
                    sku: M1234
                    title: Refrigérateur
                    additionalAnalyticsProductColumnFilters:
                      - columnId: 672644c7-5bd0-4e25-88c1-1f732bda5e4c
                        operatorName: NumericalGreaterThan
                        values:
                          - '100'
    links.OptimiseLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/enable
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: optimiseRequest
                value:
                  channelId: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
                  beginPeriodUtcDate: 2006-11-20T00:00:00.000Z
                  endPeriodUtcDate: 2006-12-20T00:00:00.000Z
                  categoryFilter:
                    categoryPath:
                      - Home
                      - Bedroom
                  performanceIndicatorFilters:
                    - performanceIndicator: Cost
                      operatorName: Equals
                      value: '10'
                  advancedFilters:
                    marginType: Global
                    globalmarginPercent: '10'
                    linkClickToOrderType: OnClickDate
                    linkClickToOrderMaxDay: '5'
                    onlyPaymentValidatedOrders: 'true'
                    onlyDirectSales: 'true'
                    performanceIndicatorFormula:
                      firstParameter: Cost
                      operatorName: Multiply
                      secondParamter: ROI
                      thirdParameter: '100'
                  pageSize: '100'
                  pageNumber: '1'
                  productState: All
                  analyticsProductColumnFilters:
                    sku: M1234
                    title: Refrigérateur
                    additionalAnalyticsProductColumnFilters:
                      - columnId: 672644c7-5bd0-4e25-88c1-1f732bda5e4c
                        operatorName: NumericalGreaterThan
                        values:
                          - '100'
    links.OptimiseByChannelLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byChannel/a2d38563-50f0-43f1-be2b-b16e7ec4f007/enable
            method: POST
    links.OptimiseByCategoryLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byCategory/4c376178-25b4-4656-a86e-e3bd3a25b139/enable
            method: POST
            parameters:
              request:
                in: body
                type: ​array
                value:
                  - a2d38563-50f0-43f1-be2b-b16e7ec4f007
    links.OptimiseByProductLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/optimisations/byProduct/6d469a54-8426-4855-abc2-9e062e2056b9/enable
            method: POST
            parameters:
              request:
                in: body
                type: ​array
                value:
                  - a2d38563-50f0-43f1-be2b-b16e7ec4f007
    links.GetReportFiltersLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters
            method: GET
    links.GetReportFilterLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/reports/filters/fb19c53c-2f63-4262-9d94-2d7faa500acd
            method: GET
    links.SaveReportFilterLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters/{reportFilterId}
            method: PUT
            templated: 'true'
            parameters:
              - name: reportFilterId
                type: string
                in: path
    links.DeleteReportFilterLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/8f95eb1a-3691-4750-950d-a13c4a8a9bcc/reports/filters/fb19c53c-2f63-4262-9d94-2d7faa500acd
            method: DELETE
    links.GetRulesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules
            method: GET
    links.CreateRuleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules
            method: POST
            parameters:
              request:
                in: body
                type: object
                schema: createRuleRequest
                value:
                  optimisationActionName: reenable
                  ruleName: My rule
                  reportFilterId: fb19c53c-2f63-4262-9d94-2d7faa500acd
                  startUtcDate: 2016-08-29T09:12:33.001Z
                  endUtcDate: 2017-09-30T10:42:40.001Z
    links.GetRulesExecutionsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/executions
            method: GET
    links.RunRulesLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/run
            method: POST
    links.GetRuleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8
            method: GET
    links.UpdateRuleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8
            method: PATCH
            parameters:
              request:
                in: body
                type: object
                schema: updateRuleRequest
                value:
                  ruleName: My Rule Renamed
                  startUtcDate: 2016-08-29T09:12:33.001Z
                  endUtcDate": 2016-08-29T09:12:33.001Z
    links.DeleteRuleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8
            method: DELETE
    links.MoveUpRuleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/moveup
            method: POST
    links.MoveDownRuleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/movedown
            method: POST
    links.EnableRuleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/enable
            method: POST
    links.DisableRuleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/disable
            method: POST
    links.RunRuleLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/analytics/10af9486-e28e-47ab-b045-e13e4acd55c3/rules/c38006b4-29d0-4b8a-978b-701a0b12d5a8/run
            method: POST
    analyticsIndexLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.AnalyticsIndexLink'
        trackingStatus:
          $ref: '#/components/schemas/links.GetTrackingStatusLink'
    analyticsStoreIndexLinks:
      required:
        - reportFilters
        - self
        - trackedClicks
        - trackedOrders
        - trackingStatus
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.AnalyticsIndexLink'
        trackingStatus:
          $ref: '#/components/schemas/links.GetStoreTrackingStatusLink'
        trackedClicks:
          $ref: '#/components/schemas/links.GetStoreTrackedClicksLink'
        trackedOrders:
          $ref: '#/components/schemas/links.GetStoreTrackedOrdersLink'
        trackedExternalOrders:
          $ref: '#/components/schemas/links.GetStoreTrackedExternalOrdersLink'
        reportByDay:
          $ref: '#/components/schemas/links.GetStoreReportByDayLink'
        reportByChannel:
          $ref: '#/components/schemas/links.GetStoreReportByChannelLink'
        reportByCategory:
          $ref: '#/components/schemas/links.GetStoreReportByCategoryLink'
        reportByProduct:
          $ref: '#/components/schemas/links.GetStoreReportByProductLink'
        optimiseAll:
          $ref: '#/components/schemas/links.OptimiseAllLink'
        optimise:
          $ref: '#/components/schemas/links.OptimiseLink'
        optimiseByChannel:
          $ref: '#/components/schemas/links.OptimiseByChannelLink'
        optimiseByCategory:
          $ref: '#/components/schemas/links.OptimiseByCategoryLink'
        optimiseByProduct:
          $ref: '#/components/schemas/links.OptimiseByProductLink'
        reportFilters:
          $ref: '#/components/schemas/links.GetReportFiltersLink'
        rules:
          $ref: '#/components/schemas/links.GetRulesLink'
    reportByCommonResponseLinks:
      type: object
      properties:
        enableAllProducts:
          $ref: '#/components/schemas/links.OptimiseAllLink'
        disableAllProducts:
          $ref: '#/components/schemas/links.OptimiseAllLink'
        enableProducts:
          $ref: '#/components/schemas/links.OptimiseLink'
        disableProducts:
          $ref: '#/components/schemas/links.OptimiseLink'
    reportByChannelLinks:
      type: object
      properties:
        enableProducts:
          $ref: '#/components/schemas/links.OptimiseByChannelLink'
        disableProducts:
          $ref: '#/components/schemas/links.OptimiseByChannelLink'
    reportByCategoryLinks:
      type: object
      properties:
        enableProducts:
          $ref: '#/components/schemas/links.OptimiseByCategoryLink'
        disableProducts:
          $ref: '#/components/schemas/links.OptimiseByCategoryLink'
    reportByProductLinks:
      type: object
      properties:
        oneChannelLinks:
          $ref: '#/components/schemas/reportByProductOneChannelLinks'
        allChannelsLinks:
          $ref: '#/components/schemas/reportByProductAllChannelsLinks'
      description: Depending if the report concerned multiple channels or one channel.
    reportByProductOneChannelLinks:
      required:
        - disableProductForOneChannel
        - enableProductForOneChannel
        - productInfo
      type: object
      properties:
        productInfo:
          $ref: '#/components/schemas/links.GetChannelCatalogProductInfoLink'
        enableProductForOneChannel:
          $ref: '#/components/schemas/links.OptimiseByProductLink'
        disableProductForOneChannel:
          $ref: '#/components/schemas/links.OptimiseByProductLink'
      description: >-
        If the report concerned one product for one channel the channel catalog
        product info will give you all you need to enable or disable the
        product.
    reportByProductAllChannelsLinks:
      required:
        - disableProductForAllChannels
        - enableProductForAllChannels
      type: object
      properties:
        enableProductForAllChannels:
          $ref: '#/components/schemas/links.OptimiseByProductLink'
        disableProductForAllChannels:
          $ref: '#/components/schemas/links.OptimiseByProductLink'
    reportByChannelResponseLinks:
      allOf:
        - $ref: '#/components/schemas/reportByCommonResponseLinks'
    reportByCategoryResponseLinks:
      allOf:
        - $ref: '#/components/schemas/reportByCommonResponseLinks'
    reportByProductResponseLinks:
      allOf:
        - $ref: '#/components/schemas/reportByCommonResponseLinks'
    reportFiltersLinks:
      required:
        - save
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetReportFiltersLink'
        save:
          $ref: '#/components/schemas/links.SaveReportFilterLink'
    reportFilterHeaderLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetReportFilterLink'
    reportFilterLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetReportFilterLink'
        save:
          $ref: '#/components/schemas/links.SaveReportFilterLink'
        delete:
          $ref: '#/components/schemas/links.DeleteReportFilterLink'
      description: Indicates the actions you can do on this report filter
    ruleListLinks:
      required:
        - create
        - history
        - run
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetRulesLink'
        create:
          $ref: '#/components/schemas/links.CreateRuleLink'
        history:
          $ref: '#/components/schemas/links.GetRulesExecutionsLink'
        run:
          $ref: '#/components/schemas/links.RunRulesLink'
      description: Links to know if the user can create a rule or run all rules
    ruleLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetRuleLink'
        update:
          $ref: '#/components/schemas/links.UpdateRuleLink'
        delete:
          $ref: '#/components/schemas/links.DeleteRuleLink'
        moveup:
          $ref: '#/components/schemas/links.MoveUpRuleLink'
        movedown:
          $ref: '#/components/schemas/links.MoveDownRuleLink'
        enable:
          $ref: '#/components/schemas/links.EnableRuleLink'
        disable:
          $ref: '#/components/schemas/links.DisableRuleLink'
        run:
          $ref: '#/components/schemas/links.RunRuleLink'
        reportFilter:
          $ref: '#/components/schemas/links.GetReportFilterLink'
      description: Links to retrieve/action on other entities
    ruleExecutionReportingLinks:
      type: object
      properties:
        rule:
          $ref: '#/components/schemas/links.GetRuleLink'
      description: Links to retrieve/action on this rule execution
    analyticsIndex:
      required:
        - links
        - stores
      type: object
      properties:
        stores:
          type: array
          items:
            $ref: '#/components/schemas/analyticsStoreIndex'
        links:
          $ref: '#/components/schemas/analyticsIndexLinks'
        lovLinks:
          $ref: '#/components/schemas/analyticsIndexLovLinks'
      description: The Analytics API operation index.
    analyticsStoreIndex:
      required:
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/analyticsStoreIndexLinks'
    trackingStatus:
      required:
        - clickSynchronizationUtcDate
        - marketplaceOrderSynchonizationUtcDate
        - orderSynchonizationUtcDate
      type: object
      properties:
        clickSynchronizationUtcDate:
          type: string
          description: The utc date of the latest synchronized click
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        orderSynchonizationUtcDate:
          type: string
          description: The utc date of the latest synchronized order
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        marketplaceOrderSynchonizationUtcDate:
          type: string
          description: The utc date of the latest synchronized marketplace order
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    storeTrackingStatus:
      type: object
      properties:
        clickSynchronizationUtcDate:
          type: string
          description: The utc date of the latest synchronized click
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        orderSynchonizationUtcDate:
          type: string
          description: The utc date of the latest synchronized order
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        marketplaceOrderSynchonizationUtcDate:
          type: string
          description: The utc date of the latest synchronized marketplace order
          format: date-time
          example: 2016-08-29T09:12:33.001Z
    trackedClicks:
      required:
        - clicks
      type: object
      properties:
        clicks:
          type: array
          items:
            $ref: '#/components/schemas/trackedClick'
    trackedClick:
      required:
        - channel
        - ipAddress
        - product
        - utcDate
      type: object
      properties:
        utcDate:
          type: string
          description: The utc date of the click
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        product:
          $ref: '#/components/schemas/BeezUP_Common_ProductBasicInfo'
        ipAddress:
          type: string
          description: The user IP address for the click
          example: 127.0.0.1
        channel:
          $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'
    trackedOrders:
      required:
        - orders
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/trackedOrder'
    trackedOrder:
      required:
        - channel
        - currencyCode
        - merchantOrderId
        - paymentValidated
        - products
        - totalAmount
        - utcDate
      type: object
      properties:
        utcDate:
          type: string
          description: The utc date of the order
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        channel:
          $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'
        merchantOrderId:
          type: string
          description: The merchant order identifier
          example: My_Merchant_Order_Id
        totalAmount:
          type: number
          description: The total amount of the order
          example: 101.42
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        paymentValidated:
          type: boolean
          description: Indicate if the payment of this order has been validated or not
          example: false
        products:
          type: array
          description: The product list of this order
          example:
            - productId: 00000000-0000-0000-0000-000000000000
              productSku: SKU123345
              productTitle: My super product title
              productImageUrl: >-
                http://i2.cdscdn.com/pdt2/3/9/0/1/550x550/hai6901018043390/rw/haier-b20fwrss-refrigerateur-americain.jpg
              productActive: 'true'
              unitPrice: '101'
              quantity: '1'
              margin: '9'
          items:
            $ref: '#/components/schemas/trackedOrderProduct'
    trackedOrderProduct:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_ProductBasicInfo'
        - required:
            - margin
            - quantity
            - unitPrice
          type: object
          properties:
            unitPrice:
              type: number
              description: The product's unit price for the order
              example: 101.42
            quantity:
              type: number
              description: The quantity of this product for the order
              example: 1
            margin:
              type: number
              description: The product's margin for the order
              example: 9.66
    trackedExternalOrders:
      required:
        - externalOrders
      type: object
      properties:
        externalOrders:
          type: array
          items:
            $ref: '#/components/schemas/trackedExternalOrder'
    trackedExternalOrder:
      required:
        - currencyCode
        - merchantOrderId
        - paymentValidated
        - totalAmount
        - utcDate
      type: object
      properties:
        utcDate:
          type: string
          description: The utc date of the external order
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        merchantOrderId:
          type: string
          description: The merchant order identifier
          example: My_Order_Merchant_Id
        visitorId:
          type: string
          description: Can be null. The visitor identifier of the external order
          example: A_VISITOR_ID
        totalAmount:
          type: number
          description: The total amount of the external order
          example: 101.42
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        paymentValidated:
          type: boolean
          description: >-
            Indicate if the payment of this external order has been validated or
            not
          example: false
        products:
          type: array
          description: Can be null. The product list included in the external order
          example:
            - productSku: something
              productTitle: Something great
              productImageUrl: >-
                http://cdn3.sarenza.net/static/_img/productsV4/0000010744/MD_0000010744_29411_09.jpg?201308142051
              productActive: 'true'
              merchantOrderId: My_Merchant_Order_Id
              unitPrice: '101'
              quantity: '1'
              margin: '9'
          items:
            $ref: '#/components/schemas/trackedExternalOrderProduct'
    trackedExternalOrderProduct:
      required:
        - productSku
      type: object
      properties:
        productSku:
          type: string
          description: The product sku received for the external order
          example: something
        productTitle:
          type: string
          description: >-
            We tried to get the catalog product title based on the product SKU.
            This property can be null, if we cannot found the product. This is
            possible if the product is not referenced in the imported catalog.
          example: Something great
        productImageUrl:
          type: string
          description: >-
            We tried to get the catalog product image Url based on the product
            SKU. This property can be null, if we cannot found the product. This
            is possible if the product is not referenced in the imported
            catalog.
          format: uri
          example: >-
            http://cdn3.sarenza.net/static/_img/productsV4/0000010744/MD_0000010744_29411_09.jpg?201308142051
        productActive:
          type: boolean
          description: >-
            We tried to get the catalog product if it's still active based on
            the product SKU. This property can be null, if we cannot found the
            product. This is possible if the product is not referenced in the
            imported catalog.
          example: true
        productId:
          type: string
          description: >-
            We tried to get the catalog product identifier based on the product
            SKU. This property can be null, if we cannot found the product. This
            is possible if the product is not referenced in the imported
            catalog.
          format: guid
          example: 6d469a54-8426-4855-abc2-9e062e2056b9
        unitPrice:
          type: string
          description: >-
            The product's unit price for the external order. This property is
            voluntarily a string because the value could be an invalid one.
          example: '101.42'
        quantity:
          type: string
          description: >-
            The quantity of this product for the external order. This property
            is voluntarily a string because the value could be an invalid one
          example: '1.00'
        margin:
          type: string
          description: >-
            The product's margin for the external order. This property is
            voluntarily a string because the value could be an invalid one
          example: '9.66'
    reportAdvancedFilters:
      required:
        - linkClickToOrderType
        - marginType
        - onlyDirectSales
        - onlyPaymentValidatedOrders
        - performanceIndicatorFormula
      type: object
      properties:
        marginType:
          $ref: '#/components/schemas/marginType'
        globalMarginPercent:
          maximum: 100
          minimum: 0
          type: integer
          description: >-
            If the margin type is 'Global', indicate the percentage of sale
            price.
          example: 10
        linkClickToOrderType:
          $ref: '#/components/schemas/linkClickToOrderType'
        linkClickToOrderMaxDay:
          maximum: 180
          minimum: 0
          type: integer
          description: >-
            If the linkOrderType is OnClickDate, indicate the max day to search
            the click from the order
          example: 5
        onlyPaymentValidatedOrders:
          type: boolean
          description: >-
            If true, you will get the only the orders with payment validated.
            Otherwise, you will get all orders validated or not.
          example: true
          default: false
        onlyDirectSales:
          type: boolean
          description: >-
            If true, you will get only direct sales. Otherwise the indirect
            sales will be included.
          example: true
          default: false
        performanceIndicatorFormula:
          $ref: '#/components/schemas/performanceIndicatorFormula'
    marginType:
      type: string
      example: Global
      default: Tracker
      enum:
        - Tracker
        - Global
    linkClickToOrderType:
      type: string
      example: OnClickDate
      default: OnPurchaseDate
      enum:
        - OnPurchaseDate
        - OnClickDate
    performanceIndicatorFormula:
      type: object
      properties:
        firstParameter:
          $ref: '#/components/schemas/performanceIndicatorFormulaParameterType'
        operatorName:
          $ref: '#/components/schemas/performanceIndicatorFormulaOperatorName'
        secondParameter:
          $ref: '#/components/schemas/performanceIndicatorFormulaParameterType'
        thirdParameter:
          type: integer
          description: Indicate the value of the third parameter of your formula
          example: 100
      description: The KPI formula
      example:
        firstParameter: Cost
        operatorName: Multiply
        secondParamter: ROI
        thirdParameter: '100'
    performanceIndicatorFormulaParameterType:
      type: string
      description: Indicate on which indicator or value you want to make your formula
      example: Cost
      enum:
        - Cost
        - TotalSales
        - Margin
        - TotalSalesMinusCost
        - MarginMinusCost
        - OrderCount
        - ClickCount
        - SoldProductCount
        - One
    performanceIndicatorFormulaOperatorName:
      type: string
      example: Multiply
      enum:
        - Multiply
        - Divide
    reportByDayRequest:
      required:
        - beginPeriodUtcDate
        - endPeriodUtcDate
      type: object
      properties:
        channelIds:
          type: array
          description: Indicate the channel identifier list
          example:
            - 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
          items:
            $ref: '#/components/schemas/BeezUP_Common_ChannelId'
        productId:
          $ref: '#/components/schemas/BeezUP_Common_ProductId'
        catalogCategoryId:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryId'
        beginPeriodUtcDate:
          type: string
          description: The begin date of the period for the report
          format: date
        endPeriodUtcDate:
          type: string
          description: The end date of the period for the report
          format: date
        advancedFilters:
          $ref: '#/components/schemas/reportAdvancedFilters'
    reportByDayPerStoreResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/reportByDayResponse'
      description: The key is the StoreId.
    reportByDayResponse:
      required:
        - currencyCode
        - days
        - globalPerformanceIndicators
      type: object
      properties:
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        globalPerformanceIndicators:
          $ref: '#/components/schemas/reportByDayGlobal'
        days:
          type: array
          items:
            $ref: '#/components/schemas/reportByDay'
    reportByDayGlobal:
      required:
        - allChannels
        - byChannels
      type: object
      properties:
        allChannels:
          $ref: '#/components/schemas/reportByDayGlobalAllChannels'
        byChannels:
          type: array
          items:
            $ref: '#/components/schemas/reportByDayGlobalByChannel'
    reportByDayGlobalAllChannels:
      required:
        - performanceIndicator
      type: object
      properties:
        performanceIndicator:
          type: number
          description: Indicates the global performance indicator
          example: 10.42
    reportByDayGlobalByChannel:
      allOf:
        - $ref: '#/components/schemas/reportByDayGlobalAllChannels'
        - required:
            - channel
          type: object
          properties:
            channel:
              $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'
    reportByDay:
      required:
        - allChannels
        - byChannels
        - day
      type: object
      properties:
        day:
          type: string
          format: date
        allChannels:
          $ref: '#/components/schemas/reportByDayAllChannels'
        byChannels:
          type: array
          items:
            $ref: '#/components/schemas/reportByDayByChannel'
    reportByDayAllChannels:
      required:
        - clickCount
        - cost
        - margin
        - orderCount
        - performanceIndicator
        - roi
        - soldProductCount
        - totalSales
      type: object
      properties:
        clickCount:
          type: integer
          description: The click count
          example: 101
        cost:
          type: number
          description: The cost
          example: 10.42
        orderCount:
          type: integer
          description: The order count
          example: 42
        roi:
          type: number
          description: The Return On Investment
          example: 23.11
        margin:
          type: number
          description: The margin
          example: 42.42
        performanceIndicator:
          type: number
          description: >-
            The performance indicator based on the performance indicator formula
            indicated in the request
          example: 23.09
        totalSales:
          type: number
          description: The total sales
          example: 234.42
        soldProductCount:
          type: integer
          description: The product sold count count
          example: 2
    reportByDayByChannel:
      allOf:
        - $ref: '#/components/schemas/reportByDayAllChannels'
        - required:
            - channel
          type: object
          properties:
            channel:
              $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'
    reportFilterCommonParameters:
      required:
        - advancedFilters
        - periodType
      type: object
      properties:
        channelId:
          $ref: '#/components/schemas/BeezUP_Common_ChannelId'
        periodType:
          $ref: '#/components/schemas/reportFilterPeriodType'
        beginPeriodUtcDate:
          type: string
          description: >-
            The begin date period you want to get the report. It's required only
            in case of custom period type !
          format: date-time
          example: 2006-11-20T00:00:00.000Z
        endPeriodUtcDate:
          type: string
          description: >-
            The end date period you want to get the report. It's required only
            in case of custom period type !
          format: date-time
          example: 2006-12-20T00:00:00.000Z
        categoryFilter:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryFilter'
        performanceIndicatorFilters:
          type: array
          example:
            - indicator: Cost
              operatorName: Equals
              value: '10'
          items:
            $ref: '#/components/schemas/performanceIndicatorFilter'
        advancedFilters:
          $ref: '#/components/schemas/reportAdvancedFilters'
      description: Contains common filter parameters
    reportFilterPeriodType:
      type: string
      description: Indicates the period type we want use for the report filter
      enum:
        - Custom
        - Yesterday
        - Last7Days
        - LastWeek
        - ThisMonth
        - Last30Days
        - LastMonth
        - Last60Days
        - Last90Days
        - Last3Months
    performanceIndicatorFilter:
      required:
        - operatorName
        - performanceIndicator
        - value
      type: object
      properties:
        performanceIndicator:
          $ref: '#/components/schemas/performanceIndicatorType'
        operatorName:
          $ref: '#/components/schemas/performanceIndicatorFilterOperatorName'
        value:
          type: number
          description: Indicates the filter value to apply on this indicator
          example: 10.42
    performanceIndicatorType:
      type: string
      description: Indicate on which indicator or value you want to make your formula
      example: Cost
      enum:
        - ClickCount
        - Cost
        - OrderCount
        - ProductCount
        - SoldProductCount
        - DisabledProductCount
        - EnabledProductCount
        - TotalSales
        - Margin
        - ROI
        - PerformanceIndicator
    performanceIndicatorFilterOperatorName:
      type: string
      description: Indicates the operator you want to apply on this indicator
      example: Equals
      x-lov: PerformanceIndicatorFilterOperatorName
    orderedReportFilterCommonParameters:
      description: Contains common filter parameters with Order By functionnality
      allOf:
        - $ref: '#/components/schemas/reportFilterCommonParameters'
        - type: object
          properties:
            orderBy:
              $ref: '#/components/schemas/performanceIndicatorType'
            orderByDirection:
              $ref: '#/components/schemas/orderByDirection'
    orderByDirection:
      type: string
      description: Indicate which direction to order results by
      example: Ascending
      enum:
        - Ascending
        - Descending
    paginationRequestParameters:
      type: object
      properties:
        pageSize:
          $ref: '#/components/schemas/BeezUP_Common_PageSize'
        pageNumber:
          $ref: '#/components/schemas/BeezUP_Common_PageNumber'
    reportByChannelRequest:
      allOf:
        - $ref: '#/components/schemas/orderedReportFilterCommonParameters'
        - $ref: '#/components/schemas/paginationRequestParameters'
    reportByChannelResponse:
      required:
        - channels
        - currencyCode
        - links
        - paginationResult
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/reportByChannel'
        links:
          $ref: '#/components/schemas/reportByChannelResponseLinks'
    reportByChannel:
      required:
        - catalogProductCount
        - channel
        - clickCount
        - cost
        - enabledProductCount
        - links
        - orderCount
        - performanceIndicator
        - soldProductCount
        - totalSales
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'
        catalogProductCount:
          type: integer
          description: The catalog product count
          example: 101
        enabledProductCount:
          type: integer
          description: The enabled product count
          example: 101
        clickCount:
          type: integer
          description: The click count
          example: 1024
        cost:
          type: number
          description: The cost for
          example: 1234.12
        orderCount:
          type: integer
          description: The order count
          example: 42
        roi:
          type: number
          description: The Return On Investment
          example: 42.42
        margin:
          type: number
          description: The margin
          example: 23.1
        performanceIndicator:
          type: number
          description: >-
            The performance indicator based on the performance indicator formula
            indicated in the request
          example: 12.21
        totalSales:
          type: number
          description: The total sales
          example: 234.42
        soldProductCount:
          type: integer
          description: The product sold count count
          example: 2
        links:
          $ref: '#/components/schemas/reportByChannelLinks'
    reportByCategoryRequest:
      allOf:
        - $ref: '#/components/schemas/orderedReportFilterCommonParameters'
        - $ref: '#/components/schemas/paginationRequestParameters'
    reportByCategoryResponse:
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/reportByCategory'
        links:
          $ref: '#/components/schemas/reportByCategoryResponseLinks'
    reportByCategory:
      required:
        - allProductCount
        - catalogCategoryId
        - catalogProductCount
        - clickCount
        - cost
        - enabledProductCount
        - links
        - orderCount
        - performanceIndicator
        - soldProductCount
        - totalSales
      type: object
      properties:
        catalogCategoryId:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryId'
        catalogCategoryPath:
          $ref: '#/components/schemas/BeezUP_Common_CatalogCategoryPath'
        allProductCount:
          type: integer
          description: >-
            The product count for this category. This includes all the products
            that have been imported and can still have associated clicks and
            orders.
          example: 101
        catalogProductCount:
          type: integer
          description: >-
            The catalog product count for this category. This includes all
            products that are still present in your imported catalog.
          example: 101
        enabledProductCount:
          type: integer
          description: >-
            The enabled product count for this category. This includes all
            products that are still present in your imported catalog and have
            not been disabled via the optimisation feature.
          example: 101
        clickCount:
          type: integer
          description: The click count for this category
          example: 1001
        cost:
          type: number
          description: The cost for this category
          example: 12.42
        orderCount:
          type: integer
          description: The order count for this category
          example: 25
        roi:
          type: number
          description: The Return On Investment for this category
          example: 25.33
        margin:
          type: number
          description: The margin for this category
          example: 3.33
        performanceIndicator:
          type: number
          description: >-
            The performance indicator based on the performance indicator formula
            indicated in the request for this category
          example: 25.33
        totalSales:
          type: number
          description: The total sales for this category
          example: 234.42
        soldProductCount:
          type: integer
          description: The product sold count count for this category
          example: 2
        links:
          $ref: '#/components/schemas/reportByCategoryLinks'
    reportByProductRequest:
      allOf:
        - $ref: '#/components/schemas/orderedReportFilterCommonParameters'
        - $ref: '#/components/schemas/paginationRequestParameters'
        - required:
            - productState
          type: object
          properties:
            productColumnsToDisplay:
              $ref: '#/components/schemas/productColumnsToDisplay'
            productState:
              $ref: '#/components/schemas/productStateFilter'
            analyticsProductColumnFilters:
              $ref: '#/components/schemas/analyticsProductColumnFilters'
    analyticsProductColumnFilters:
      type: object
      properties:
        sku:
          type: string
          description: The product sku filter
          example: M1234
        title:
          type: string
          description: The product title filter
          example: Refrigérateur
        additionalAnalyticsProductColumnFilters:
          $ref: '#/components/schemas/additionalAnalyticsProductColumnFilters'
    additionalAnalyticsProductColumnFilters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/analyticsProductColumnFilter'
      description: |
        Describes a filter on a product's column.
        The key is the column identifier of your catalog or a custom column.
    analyticsProductColumnFilter:
      required:
        - operatorName
      type: object
      properties:
        operatorName:
          $ref: '#/components/schemas/analyticsProductColumnFilterOperatorName'
        values:
          type: array
          description: >
            Must be null if the operator is "IsNull" or "IsNotNull".

            Can contains multiple value in case of "InList" operator. Otherwise
            a single value is expected.
          example:
            - My value
          items:
            type: string
      example:
        672644c7-5bd0-4e25-88c1-1f732bda5e4c:
          operatorName: NumericalGreaterThan
          values:
            - '100'
    analyticsProductColumnFilterOperatorName:
      type: string
      description: Indicate the operator you want to apply on the columnId
      x-lov: AnalyticsProductColumnFilterOperatorName
    productColumnsToDisplay:
      maxItems: 1
      minItems: 0
      type: array
      example:
        - 4b460e31-3d1f-4117-922d-b159a64ec1d2
      items:
        $ref: '#/components/schemas/BeezUP_Common_CatalogColumnId'
    productStateFilter:
      type: string
      description: You can filter on the product state.
      example: All
      default: All
      enum:
        - All
        - Enabled
        - Disabled
    reportByProductResponse:
      required:
        - currencyCode
        - links
        - paginationResult
        - products
      type: object
      properties:
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
        currencyCode:
          $ref: '#/components/schemas/BeezUP_Common_CurrencyCode'
        products:
          type: array
          items:
            $ref: '#/components/schemas/reportByProduct'
        links:
          $ref: '#/components/schemas/reportByProductResponseLinks'
    reportByProduct:
      required:
        - channelCount
        - clickCount
        - cost
        - enabledOnChannelCount
        - links
        - orderCount
        - performanceIndicator
        - product
        - soldProductCount
        - totalSales
      type: object
      properties:
        product:
          $ref: '#/components/schemas/BeezUP_Common_ProductBasicInfo'
        enabledOnChannelCount:
          type: integer
          description: The count of channel where this product is enabled
          example: 1
        channelCount:
          type: integer
          description: The channel count where this product can be enabled
          example: 2
        clickCount:
          type: integer
          description: The click count for this product
          example: 1234
        cost:
          type: number
          description: The cost for this product
          example: 101.42
        orderCount:
          type: integer
          description: The order count for this product
          example: 234
        roi:
          type: number
          description: The Return On Investment for this product
          example: 42.01
        margin:
          type: number
          description: The margin for this product
          example: 50
        performanceIndicator:
          type: number
          description: >-
            The performance indicator based on the performance indicator formula
            indicated in the request for this product
          example: 10.12
        totalSales:
          type: number
          description: The total sales for this product
          example: 234.42
        soldProductCount:
          type: integer
          description: The product sold count count for this product
          example: 2
        links:
          $ref: '#/components/schemas/reportByProductLinks'
    optimiseAllRequest:
      allOf:
        - $ref: '#/components/schemas/orderedReportFilterCommonParameters'
        - required:
            - reportType
          type: object
          properties:
            reportType:
              $ref: '#/components/schemas/reportType'
            productColumnsToDisplay:
              $ref: '#/components/schemas/productColumnsToDisplay'
            productState:
              $ref: '#/components/schemas/productStateFilter'
            analyticsProductColumnFilters:
              $ref: '#/components/schemas/analyticsProductColumnFilters'
    optimiseRequest:
      allOf:
        - $ref: '#/components/schemas/optimiseAllRequest'
        - $ref: '#/components/schemas/paginationRequestParameters'
    copyOptimisationRequest:
      required:
        - channelIdSource
        - channelIdTarget
        - keepExistingOptimisation
      type: object
      properties:
        channelIdSource:
          $ref: '#/components/schemas/BeezUP_Common_ChannelId'
        channelIdTarget:
          $ref: '#/components/schemas/BeezUP_Common_ChannelId'
        keepExistingOptimisation:
          type: boolean
          description: If true the existing optimisation will be kept
          example: false
      description: Copy the optimisation between 2 channels
    copyOptimisationResponse:
      required:
        - catalogProductCount
        - channel
        - enabledProductCount
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/BeezUP_Common_ChannelBasicInfo'
        catalogProductCount:
          type: integer
          description: The catalog product count
          example: 101
        enabledProductCount:
          type: integer
          description: The enabled product count
          example: 101
      description: Products optimisatisation copied
    reportType:
      type: string
      description: The report type
      example: ByProduct
      enum:
        - ByChannel
        - ByCategory
        - ByProduct
        - ByDay
    reportFilterList:
      required:
        - links
        - reportFilters
      type: object
      properties:
        reportFilters:
          type: array
          items:
            $ref: '#/components/schemas/reportFilterHeader'
        links:
          $ref: '#/components/schemas/reportFiltersLinks'
    reportFilterHeader:
      required:
        - links
        - reportFilterId
        - reportFilterName
        - reportType
      type: object
      properties:
        reportFilterId:
          type: string
          description: Report filter identifier
          format: guid
          example: fb19c53c-2f63-4262-9d94-2d7faa500acd
        reportFilterName:
          type: string
          description: Report filter name
          example: My report filter
        reportType:
          $ref: '#/components/schemas/reportType'
        links:
          $ref: '#/components/schemas/reportFilterHeaderLinks'
    reportFilter:
      required:
        - parameters
        - reportFilterId
        - reportFilterName
      type: object
      properties:
        reportFilterId:
          type: string
          description: Report filter identifier
          format: guid
          example: fb19c53c-2f63-4262-9d94-2d7faa500acd
        reportFilterName:
          type: string
          description: Report filter name
          example: My report filter
        parameters:
          $ref: '#/components/schemas/reportFilterParameters'
        links:
          $ref: '#/components/schemas/reportFilterLinks'
    saveReportFilterRequest:
      required:
        - parameters
        - reportFilterName
      type: object
      properties:
        reportFilterName:
          type: string
          description: Report filter name
          example: My report filter
        parameters:
          $ref: '#/components/schemas/reportFilterParameters'
    reportFilterParameters:
      allOf:
        - $ref: '#/components/schemas/reportFilterCommonParameters'
        - required:
            - reportType
          type: object
          properties:
            reportType:
              $ref: '#/components/schemas/reportType'
            productColumnsToDisplay:
              $ref: '#/components/schemas/productColumnsToDisplay'
            productState:
              $ref: '#/components/schemas/productStateFilter'
            analyticsProductColumnFilters:
              $ref: '#/components/schemas/analyticsProductColumnFilters'
    ruleList:
      required:
        - links
        - rules
      type: object
      properties:
        rules:
          type: array
          description: Rule list
          items:
            $ref: '#/components/schemas/rule'
        links:
          $ref: '#/components/schemas/ruleListLinks'
    rule:
      required:
        - actionName
        - enabled
        - links
        - position
        - reportFilterId
        - ruleId
        - ruleName
      type: object
      properties:
        ruleId:
          type: string
          description: The identifier of the rule
          format: guid
          example: c38006b4-29d0-4b8a-978b-701a0b12d5a8
        ruleName:
          type: string
          description: The name of the rule
          example: My Rule
        lastExecutionStatus:
          $ref: '#/components/schemas/ruleLastExecutionStatus'
        lastExecutionUtcDate:
          type: string
          description: The utc date of the last execution
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        actionName:
          $ref: '#/components/schemas/optimisationActionName'
        reportFilterId:
          type: string
          description: Report filter identifier linked to the rule
          format: guid
          example: fb19c53c-2f63-4262-9d94-2d7faa500acd
        position:
          type: integer
          description: Rule execution position
          example: 1
        enabled:
          type: boolean
          description: Is the rule enabled
          example: true
        validityStartUtcDate:
          type: string
          description: Rule validity start utc date
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        validityEndUtcDate:
          type: string
          description: Rule validity end utc date
          format: date-time
          example: 3016-08-29T09:12:33.001Z
        links:
          $ref: '#/components/schemas/ruleLinks'
    createRuleRequest:
      required:
        - optimisationActionName
        - reportFilterId
        - ruleName
      type: object
      properties:
        optimisationActionName:
          $ref: '#/components/schemas/optimisationActionName'
        ruleName:
          type: string
          description: The name of the rule
          example: My rule
        reportFilterId:
          type: string
          description: The report filter to use for the rule
          format: guid
          example: fb19c53c-2f63-4262-9d94-2d7faa500acd
        startUtcDate:
          type: string
          description: The start validity utc date of the rule
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        endUtcDate:
          type: string
          description: The end validity utc date of the rule
          format: date-time
          example: 2017-09-30T10:42:40.001Z
    updateRuleRequest:
      required:
        - ruleName
      type: object
      properties:
        ruleName:
          type: string
          description: The name of the rule
          example: My Rule Renamed
        startUtcDate:
          type: string
          description: Not required. The start validity utc date of the rule.
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        endUtcDate:
          type: string
          description: Not required. The end validity utc date of the rule
          format: date-time
          example: 2016-08-29T09:12:33.001Z
      description: This update will replace the following values.
    optimisationActionName:
      type: string
      description: The optimisation action
      example: reenable
      enum:
        - reenable
        - disable
    ruleExecutionReportings:
      type: object
      properties:
        executions:
          type: array
          description: The rules executions history
          items:
            $ref: '#/components/schemas/ruleExecutionReporting'
        paginationResult:
          $ref: '#/components/schemas/BeezUP_Common_PaginationResult'
    ruleExecutionReporting:
      required:
        - executionSource
        - ruleId
        - ruleName
        - status
      type: object
      properties:
        ruleId:
          type: string
          description: The rule identifier
          format: guid
          example: fd9a23a1-569b-40af-af91-f7275a57bf89
        ruleName:
          type: string
          description: The name of the rule
          example: toto
        startedUtcDate:
          type: string
          description: The start utc date of the execution of the rule
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        completedUtcDate:
          type: string
          description: The completed utc date of the execution of the rule
          format: date-time
          example: 2016-08-29T09:12:33.001Z
        status:
          $ref: '#/components/schemas/ruleExecutionReportingStatus'
        errorType:
          $ref: '#/components/schemas/ruleExecutionReportingErrorType'
        affectedProductCount:
          type: integer
          description: The count of affected products, active or not
          example: 1
        activeAffectedProductCount:
          type: integer
          description: The count of affected active products
          example: 1
        affectedChannelCount:
          type: integer
          description: The count of affected Channels across all products
          example: 1
        optimisationActionName:
          $ref: '#/components/schemas/optimisationActionName'
        userId:
          type: string
          description: The userId that executed the rule if any
          format: guid
          example: e8289350-69f8-45a6-b0ca-b641c83e0422
        executionSource:
          $ref: '#/components/schemas/ruleExecutionReportingExecutionSource'
        reportUrl:
          type: string
          description: The url for the excel report for this execution
          example: http://www.google.com
        links:
          $ref: '#/components/schemas/ruleExecutionReportingLinks'
    ruleLastExecutionStatus:
      type: string
      description: The status of the last execution
      example: Succeeded
      enum:
        - InProgress
        - Succeeded
        - Failed
        - Unknown
    ruleExecutionReportingStatus:
      type: string
      description: The status of the execution of the rule
      example: Succeeded
      enum:
        - InProgress
        - Succeeded
        - AlreadyInProgress
        - Aborted
        - Failed
        - Unknown
    ruleExecutionReportingExecutionSource:
      type: string
      description: The requestor type for the execution of the rule
      example: User
      enum:
        - Scheduler
        - User
    ruleExecutionReportingErrorType:
      type: string
      description: The error type for this execution if any
      example: ChannelNotPresent
      enum:
        - ChannelNotPresent
        - StoreIsInSystemBlockState
    links.GetLegacyTrackingChannelCatalogsLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: /v2/user/legacyTracking/channelCatalogs
            method: GET
    links.GetLegacyTrackingChannelCatalogLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/legacyTracking/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
            method: GET
    links.MigrateLegacyTrackingChannelCatalogLink:
      allOf:
        - $ref: '#/components/schemas/BeezUP_Common_Link3'
        - type: object
          example:
            href: >-
              /v2/user/legacyTracking/channelCatalogs/6d6b04de-406b-4539-8e7e-bf3e8da5dfb0/migrate
            method: POST
    legacyTrackingChannelCatalogListLinks:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetLegacyTrackingChannelCatalogsLink'
      description: >
        Indicates how global actions you can do like how to create a channel
        catalog, exclusion filter operators, etc...
    legacyTrackingChannelCatalogLinks:
      required:
        - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/links.GetLegacyTrackingChannelCatalogLink'
        migrate:
          $ref: '#/components/schemas/links.MigrateLegacyTrackingChannelCatalogLink'
      description: Indicates the actions you can do on a channel catalog
    legacyTrackingChannelCatalogList:
      type: object
      properties:
        links:
          $ref: '#/components/schemas/legacyTrackingChannelCatalogListLinks'
        channelCatalogs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/legacyTrackingChannelCatalog'
          description: The channel catalog list. The key is the channel catalog identifier
      description: This is the index of the channel catalog API
    legacyTrackingChannelCatalog:
      required:
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/legacyTrackingChannelCatalogLinks'
      description: The channel catalog
  responses:
    304_NotModified:
      description: >-
        The ETag sent in the http header If-None-Match did not change. So you
        are up to date !
      headers:
        ETag:
          description: >
            ETag value to identify the current version of the resource\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
        Last-Modified:
          description: >
            Last modification UTC date of the resource\

            For more details go to this link:
            https://tools.ietf.org/html/rfc7232#section-2.2
          schema:
            type: string
            format: date-time
      content: {}
    412_PreConditionFailed:
      description: >-
        The ETag sent in the http header If-Match did not match with the current
        version. Please refresh the information related to this resource.
      headers:
        ETag:
          description: >
            The ETag value to identify the resource.\

            For more details go to this link:
            http://tools.ietf.org/html/rfc7232#section-2.3
          schema:
            type: string
      content: {}
    BadRequestResponse:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    GeneralError:
      description: Occurs when something goes wrong
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    StoreNotFoundResponse:
      description: Store or resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BeezUP_Common_ErrorResponseMessage'
    importAlreadyInProgress:
      description: A catalog importation is already in progress!
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/importAlreadyInProgressResponse'
    importStarted:
      description: Catalog importation started
      headers:
        Retry-After:
          description: The duration in second to wait before polling this resource
          schema:
            minimum: 5
            type: integer
        Location:
          description: The location of the new resource to poll
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/links.Importation_GetImportationMonitoringLink
    orderGenerateForbiddenResponse:
      description: |
        OwnerId not authorized
        The required order invoice settings have not been set
        BeezUPOrderStatus forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - UserNotOwnerException
        - OrderInvoiceDesignSettingsNotFoundException
        - OrderInvoiceGeneralSettingsNotFoundException
        - OrderInvoiceGenerationBeezUPOrderStatusForbiddenException
    orderGenerateTooManyRequestsResponse:
      description: |
        Too many Requests. Please retry in a few seconds
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderInvoiceTooManyRequestsException
    orderInvoiceConflictResponse:
      description: |
        The InvoiceNumber is already used
        There is already an invoice for this order
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderInvoiceNumberAlreadyUsedException
        - OrderAlreadyHasInvoiceException
    orderInvoiceDesignSettingsNotFoundResponse:
      description: |
        The order invoice design is not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderInvoiceDesignSettingsNotFoundException
    orderInvoiceGeneralSettingsNotFoundResponse:
      description: |
        The order invoice general settings are not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderInvoiceGeneralSettingsNotFoundException
    orderInvoiceNotFound:
      description: |
        The order invoice does not exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderInvoiceNotFoundException
    orderNotFoundResponse:
      description: |
        The order cannot be retrieved
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderNotFoundException
    orderSubscriptionTargetNotAvailableResponse:
      description: The target url is not available
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderSubscriptionTargetNotAvailableException
    ownerIdNotAuthorizedResponse:
      description: The ownerId is not found or not authorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - UserNotOwnerException
    processingResponse:
      description: >-
        The marketplace configuration related to this channel catalog is
        currently in progress. Please retry later.
      headers:
        Retry-After:
          description: Indicate the duration to before the next retry in second.
          schema:
            type: integer
            format: int32
      content: {}
    retryRejectedResponse:
      description: >-
        The subscription is deactivated or your subscription consumption
        availability status is available.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderSubscriptionRetryRejectedException
    saveOrderInvoiceDesignSettingsBadRequestResponse:
      description: |
        The design did not pass the validation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderInvoiceDesignSettingsValidationFailedException
    saveOrderInvoiceGeneralSettingsBadRequestResponse:
      description: |
        The settingsgeneral did not pass the validation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderInvoiceGeneralSettingsValidationFailedException
    subscriptionAlreadyExistsResponse:
      description: The subscription id is already used.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderSubscriptionAlreadyExistsException
    subscriptionNotFoundResponse:
      description: The subscription is not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponseMessage'
      x-exceptions:
        - OrderSubscriptionNotFoundException
  parameters:
    ifNoneMatchParameter:
      name: If-None-Match
      in: header
      description: >
        ETag value to identify the last known version of requested resource.\

        To avoid useless exchange, we recommend you to indicate the ETag you
        previously got from this operation.\

        If the ETag value does not match the response will be 200 to give you a
        new content, otherwise the response will be: 304 Not Modified, without
        any content.\

        For more details go to this link:
        http://tools.ietf.org/html/rfc7232#section-2.3
      schema:
        type: string
    acceptEncodingRequiredParameter:
      name: Accept-Encoding
      in: header
      description: >-
        Allows the client to indicate whether it accepts a compressed encoding
        to reduce traffic size.
      required: true
      style: simple
      explode: false
      schema:
        type: array
        items:
          type: string
    acceptLanguageParameter:
      name: Accept-Language
      in: header
      description: Indicates that the client accepts the following languages.
      style: simple
      explode: false
      schema:
        type: array
        items:
          type: string
    storeIdOnlyGeneralParameters:
      name: storeId
      in: path
      description: Your store identifier
      required: true
      schema:
        type: string
        format: guid
    executionId:
      name: executionId
      in: path
      description: The execution identifier of you catalog importation
      required: true
      schema:
        type: string
        format: guid
    catalogColumnId:
      name: columnId
      in: path
      description: The catalog column identifier
      required: true
      schema:
        type: string
        format: guid
    customColumnId:
      name: columnId
      in: path
      description: The custom column identifier
      required: true
      schema:
        type: string
        format: guid
    productSampleIndex:
      name: productSampleIndex
      in: path
      description: Index of the product sample. Starting from 0 to 99.
      required: true
      schema:
        maximum: 99
        minimum: 0
        type: integer
        format: int32
    channelIdParameter:
      name: channelId
      in: path
      description: The channel identifier
      required: true
      schema:
        type: string
        format: guid
      example: 2dc136a7-0d3d-4cc9-a825-a28a42c53e28
    channelCatalogIdParameter:
      name: channelCatalogId
      in: path
      description: The channel catalog identifier
      required: true
      schema:
        type: string
        format: guid
      example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
    productIdParameter:
      name: productId
      in: path
      description: The product identifier
      required: true
      schema:
        type: string
        format: guid
      example: 578419df-1bbf-41a6-96fa-862e42182b67
    exportFormatInQueryGeneralParameter:
      name: format
      in: query
      description: The file type of the exportation
      required: true
      schema:
        type: string
        enum:
          - xlsx
          - csv
    groupIdParameter:
      name: groupId
      in: path
      description: The exclusion filter group identifier
      required: true
      schema:
        type: string
        format: guid
      example: 6d6b04de-406b-4539-8e7e-bf3e8da5dfb0
    pageNumberQueryStrngParameter:
      name: pageNumber
      in: query
      description: The page number you want to get
      required: true
      schema:
        minimum: 1
        type: integer
        format: int32
      example: '1'
    pageSizeQueryStrngParameter:
      name: pageSize
      in: query
      description: The entry count you want to get
      required: true
      schema:
        maximum: 100
        minimum: 25
        type: integer
        format: int32
      example: '25'
    marketplaceTechnicalCodeParameter:
      name: marketplaceTechnicalCode
      in: path
      description: The marketplace technical code
      required: true
      schema:
        type: string
      example: Amazon
    accountIdParameter:
      name: accountId
      in: path
      required: true
      schema:
        type: integer
        format: int32
      example: '1001'
    beezUPOrderIdParameter:
      name: beezUPOrderId
      in: path
      description: The BeezUP Order identifier
      required: true
      schema:
        type: string
        format: uuid
      example: '00000000000000000000000000000000000000000000000'
    changeOrderTypeParameter:
      name: changeOrderType
      in: path
      description: The Order change type
      required: true
      schema:
        type: string
        x-lov: OrderChangeBusinessOperationType
      x-lov: OrderChangeBusinessOperationType
    userNameInQueryParameter:
      name: userName
      in: query
      description: >-
        Sometimes the user in the e-commerce application is not the same as user
        associated with the current subscription key. We recommend providing
        your application's user login.
      required: true
      schema:
        type: string
    testModeInQueryParameter:
      name: testMode
      in: query
      description: >-
        If true, the operation will be not be sent to marketplace. But the
        validation will be taken in account.
      schema:
        type: boolean
        default: false
      example: 'false'
    ifMatchParameter:
      name: If-Match
      in: header
      description: >
        ETag value to identify the last known version of requested resource.\

        To ensure that you are making a change on the lastest version of the
        resource.\

        For more details go to this link:
        http://tools.ietf.org/html/rfc7232#section-2.3
      required: true
      schema:
        type: string
    storeIdsParameter:
      name: storeIds
      in: query
      description: StoredIds to filter
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    subscriptionIdPathParameter:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: SubscriptionId
    marketplaceTechnicalCode:
      name: marketplaceTechnicalCode
      in: path
      description: The Marketplace Technical Code
      required: true
      schema:
        type: string
        format: MarketplaceTechnicalCode
    accountId:
      name: accountId
      in: path
      description: The Account Identifier
      required: true
      schema:
        type: string
        format: MarketplaceAccountId
    beezUPOrderUUID:
      name: beezUPOrderUUID
      in: path
      description: The BeezUP Order UUID
      required: true
      schema:
        type: string
        format: BeezUPOrderUUID
    optimisationActionNameGeneralParameters:
      name: actionName
      in: path
      required: true
      schema:
        type: string
        format: optimisationActionName
        enum:
          - reenable
          - disable
    reportFilterIdOnlyGeneralParameters:
      name: reportFilterId
      in: path
      description: Your report filter identifier
      required: true
      schema:
        type: string
        format: guid
    ruleIdOnlyGeneralParameters:
      name: ruleId
      in: path
      description: Your rule identifier
      required: true
      schema:
        type: string
        format: guid
  securitySchemes:
    api_key:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
      description: Represents API Key 'Ocp-Apim-Subscription-Key'
x-tagGroups:
  - name: Public - Security
    tags:
      - Public - Security - Security
  - name: Public - Channels
    tags:
      - Public - Channels - Public Channels
  - name: Public - List of Values
    tags:
      - Public - List of Values - LOV
  - name: User - List of Values
    tags:
      - User - List of Values - LOV
  - name: Customer
    tags:
      - Customer - Global
      - Customer - Account
      - Customer - Security
      - Customer - Stores
      - Customer - Shares
      - Customer - Alerts
      - Customer - Rights
      - Customer - Friends
      - Customer - Contracts
      - Customer - Invoices
  - name: Catalogs
    tags:
      - Catalogs - Auto
      - Catalogs - Global
      - Catalogs - Importation Process
      - Catalogs - Importation Catalog Info
      - Catalogs - Catalog
  - name: Channels
    tags:
      - Channels - Channels Global
  - name: Channel Catalogs
    tags:
      - Channel Catalogs - Global
      - Channel Catalogs - Settings
      - Channel Catalogs - Column Mappings
      - Channel Catalogs - Categories
      - Channel Catalogs - Exclusion Filters
      - Channel Catalogs - Products
      - Channel Catalogs - Products Overrides
      - Channel Catalogs - Products Optimisation
      - Channel Catalogs - Exportations
  - name: Marketplaces - Channel catalogs
    tags:
      - Marketplaces - Channel catalogs - Global
      - Marketplaces - Channel catalogs - Publications
      - Marketplaces - Channel catalogs - Settings
  - name: Marketplaces - Orders
    tags:
      - Marketplaces - Orders - Global
      - Marketplaces - Orders - AutoTransitions
      - Marketplaces - Orders - List
      - Marketplaces - Orders - Order
      - Marketplaces - Orders - Batches
      - Marketplaces - Orders - Exports
  - name: Marketplaces - Orders V3
    tags:
      - Marketplaces - Orders V3 - Global
      - Marketplaces - Orders V3 - List
      - Marketplaces - Orders V3 - Order
      - Marketplaces - Orders V3 - Batches
  - name: Marketplaces - Orders - Subscriptions
    tags:
      - Marketplaces - Orders - Subscriptions - Subscriptions
  - name: OM Invoice - API
    tags:
      - OM Invoice - API - Settings
      - OM Invoice - API - Generation
  - name: Analytics
    tags:
      - Analytics - Global
      - Analytics - Tracking
      - Analytics - Statistics
      - Analytics - Optimisations
      - Analytics - Reports
      - Analytics - Rules
  - name: Channel Catalogs - Legacy Tracking
    tags:
      - Channel Catalogs - Legacy Tracking - Global
