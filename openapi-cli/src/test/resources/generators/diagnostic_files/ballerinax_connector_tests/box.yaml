openapi: 3.0.2
info:
  x-ballerina-display:
    label: Box
    iconPath: "icon.png"
  title: Box Platform API
  description: >
    This is a generated connector for [Box Platform API v2.0.0](https://developer.box.com/guides/) OpenAPI specification.

    [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
  x-ballerina-init-description: >
    The connector initialization requires setting the API credentials.

    Create a [Box Developer Account](https://developer.box.com/) and obtain tokens following [this guide](https://developer.box.com/guides/).
  termsOfService: 'https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9'
  contact:
    name: 'Box, Inc'
    url: 'https://box.dev'
    email: devrel@box.com
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
  version: 2.0.0
servers:
  - url: 'https://api.box.com/2.0'
    description: Box Platform API server
paths:
  /authorize:
    get:
      operationId: get_authorize
      summary: Authorize user
      description: 'Authorize a user by sending them through the [Box](https://box.com) website and request their permission to act on their behalf.  This is the first step when authenticating a user using OAuth 2.0. To request a user''s authorization to use the Box APIs on their behalf you will need to send a user to the URL with this format.'
      tags:
        - Authorization
      x-box-tag: authorization
      security: []
      servers:
        - url: 'https://account.box.com/api/oauth2'
          description: Server for client-side authentication
      parameters:
        - name: response_type
          description: The type of response we'd like to receive.
          in: query
          example: code
          required: true
          schema:
            type: string
            format: token
            enum:
              - code
        - name: client_id
          description: 'The Client ID of the application that is requesting to authenticate the user. To get the Client ID for your application, log in to your Box developer console and click the **Edit Application** link for the application you''re working with. In the OAuth 2.0 Parameters section of the configuration page, find the item labelled `client_id`. The text of that item is your application''s Client ID.'
          in: query
          example: ly1nj6n11vionaie65emwzk575hnnmrk
          required: true
          schema:
            type: string
        - name: redirect_uri
          description: The URL to which Box redirects the browser after the user has granted or denied the application permission. This URL must match the redirect URL in the configuration of your application. It must be a valid HTTPS URL and it needs to be able to handle the redirection to complete the next step in the OAuth 2.0 flow.
          in: query
          example: 'http://example.com/auth/callback'
          required: false
          schema:
            type: string
            format: url
        - name: state
          description: 'A custom string of your choice. Box will pass the same string to the redirect URL when authentication is complete. This parameter can be used to identify a user on redirect, as well as protect against hijacked sessions and other exploits.'
          in: query
          example: my_state
          required: false
          schema:
            type: string
        - name: scope
          description: A comma-separated list of application scopes you'd like to authenticate the user for. This defaults to all the scopes configured for the application in its configuration page.
          in: query
          example: admin_readwrite
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Does not return any data, but rather should be used in the browser.'
          content:
            text/html:
              schema:
                type: string
                format: html
        default:
          description: 'Does not return any data, but rather should be used in the browser.'
          content:
            text/html:
              schema:
                type: string
                format: html
  /oauth2/token:
    post:
      operationId: post_oauth2_token
      summary: Request access token
      description: 'Request an Access Token using either a client-side obtained OAuth 2.0 authorization code or a server-side JWT assertion.  An Access Token is a string that enables Box to verify that a request belongs to an authorized session. In the normal order of operations you will begin by requesting authentication from the [authorize](#get-authorize) endpoint and Box will send you an authorization code.  You will then send this code to this endpoint to exchange it for an Access Token. The returned Access Token can then be used to to make Box API calls.'
      tags:
        - Authorization
      servers:
        - url: 'https://api.box.com'
          description: Server for server-side authentication
      x-box-tag: authorization
      security: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostOAuth2Token'
      responses:
        '200':
          description: 'Returns a new Access Token that can be used to make authenticated API calls by passing along the token in a authorization header as follows `Authorization: Bearer <Token>`.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: An authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'
        default:
          description: An authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'
  /oauth2/token#refresh:
    post:
      operationId: post_oauth2_token#refresh
      summary: Refresh access token
      description: 'Refresh an Access Token using its client ID, secret, and refresh token.'
      tags:
        - Authorization
      servers:
        - url: 'https://api.box.com'
          description: Server for server-side authentication
      x-box-tag: authorization
      x-box-is-variation: true
      security: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostOAuth2Token--RefreshAccessToken'
      responses:
        '200':
          description: 'Returns a new Access Token that can be used to make authenticated API calls by passing along the token in a authorization header as follows `Authorization: Bearer <Token>`.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: An authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'
        default:
          description: An authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'
  /oauth2/revoke:
    post:
      operationId: post_oauth2_revoke
      summary: Revoke access token
      description: 'Revoke an active Access Token, effectively logging a user out that has been previously authenticated.'
      tags:
        - Authorization
      servers:
        - url: 'https://api.box.com'
          description: Server for server-side authentication
      x-box-tag: authorization
      security: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostOAuth2Revoke'
      responses:
        '200':
          content: {}
          description: Returns an empty response when the token was successfully revoked.
        '400':
          description: An authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'
        default:
          description: An authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2Error'
  '/files/{file_id}':
    get:
      operationId: get_files_id
      summary: Get file information
      tags:
        - Files
      x-box-tag: files
      x-box-enable-explorer: true
      description: Retrieves the details about a file.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.  Additionally this field can be used to query any metadata applied to the file by specifying the `metadata` field as well as the scope and key of the template to retrieve, for example `?field=metadata.enterprise_12345.contractTemplate`.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: if-none-match
          description: Ensures an item is only returned if it has changed.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `304 Not Modified` if the item has not changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
        - name: boxapi
          description: 'The URL, and optional password, for the shared link of this item.  This header can be used to access items that have not been explicitly shared with a user.  Use the format `shared_link=[link]` or if a password is required then use `shared_link=[link]&shared_link_password=[password]`.  This header can be used on the file or folder shared, as well as on any files or folders nested within the item.'
          example: 'shared_link=[link]&shared_link_password=[password]'
          in: header
          required: false
          schema:
            type: string
        - name: x-rep-hints
          description: 'A header required to request specific `representations` of a file. Use this in combination with the `fields` query parameter to request a specific file representation.  The general format for these representations is `X-Rep-Hints: [...]` where `[...]` is one or many hints in the format `[fileType?query]`.  For example, to request a `png` representation in `32x32` as well as `94x94` pixel dimensions provide the following hints.  `X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`  Additionally, a `text` representation is available for all document file types in Box using the `[extracted_text]` representation.  `X-Rep-Hints: [extracted_text]`'
          example: '[pdf]'
          in: header
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: 'Returns a file object.  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '304':
          description: Returns an empty response when the `If-None-Match` header matches the current `etag` value of the folder. This indicates that the folder has not changed since it was last requested.
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file is not found, or the user does not have access to the file.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '415':
          description: Returns an error if an action is performed on a file with an incorrect media type.  * `unsupported_media_type` when requesting an `expiring_embed_link`   for a file that is not supported by Box Embed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_files_id
      summary: Restore file
      tags:
        - Trashed files
      x-box-tag: trashed_files
      description: Restores a file that has been moved to the trash.  An optional new parent ID can be provided to restore the file to in case the original folder has been deleted.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: An optional new name for the file.
                  example: Restored.docx
                  type: string
                parent:
                  type: object
                  description: The parent for this item
                  properties:
                    id:
                      type: string
                      description: The ID of parent item
                      example: '123'
      responses:
        '201':
          description: Returns a file object when the file has been restored.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '403':
          description: 'Returns an error if the user does not have access to the folder the file is being restored to, or the user does not have permission to restore files from the trash.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error if the file is not in the trash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: Returns an error if there is an file with the same name in the folder the file is being restored to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_files_id
      summary: Update file
      tags:
        - Files
      x-box-tag: files
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: 'Updates a file. This can be used to rename or move a file, create a shared link, or lock a file.'
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: if-match
          description: Ensures this item hasn't recently changed before making changes.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `412 Precondition Failed` if it has changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: An optional different name for the file. This can be used to rename the file.
                  example: NewFile.txt
                description:
                  type: string
                  description: 'The description for a file. This can be seen in the right-hand sidebar panel when viewing a file in the Box web app. Additionally, this index is used in the search index of the file, allowing users to find the file by the content in the description.'
                  maxLength: 256
                  example: The latest reports. Automatically updated
                parent:
                  type: object
                  description: The parent for this item
                  properties:
                    id:
                      type: string
                      description: The ID of parent item
                      example: '123'
                shared_link:
                  description: Defines a shared link for an item. Set this to `null` to remove the shared link.
                  type: object
                  properties:
                    access:
                      type: string
                      description: 'The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).  If not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ "shared_link": {} }`.  The `company` access level is only available to paid accounts.'
                      enum:
                        - open
                        - company
                        - collaborators
                      example: open
                    password:
                      type: string
                      description: The password required to access the shared link. Set the password to `null` to remove it.  A password can only be set when `access` is set to `open`.
                      example: do-not-use-this-password
                    vanity_name:
                      type: string
                      description: 'Defines a custom vanity name to use in the shared link URL, for example `https://app.box.com/v/my-shared-link`.  Custom URLs should not be used when sharing sensitive content as vanity URLs are a lot easier to guess than regular shared links.'
                      example: my-shared-link
                    unshared_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: The timestamp at which this shared link will expire. This field can only be set by users with paid accounts.
                    permissions:
                      type: object
                      description: The permissions for the shared link.
                      properties:
                        can_download:
                          type: boolean
                          example: true
                          description: If the shared link allows for downloading of files. This can only be set when `access` is set to `open` or `company`.
                lock:
                  type: object
                  description: 'Defines a lock on an item. This prevents the item from being moved, renamed, or otherwise changed by anyone other than the user who created the lock.  Set this to `null` to remove the lock.'
                  required:
                    - type
                  properties:
                    access:
                      type: string
                      description: The type of this object.
                      enum:
                        - lock
                      example: lock
                    expires_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: Defines the time at which the lock expires.
                    is_download_prevented:
                      type: boolean
                      example: true
                      description: Defines if the file can be downloaded while it is locked.
                permissions:
                  description: Defines who can download a file.
                  type: object
                  properties:
                    can_download:
                      description: 'Defines who is allowed to download this file. The possible values are either `open` for everyone or `company` for the other members of the user''s enterprise.  This setting overrides the download permissions that are normally part of the `role` of a collaboration. When set to `company`, this essentially removes the download option for external users with `viewer` or `editor` a roles.'
                      type: string
                      example: open
                      enum:
                        - open
                        - company
                tags:
                  type: array
                  example:
                    - approved
                  items:
                    type: string
                  minItems: 1
                  maxItems: 100
                  description: 'The tags for this item. These tags are shown in the Box web app and mobile apps next to an item.  To add or remove a tag, retrieve the item''s current tags, modify them, and then update this field.  There is a limit of 100 tags per item, and 10,000 unique tags per enterprise.'
      responses:
        '200':
          description: 'Returns a file object.  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned if the user does not have all the permissions to complete the update.  * `access_denied_insufficient_permissions` when the authenticated user does not have access the destination folder to move the file to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file is not found, or the user does not have access to the file.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the file. This indicates that the file has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_files_id
      summary: Delete file
      tags:
        - Files
      x-box-tag: files
      x-box-sanitized: true
      description: 'Deletes a file, either permanently or by moving it to the trash.  The the enterprise settings determine whether the item will be permanently deleted from Box or moved to the trash.'
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: if-match
          description: Ensures this item hasn't recently changed before making changes.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `412 Precondition Failed` if it has changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the file has been successfully deleted.
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file is not found or has already been deleted, or the user does not have access to the file.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the file. This indicates that the file has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/content':
    get:
      operationId: get_files_id_content
      summary: Download file
      tags:
        - Downloads
      x-box-tag: downloads
      description: Returns the contents of a file in binary format.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: range
          description: 'The byte range of the content to download.  The format `{start_byte}-{end_byte}` can be used to specify what section of the file to download.'
          example: 0-1024
          in: header
          required: false
          schema:
            type: string
        - name: boxapi
          description: 'The URL, and optional password, for the shared link of this item.  This header can be used to access items that have not been explicitly shared with a user.  Use the format `shared_link=[link]` or if a password is required then use `shared_link=[link]&shared_link_password=[password]`.  This header can be used on the file or folder shared, as well as on any files or folders nested within the item.'
          example: 'shared_link=[link]&shared_link_password=[password]'
          in: header
          required: false
          schema:
            type: string
        - name: version
          description: The file version to download
          example: '4'
          in: query
          required: false
          schema:
            type: string
        - name: access_token
          description: 'An optional access token that can be used to pre-authenticate this request, which means that a download link can be shared with a browser or a third party service without them needing to know how to handle the authentication. When using this parameter, please make sure that the access token is sufficiently scoped down to only allow read access to that file and no other files or folders.'
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
          in: query
          required: false
          schema:
            type: string
      responses:
        '202':
          content: {}
          description: If the file is not ready to be downloaded yet `Retry-After` header will be returned indicating the time in seconds after which the file will be available for the client to download.  This response can occur when the file was uploaded immediately before the download request.
          headers:
            Retry-After:
              description: The time in seconds after which to retry the download
              schema:
                type: integer
        '302':
          description: If the file is available to be downloaded the response will include a `Location` header for the file on `dl.boxcloud.com`.  The `dl.boxcloud.com` URL is not persistent and clients will need to follow the redirect in order to actually download the file.
          headers:
            Location:
              description: A pointer to the download URL
              schema:
                type: string
                format: url
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_files_id_content
      tags:
        - Uploads
      x-box-tag: uploads
      summary: Upload file version
      description: 'Update a file''s content. For file sizes over 50MB we recommend using the Chunk Upload APIs.  # Request body order  The `attributes` part of the body must come **before** the `file` part. Requests that do not follow this format when uploading the file will receive a HTTP `400` error with a `metadata_after_file_contents` error code.'
      servers:
        - url: 'https://upload.box.com/api/2.0'
          description: Server for file uploads
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: if-match
          description: Ensures this item hasn't recently changed before making changes.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `412 Precondition Failed` if it has changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: content-md5
          required: false
          schema:
            type: string
          example: 134b65991ed521fcfe4724b7d814ab8ded5185dc
          in: header
          description: An optional header containing the SHA1 hash of the file to ensure that the file was not corrupted in transit.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - attributes
                - file
              properties:
                attributes:
                  description: The additional attributes of the file being uploaded. Mainly the name and the parent folder. These attributes are part of the multi part request body and are in JSON format.  <Message warning>    The `attributes` part of the body must come **before** the   `file` part. Requests that do not follow this format when   uploading the file will receive a HTTP `400` error with a   `metadata_after_file_contents` error code.  </Message>
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: 'An optional new name for the file. If specified, the file will be renamed when the new version is uploaded.'
                      example: Photo 2.0.png
                    content_modified_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: 'Defines the time the file was last modified at.  If not set, the upload time will be used.'
                file:
                  type: string
                  format: binary
                  description: The content of the file to upload to Box.  <Message warning>    The `attributes` part of the body must come **before** the   `file` part. Requests that do not follow this format when   uploading the file will receive a HTTP `400` error with a   `metadata_after_file_contents` error code.  </Message>
      responses:
        '200':
          description: Returns the new file object in a list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the file. This indicates that the file has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /files/content:
    post:
      operationId: post_files_content
      tags:
        - Uploads
      x-box-tag: uploads
      summary: Upload file
      description: 'Uploads a small file to Box. For file sizes over 50MB we recommend using the Chunk Upload APIs.  # Request body order  The `attributes` part of the body must come **before** the `file` part. Requests that do not follow this format when uploading the file will receive a HTTP `400` error with a `metadata_after_file_contents` error code.'
      servers:
        - url: 'https://upload.box.com/api/2.0'
          description: Server for file uploads
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: content-md5
          required: false
          schema:
            type: string
          example: 134b65991ed521fcfe4724b7d814ab8ded5185dc
          in: header
          description: An optional header containing the SHA1 hash of the file to ensure that the file was not corrupted in transit.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - attributes
                - file
              properties:
                attributes:
                  description: The additional attributes of the file being uploaded. Mainly the name and the parent folder. These attributes are part of the multi part request body and are in JSON format.  <Message warning>    The `attributes` part of the body must come **before** the   `file` part. Requests that do not follow this format when   uploading the file will receive a HTTP `400` error with a   `metadata_after_file_contents` error code.  </Message>
                  type: object
                  required:
                    - name
                    - parent
                  properties:
                    name:
                      type: string
                      description: The name of the file
                      example: Photo.png
                    parent:
                      type: object
                      description: The parent folder to upload the file to
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          example: '124132'
                          description: The id of the parent folder. Use `0` for the user's root folder.
                    content_created_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: 'Defines the time the file was originally created at.  If not set, the upload time will be used.'
                    content_modified_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: 'Defines the time the file was last modified at.  If not set, the upload time will be used.'
                file:
                  type: string
                  format: binary
                  description: The content of the file to upload to Box.  <Message warning>    The `attributes` part of the body must come **before** the   `file` part. Requests that do not follow this format when   uploading the file will receive a HTTP `400` error with a   `metadata_after_file_contents` error code.  </Message>
      responses:
        '201':
          description: Returns the new file object in a list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'
        '409':
          description: 'Returns an error if the file already exists, or the account has run out of disk space.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /files/upload_sessions:
    post:
      operationId: post_files_upload_sessions
      summary: Create upload session
      tags:
        - Uploads (Chunked)
      x-box-tag: chunked_uploads
      description: Creates an upload session for a new file.
      servers:
        - url: 'https://upload.box.com/api/2.0'
          description: Server for file uploads
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - folder_id
                - file_size
                - file_name
              properties:
                folder_id:
                  description: The ID of the folder to upload the new file to.
                  type: string
                  example: '0'
                file_size:
                  description: The total number of bytes of the file to be uploaded
                  example: 104857600
                  type: integer
                  format: int64
                file_name:
                  description: The name of new file
                  example: Project.mov
                  type: string
      responses:
        '201':
          description: Returns a new upload session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSession'
        '400':
          description: 'Returns an error if some of the parameters are missing or not valid.  * `missing_destination`: No `folder_id` was provided * `invalid_folder_id`: `folder_id` is not valid * `item_name_invalid`: `file_name` is not valid * `missing_file_size`: `file_size` was not provided * `invalid_file_size`: `file_size` was not a valid number * `file_size_too_small`: `file_size` is below minimum file size for   uploads via this API * `missing_file_name`: `file_name` was not provided'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: 'Returns an error if the operation is not allowed for some reason.  * `storage_limit_exceeded`: Account storage limit reached'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error if the parent folder could not be found, or the authenticated user does not have access to it.  * `invalid_parameter`: The `folder_id` value represents a   folder that the user does not have access to, or does not   exist.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: 'Returns an error if the file already exists, or the account has run out of disk space.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/upload_sessions':
    post:
      operationId: post_files_id_upload_sessions
      summary: Create upload session for existing file
      tags:
        - Uploads (Chunked)
      x-box-tag: chunked_uploads
      description: Creates an upload session for an existing file.
      servers:
        - url: 'https://upload.box.com/api/2.0'
          description: Server for file uploads
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - file_size
              properties:
                file_size:
                  description: The total number of bytes of the file to be uploaded
                  example: 104857600
                  type: integer
                  format: int64
                file_name:
                  description: The optional new name of new file
                  example: Project.mov
                  type: string
      responses:
        '201':
          description: Returns a new upload session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSession'
        '409':
          description: 'Returns an error if the file already exists, or if the account has run out of disk space.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/upload_sessions/{upload_session_id}':
    get:
      operationId: get_files_upload_sessions_id
      summary: Get upload session
      tags:
        - Uploads (Chunked)
      description: Return information about an upload session.
      x-box-tag: chunked_uploads
      servers:
        - url: 'https://upload.box.com/api/2.0'
          description: Server for file uploads
      parameters:
        - name: upload_session_id
          description: The ID of the upload session.
          example: D5E3F7A
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns an upload session object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadSession'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_files_upload_sessions_id
      summary: Upload part of file
      tags:
        - Uploads (Chunked)
      x-box-tag: chunked_uploads
      description: Updates a chunk of an upload session for a file.
      servers:
        - url: 'https://upload.box.com/api/2.0'
          description: Server for file uploads
      parameters:
        - name: upload_session_id
          description: The ID of the upload session.
          example: D5E3F7A
          in: path
          required: true
          schema:
            type: string
        - name: digest
          description: 'The [RFC3230][1] message digest of the chunk uploaded.  Only SHA1 is supported. The SHA1 digest must be Base64 encoded. The format of this header is as `sha=BASE64_ENCODED_DIGEST`.  [1]: https://tools.ietf.org/html/rfc3230'
          example: sha=fpRyg5eVQletdZqEKaFlqwBXJzM=
          in: header
          required: true
          schema:
            type: string
        - name: content-range
          description: The byte range of the chunk.  Must not overlap with the range of a part already uploaded this session.
          example: bytes 8388608-16777215/445856194
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: The binary content of the file
      responses:
        '200':
          description: Chunk has been uploaded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadedPart'
        '409':
          description: Returns an error if the chunk conflicts with another chunk previously uploaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error if a precondition was not met.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '416':
          description: Returns an error if the content range does not match a specified range for the session.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_files_upload_sessions_id
      summary: Remove upload session
      tags:
        - Uploads (Chunked)
      description: Abort an upload session and discard all data uploaded.  This cannot be reversed.
      servers:
        - url: 'https://upload.box.com/api/2.0'
          description: Server for file uploads
      x-box-tag: chunked_uploads
      parameters:
        - name: upload_session_id
          description: The ID of the upload session.
          example: D5E3F7A
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: A blank response is returned if the session was successfully aborted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/upload_sessions/{upload_session_id}/parts':
    get:
      operationId: get_files_upload_sessions_id_parts
      summary: List parts
      tags:
        - Uploads (Chunked)
      x-box-tag: chunked_uploads
      servers:
        - url: 'https://upload.box.com/api/2.0'
          description: Server for file uploads
      description: Return a list of the chunks uploaded to the upload session so far.
      parameters:
        - name: upload_session_id
          description: The ID of the upload session.
          example: D5E3F7A
          in: path
          required: true
          schema:
            type: string
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns a list of parts that have been uploaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadParts'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/upload_sessions/{upload_session_id}/commit':
    post:
      operationId: post_files_upload_sessions_id_commit
      summary: Commit upload session
      tags:
        - Uploads (Chunked)
      x-box-tag: chunked_uploads
      servers:
        - url: 'https://upload.box.com/api/2.0'
          description: Server for file uploads
      description: Close an upload session and create a file from the uploaded chunks.
      parameters:
        - name: upload_session_id
          description: The ID of the upload session.
          example: D5E3F7A
          in: path
          required: true
          schema:
            type: string
        - name: digest
          description: 'The [RFC3230][1] message digest of the whole file.  Only SHA1 is supported. The SHA1 digest must be Base64 encoded. The format of this header is as `sha=BASE64_ENCODED_DIGEST`.  [1]: https://tools.ietf.org/html/rfc3230'
          in: header
          example: sha=fpRyg5eVQletdZqEKaFlqwBXJzM=
          required: true
          schema:
            type: string
        - name: if-match
          description: Ensures this item hasn't recently changed before making changes.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `412 Precondition Failed` if it has changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
        - name: if-none-match
          description: Ensures an item is only returned if it has changed.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `304 Not Modified` if the item has not changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parts
              properties:
                parts:
                  type: array
                  description: The list details for the uploaded parts
                  items:
                    $ref: '#/components/schemas/UploadPart'
      responses:
        '201':
          description: Returns the file object in a list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Files'
        '202':
          content: {}
          description: 'Returns when all chunks have been uploaded but not yet processed.  Inspect the upload session to get more information about the progress of processing the chunks, then retry committing the file when all chunks have processed.'
          headers:
            Retry-After:
              description: Indicates the number of seconds the client should wait before attempting their commit request again.
              schema:
                type: integer
        '409':
          description: Returns an error if there is already a file with the same name in the target folder.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error if the `If-Match` or `If-None-Match` conditions fail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/copy':
    post:
      operationId: post_files_id_copy
      summary: Copy file
      description: Creates a copy of a file.
      tags:
        - Files
      x-box-tag: files
      x-box-enable-explorer: true
      x-box-sanitized: true
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parent
              nullable: false
              properties:
                name:
                  type: string
                  description: 'An optional new name for the copied file.  There are some restrictions to the file name. Names containing non-printable ASCII characters, forward and backward slashes (`/`, `\`), and protected names like `.` and `..` are automatically sanitized by removing the non-allowed characters.'
                  example: FileCopy.txt
                  maxLength: 255
                version:
                  type: string
                  description: An optional ID of the specific file version to copy.
                  example: '0'
                parent:
                  type: object
                  description: The destination folder to copy the file to.
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: The ID of folder to copy the file to.
                      example: '0'
      responses:
        '201':
          description: 'Returns a new file object representing the copied file.  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '304':
          description: Returns an empty response when the `If-None-Match` header matches the current `etag` value of the file. This indicates that the file has not changed since it was last requested.
        '400':
          description: Returns an error if some of the parameters are missing or not valid.  * `bad_request` when a parameter is missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error if either the source file or the destination folder could not be found, or the authenticated user does not have access to either.  * `not_found` when the authenticated user does not have access   to the source file or the destination folder'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: '* `operation_blocked_temporary`: Returned if either of the destination   or source folders is locked due to another move, copy, delete or   restore operation in process.    The operation can be retried at a later point.  * `item_name_in_use` when a folder with the same name already   exists.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/thumbnail.{extension}':
    get:
      operationId: get_files_id_thumbnail_id
      summary: Get file thumbnail
      description: 'Retrieves a thumbnail, or smaller image representation, of a file.  Sizes of `32x32`,`64x64`, `128x128`, and `256x256` can be returned in the `.png` format and sizes of `32x32`, `94x94`, `160x160`, and `320x320` can be returned in the `.jpg` format.  Thumbnails can be generated for the image and video file formats listed [found on our community site][1].  [1]: https://community.box.com/t5/Migrating-and-Previewing-Content/File-Types-and-Fonts-Supported-in-Box-Content-Preview/ta-p/327'
      tags:
        - Files
      x-box-tag: files
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: extension
          description: The file format for the thumbnail
          in: path
          required: true
          example: png
          schema:
            type: string
            enum:
              - png
              - jpg
        - name: min_height
          description: The minimum height of the thumbnail
          in: query
          example: 32
          schema:
            type: integer
            minimum: 32
            maximum: 320
        - name: min_width
          description: The minimum width of the thumbnail
          in: query
          example: 32
          schema:
            type: integer
            minimum: 32
            maximum: 320
        - name: max_height
          description: The maximum height of the thumbnail
          in: query
          required: false
          example: 320
          schema:
            type: integer
            minimum: 32
            maximum: 320
        - name: max_width
          description: The maximum width of the thumbnail
          in: query
          required: false
          example: 320
          schema:
            type: integer
            minimum: 32
            maximum: 320
      responses:
        '200':
          description: When a thumbnail can be created the thumbnail data will be returned in the body of the response.
          content:
            image/png:
              schema:
                type: string
                format: binary
                description: The thumbnail
            image/jpg:
              schema:
                type: string
                format: binary
                description: The thumbnail
        '202':
          content: {}
          description: 'Sometimes generating a thumbnail can take a few seconds. In these situations the API returns a `Location`-header pointing to a placeholder graphic for this file type.  The placeholder graphic can be used in a user interface until the thumbnail generation has completed. The `Retry-After`-header indicates when to the thumbnail will be ready. At that time, retry this endpoint to retrieve the thumbnail.'
          headers:
            Retry-After:
              description: The time in seconds after which the thumbnail will be available.  Your application  only attempt to get the thumbnail again after this time.
              schema:
                type: integer
                format: int64
            Location:
              description: A pointer to a placeholder graphic that can be used until the thumbnail has been generated.
              schema:
                type: string
                format: url
        '302':
          description: 'Returns an error when Box is not able to create a thumbnail for this file type.  Instead, a `Location`-header pointing to a placeholder graphic for this file type will be returned.'
          headers:
            Location:
              description: A pointer to a placeholder graphic that can be used for this file type.
              schema:
                type: string
                format: url
        '400':
          description: 'Returns an error if some of the parameters are missing or not valid.  * `requested_preview_unavailable` - an incorrect dimension was   requested. This will happen if the dimension requested is   larger or smaller than the available file sizes for the thumbnail   format, or when when any of the size constraints contradict   each other.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file is not found, or the user does not have access to the file, or for additional reasons.  * `preview_cannot_be_generated` - Box does not support thumbnails   for this type of file'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/collaborations':
    get:
      operationId: get_files_id_collaborations
      summary: List file collaborations
      description: Retrieves a list of pending and active collaborations for a file. This returns all the users that have access to the file or have been invited to the file.
      tags:
        - Collaborations (List)
      x-box-tag: list_collaborations
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
      responses:
        '200':
          description: 'Returns a collection of collaboration objects. If there are no collaborations on this file an empty collection will be returned.  This list includes pending collaborations, for which the `status` is set to `pending`, indicating invitations that have been sent but not yet accepted.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaborations'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/comments':
    get:
      operationId: get_files_id_comments
      summary: List file comments
      description: Retrieves a list of comments for a file.
      tags:
        - Comments
      x-box-tag: comments
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        '200':
          description: Returns a collection of comment objects. If there are no comments on this file an empty collection will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/tasks':
    get:
      operationId: get_files_id_tasks
      summary: List tasks on file
      description: Retrieves a list of all the tasks for a file. This endpoint does not support pagination.
      tags:
        - Tasks
      x-box-tag: tasks
      x-box-sanitized: true
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a list of tasks on a file.  If there are no tasks on this file an empty collection is returned instead.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
        '404':
          description: Returns an error when the file could not be found or the user does not have access to the file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returns an error when the `file_id` was not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '500':
          description: Returns an error when an attempt was made to retrieve tasks for the file with ID `0`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/trash':
    get:
      operationId: get_files_id_trash
      summary: Get trashed file
      tags:
        - Trashed files
      x-box-tag: trashed_files
      description: 'Retrieves a file that has been moved to the trash.  Please note that only if the file itself has been moved to the trash can it be retrieved with this API call. If instead one of its parent folders was moved to the trash, only that folder can be inspected using the [`GET /folders/:id/trash`](e://get_folders_id_trash) API.  To list all items that have been moved to the trash, please use the [`GET /folders/trash/items`](e://get-folders-trash-items/) API.'
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 'Returns the file that was trashed, including information about when the it was moved to the trash.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '404':
          description: 'Returns an error if the file can not be found directly in the trash.  Please note that a `HTTP 404` is also returned if any of the file''s parent folders have been moved to the trash.  In that case, only that parent folder can be inspected using the [`GET /folders/:id/trash`](e://get_folders_id_trash) API.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_files_id_trash
      summary: Permanently remove file
      tags:
        - Trashed files
      x-box-tag: trashed_files
      description: Permanently deletes a file that is in the trash. This action cannot be undone.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the file was permanently deleted.
        '404':
          description: Returns an error if the file is not in the trash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/versions':
    get:
      operationId: get_files_id_versions
      summary: List all file versions
      tags:
        - File versions
      x-box-tag: file_versions
      description: 'Retrieve a list of the past versions for a file.  Versions are only tracked by Box users with premium accounts. To fetch the ID of the current version of a file, use the `GET /file/:id` API.'
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        '200':
          description: Returns an array of past versions for this file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVersions'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/versions/{file_version_id}':
    get:
      operationId: get_files_id_versions_id
      summary: Get file version
      tags:
        - File versions
      x-box-tag: file_versions
      description: Retrieve a specific version of a file.  Versions are only tracked for Box users with premium accounts.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: file_version_id
          description: The ID of the file version
          in: path
          required: true
          example: '1234'
          schema:
            type: string
      responses:
        '200':
          description: 'Returns a specific version of a file.  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVersion'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_files_id_versions_id
      summary: Remove file version
      tags:
        - File versions
      x-box-tag: file_versions
      description: Move a file version to the trash.  Versions are only tracked for Box users with premium accounts.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: file_version_id
          description: The ID of the file version
          in: path
          required: true
          example: '1234'
          schema:
            type: string
        - name: if-match
          description: Ensures this item hasn't recently changed before making changes.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `412 Precondition Failed` if it has changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the file has been successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/versions/current':
    post:
      operationId: post_files_id_versions_current
      summary: Revert file version
      tags:
        - File versions
      x-box-tag: file_versions
      description: 'Revert to a previous version of a file.  If previous versions exist, this method can be used to promote one of the older versions to the top of the version history.  This actually creates a new copy of the old version and puts it at the top of the versions history. The file will have the exact same contents as the older version, with the the same hash digest, `etag`, and name as the original.  Other properties such as comments do not get updated to their former values.'
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The file version to revert to
              properties:
                id:
                  type: string
                  description: The file version ID
                  example: '11446498'
                type:
                  type: string
                  description: The type to revert to
                  example: file_version
                  enum:
                    - file_version
      responses:
        '201':
          description: Returns a newly created file version object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVersion'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}/watermark':
    get:
      operationId: get_files_id_watermark
      summary: Get watermark on file
      tags:
        - Watermarks (Files)
      x-box-tag: file_watermarks
      description: Retrieve the watermark for a file.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns an object containing information about the watermark associated for to this file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watermark'
        '404':
          description: Returns an error if the file does not have a watermark applied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_files_id_watermark
      summary: Apply watermark to file
      tags:
        - Watermarks (Files)
      x-box-tag: file_watermarks
      description: Applies or update a watermark on a file.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - watermark
              properties:
                watermark:
                  type: object
                  description: The watermark to imprint on the file
                  required:
                    - imprint
                  properties:
                    imprint:
                      type: string
                      example: default
                      description: The type of watermark to apply.  Currently only supports one option.
                      enum:
                        - default
      responses:
        '200':
          description: Returns an updated watermark if a watermark already existed on this file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watermark'
        '201':
          description: Returns a new watermark if no watermark existed on this file yet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watermark'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_files_id_watermark
      summary: Remove watermark from file
      tags:
        - Watermarks (Files)
      x-box-tag: file_watermarks
      description: Removes the watermark from a file.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: An empty response will be returned when the watermark was successfully deleted.
        '404':
          description: Returns an error if the file did not have a watermark applied to it
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/file_requests/{file_request_id}':
    get:
      operationId: get_file_requests_id
      summary: Get file request
      tags:
        - File requests
      x-box-tag: file_requests
      x-box-enable-explorer: true
      description: Retrieves the information about a file request.
      parameters:
        - name: file_request_id
          description: 'The unique identifier that represent a file request.  The ID for any file request can be determined by visiting a file request builder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/filerequest/123` the `file_request_id` is `123`.'
          example: '123'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a file request object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRequest'
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file request is not found, or the user does not have access to the associated folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_request_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_file_requests_id
      summary: Update file request
      tags:
        - File requests
      x-box-tag: file_requests
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: Updates a file request. This can be used to activate or deactivate a file request.
      parameters:
        - name: file_request_id
          description: 'The unique identifier that represent a file request.  The ID for any file request can be determined by visiting a file request builder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/filerequest/123` the `file_request_id` is `123`.'
          example: '123'
          in: path
          required: true
          schema:
            type: string
        - name: if-match
          description: Ensures this item hasn't recently changed before making changes.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `412 Precondition Failed` if it has changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequestUpdateRequest'
      responses:
        '200':
          description: Returns the updated file request object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRequest'
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned if the user does not have all the permissions to complete the update.  * `access_denied_insufficient_permissions` when the authenticated user does not have access to update the file request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file request is not found, or the user does not have access to the associated folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_request_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the file request. This indicates that the file request has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_file_requests_id
      summary: Delete file request
      tags:
        - File requests
      x-box-tag: file_requests
      x-box-sanitized: true
      description: Deletes a file request permanently.
      parameters:
        - name: file_request_id
          description: 'The unique identifier that represent a file request.  The ID for any file request can be determined by visiting a file request builder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/filerequest/123` the `file_request_id` is `123`.'
          example: '123'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the file request has been successfully deleted.
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file request is not found or has already been deleted, or the user does not have access to the associated folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_request_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/file_requests/{file_request_id}/copy':
    post:
      operationId: post_file_requests_id_copy
      summary: Copy file request
      tags:
        - File requests
      x-box-tag: file_requests
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: 'Copies an existing file request that is already present on one folder, and applies it to another folder.'
      parameters:
        - name: file_request_id
          description: 'The unique identifier that represent a file request.  The ID for any file request can be determined by visiting a file request builder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/filerequest/123` the `file_request_id` is `123`.'
          example: '123'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequestCopyRequest'
      responses:
        '200':
          description: Returns updated file request object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRequest'
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned if the user does not have all the permissions to complete the update.  * `access_denied_insufficient_permissions` when the authenticated user does not have access to update the file request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file request is not found, or the user does not have access to the associated folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_request_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}':
    get:
      operationId: get_folders_id
      summary: Get folder information
      tags:
        - Folders
      x-box-tag: folders
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: 'Retrieves details for a folder, including the first 100 entries in the folder.  To fetch more items within the folder, please use the [Get items in a folder](#get-folders-id-items) endpoint.'
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.  Additionally this field can be used to query any metadata applied to the file by specifying the `metadata` field as well as the scope and key of the template to retrieve, for example `?field=metadata.enterprise_12345.contractTemplate`.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: if-none-match
          description: Ensures an item is only returned if it has changed.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `304 Not Modified` if the item has not changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
        - name: boxapi
          description: 'The URL, and optional password, for the shared link of this item.  This header can be used to access items that have not been explicitly shared with a user.  Use the format `shared_link=[link]` or if a password is required then use `shared_link=[link]&shared_link_password=[password]`.  This header can be used on the file or folder shared, as well as on any files or folders nested within the item.'
          example: 'shared_link=[link]&shared_link_password=[password]'
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'Returns a folder, including the first 100 entries in the folder.  To fetch more items within the folder, please use the [Get items in a folder](#get-folders-id-items) endpoint.  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '304':
          description: Returns an empty response when the `If-None-Match` header matches the current `etag` value of the folder. This indicates that the folder has not changed since it was last requested.
        '403':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the folder is not found, or the user does not have access to the folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `folder_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_folders_id
      summary: Restore folder
      tags:
        - Trashed folders
      x-box-tag: trashed_folders
      description: 'Restores a folder that has been moved to the trash.  An optional new parent ID can be provided to restore the folder to in case the original folder has been deleted.  # Folder locking  During this operation, part of the file tree will be locked, mainly the source folder and all of its descendants, as well as the destination folder.  For the duration of the operation, no other move, copy, delete, or restore operation can performed on any of the locked folders.'
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: An optional new name for the folder.
                  example: Restored Photos
                  type: string
                parent:
                  allOf:
                    - type: object
                      description: The parent for this item
                      properties:
                        id:
                          type: string
                          description: The ID of parent item
                          example: '123'
                    - description: Specifies an optional ID of a folder to restore the folder to when the original folder no longer exists.  Please be aware that this ID will only be used if the original folder no longer exists. Use this ID to provide a fallback location to restore the folder to if the original location has been deleted.
      responses:
        '201':
          description: Returns a folder object when the folder has been restored.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '403':
          description: 'Returns an error if the user does not have access to the folder the folder is being restored to, or the user does not have permission to restore folders from the trash.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error if the folder is not in the trash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: '* Returned an error if there is a folder with the same name   in the destination folder.  * `operation_blocked_temporary`: Returned if either of the destination   or source folders is locked due to another move, copy, delete or   restore operation in process.    The operation can be retried at a later point.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_folders_id
      summary: Update folder
      description: 'Updates a folder. This can be also be used to move the folder, create shared links, update collaborations, and more.'
      tags:
        - Folders
      x-box-tag: folders
      x-box-sanitized: true
      x-box-enable-explorer: true
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: if-match
          description: Ensures this item hasn't recently changed before making changes.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `412 Precondition Failed` if it has changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The optional new name for this folder.
                  example: New Folder
                description:
                  type: string
                  description: The optional description of this folder
                  maxLength: 256
                  example: Legal contracts for the new ACME deal
                  nullable: false
                sync_state:
                  type: string
                  example: synced
                  nullable: false
                  description: Specifies whether a folder should be synced to a user's device or not. This is used by Box Sync (discontinued) and is not used by Box Drive.
                  enum:
                    - synced
                    - not_synced
                    - partially_synced
                can_non_owners_invite:
                  type: boolean
                  example: true
                  description: Specifies if users who are not the owner of the folder can invite new collaborators to the folder.
                parent:
                  type: object
                  description: The parent folder for this folder. Use this to move the folder or to restore it out of the trash.
                  properties:
                    id:
                      type: string
                      description: The ID of the new parent folder
                      example: '0'
                shared_link:
                  allOf:
                    - description: Defines a shared link for an item. Set this to `null` to remove the shared link.
                      type: object
                      properties:
                        access:
                          type: string
                          description: 'The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).  If not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ "shared_link": {} }`.  The `company` access level is only available to paid accounts.'
                          enum:
                            - open
                            - company
                            - collaborators
                          example: open
                        password:
                          type: string
                          description: The password required to access the shared link. Set the password to `null` to remove it.  A password can only be set when `access` is set to `open`.
                          example: do-not-use-this-password
                        vanity_name:
                          type: string
                          description: 'Defines a custom vanity name to use in the shared link URL, for example `https://app.box.com/v/my-shared-link`.  Custom URLs should not be used when sharing sensitive content as vanity URLs are a lot easier to guess than regular shared links.'
                          example: my-shared-link
                        unshared_at:
                          type: string
                          format: date-time
                          example: '2012-12-12T10:53:43-08:00'
                          description: The timestamp at which this shared link will expire. This field can only be set by users with paid accounts.
                        permissions:
                          type: object
                          description: The permissions on shared link.
                          properties:
                            can_download:
                              type: boolean
                              example: true
                              description: If the shared link allows for downloading of files. This can only be set when `access` is set to `open` or `company`.
                    - description: Enables the creation of a shared link for a folder.
                folder_upload_email:
                  allOf:
                    - title: Folder upload email
                      type: object
                      description: The Write Folder Upload Email object
                      properties:
                        access:
                          type: string
                          example: open
                          nullable: false
                          enum:
                            - open
                            - collaborators
                          description: 'When this parameter has been set, users can email files to the email address that has been automatically created for this folder.  To create an email address, set this property either when creating or updating the folder.  When set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.  When set to `open` it will accept emails from any email address.'
                    - description: Setting this object enables the upload email address.  This email address can be used by users to directly upload files directly to the folder via email.  Setting the value to `null` will disable the email address.
                tags:
                  type: array
                  example:
                    - approved
                  items:
                    type: string
                  minItems: 1
                  maxItems: 100
                  description: 'The tags for this item. These tags are shown in the Box web app and mobile apps next to an item.  To add or remove a tag, retrieve the item''s current tags, modify them, and then update this field.  There is a limit of 100 tags per item, and 10,000 unique tags per enterprise.'
                is_collaboration_restricted_to_enterprise:
                  type: boolean
                  example: true
                  description: Specifies if new invites to this folder are restricted to users within the enterprise. This does not affect existing collaborations.
                collections:
                  type: array
                  description: 'An array of collections to make this folder a member of. Currently we only support the `favorites` collection.  To get the ID for a collection, use the [List all collections][1] endpoint.  Passing an empty array `[]` or `null` will remove the folder from all collections.  [1]: ../advanced-files-and-folders/#get-collections'
                  items:
                    title: Reference
                    description: The bare basic reference for an object
                    type: object
                    properties:
                      id:
                        type: string
                        description: The unique identifier for this object
                        example: '11446498'
                      type:
                        type: string
                        description: The type for this object
                        example: file
                can_non_owners_view_collaborators:
                  type: boolean
                  example: true
                  description: 'Restricts collaborators who are not the owner of this folder from viewing other collaborations on this folder.  It also restricts non-owners from inviting new collaborators.  When setting this field to `false`, it is required to also set `can_non_owners_invite_collaborators` to `false` if it has not already been set.'
      responses:
        '200':
          description: 'Returns a folder object for the updated folder  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields.  This call will return synchronously. This holds true even when moving folders with a large a large number of items in all of its descendants. For very large folders, this means the call could take minutes or hours to return.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '400':
          description: 'Returns an error if some of the parameters are missing or not valid, or if a folder lock is preventing a move operation.  * `bad_request` when a parameter is missing or incorrect. This error also   happens when a password is set for a shared link with an access type   of `open`. * `item_name_too_long` when the folder name is too long. * `item_name_invalid` when the folder name contains   non-valid characters.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: 'Returns an error if the user does not have the required access to perform the action.  * `access_denied_insufficient_permissions`: Returned when the   user does not have access to the folder or parent folder, or if the   folder is being moved and a folder lock has been applied to prevent   such operations.  * `insufficient_scope`: Returned an error if the application   does not have the right scope to update folders. Make sure   your application has been configured to read and write all files   and folders stored in Box.  * `forbidden`: Returned when the user is not allowed to perform this   action for other users. This can include trying to create a   Shared Link with a `company` access level on a free account.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error if the folder or parent folder could not be found, or the authenticated user does not have access to either folder.  * `not_found` when the authenticated user does not have access   to the folder or parent folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: '* `operation_blocked_temporary`: Returned if either of the destination   or source folders is locked due to another move, copy, delete or   restore operation in progress.    The operation can be retried at a later point.  * `item_name_in_use`: Returned if a folder with the name   already exists in the parent folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the folder. This indicates that the folder has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '503':
          description: Returns an error when the operation takes longer than 60 seconds. The operation will continue after this response has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_folders_id
      summary: Delete folder
      description: 'Deletes a folder, either permanently or by moving it to the trash.'
      tags:
        - Folders
      x-box-tag: folders
      x-box-sanitized: true
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: if-match
          description: Ensures this item hasn't recently changed before making changes.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `412 Precondition Failed` if it has changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
        - name: recursive
          description: Delete a folder that is not empty by recursively deleting the folder and all of its content.
          in: query
          required: false
          example: true
          schema:
            type: boolean
      responses:
        '204':
          content: {}
          description: Returns an empty response when the folder is successfully deleted or moved to the trash.
        '403':
          description: 'Returns an error if the user does not have the required access to perform the action.  * `access_denied_insufficient_permissions`: Returned when the   user does not have access to the folder, or when a folder lock has been   applied to the folder to prevent deletion.  * `insufficient_scope`: Returned an error if the application   does not have the right scope to delete folders. Make sure   your application has been configured to read and write all files   and folders stored in Box.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error if the folder could not be found, or the authenticated user does not have access to the folder.  * `not_found` when the authenticated user does not have access   to the folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: '* `folder_not_empty`: Returned if the folder is not empty. Use the   `recursive` query parameter to recursively delete the folder and   its contents. * `operation_blocked_temporary`: Returned if the folder   is locked due to another move, copy, delete or restore   operation in progress.    The operation can be retried at a later point.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the folder. This indicates that the folder has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '503':
          description: Returns an error when the operation takes longer than 60 seconds. The operation will continue after this response has been returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}/items':
    get:
      operationId: get_folders_id_items
      summary: List items in folder
      tags:
        - Folders
      x-box-tag: folders
      x-box-sanitized: true
      x-box-enable-explorer: true
      description: 'Retrieves a page of items in a folder. These items can be files, folders, and web links.  To request more information about the folder itself, like its size, please use the [Get a folder](#get-folders-id) endpoint instead.'
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.  Additionally this field can be used to query any metadata applied to the file by specifying the `metadata` field as well as the scope and key of the template to retrieve, for example `?field=metadata.enterprise_12345.contractTemplate`.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: usemarker
          description: 'Specifies whether to use marker-based pagination instead of offset-based pagination. Only one pagination method can be used at a time.  By setting this value to true, the API will return a `marker` field that can be passed as a parameter to this endpoint to get the next page of the response.'
          in: query
          required: false
          example: true
          schema:
            type: boolean
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: boxapi
          description: 'The URL, and optional password, for the shared link of this item.  This header can be used to access items that have not been explicitly shared with a user.  Use the format `shared_link=[link]` or if a password is required then use `shared_link=[link]&shared_link_password=[password]`.  This header can be used on the file or folder shared, as well as on any files or folders nested within the item.'
          example: 'shared_link=[link]&shared_link_password=[password]'
          in: header
          required: false
          schema:
            type: string
        - name: sort
          description: 'Defines the **second** attribute by which items are sorted.  Items are always sorted by their `type` first, with folders listed before files, and files listed before web links.  This parameter is not supported for marker-based pagination on the root folder (the folder with an ID of `0`).'
          in: query
          required: false
          example: id
          schema:
            type: string
            enum:
              - id
              - name
              - date
              - size
        - name: direction
          description: The direction to sort results in. This can be either in alphabetical ascending (`ASC`) or descending (`DESC`) order.
          in: query
          required: false
          example: ASC
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: 'Returns a collection of files, folders, and web links contained in a folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
        '403':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the folder is not found, or the user does not have access to the folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `folder_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /folders:
    post:
      operationId: post_folders
      summary: Create folder
      tags:
        - Folders
      x-box-tag: folders
      x-box-enable-explorer: true
      description: Creates a new empty folder within the specified parent folder.
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - parent
              properties:
                name:
                  type: string
                  description: 'The name for the new folder.  There are some restrictions to the file name. Names containing non-printable ASCII characters, forward and backward slashes (`/`, `\`), as well as names with trailing spaces are prohibited.  Additionally, the names `.` and `..` are not allowed either.'
                  example: New Folder
                  maxLength: 255
                  minLength: 1
                parent:
                  type: object
                  description: The parent folder to create the new folder within.
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: The ID of parent folder
                      example: '0'
                folder_upload_email:
                  allOf:
                    - title: Folder upload email
                      type: object
                      description: The Write Folder Upload Email object
                      properties:
                        access:
                          type: string
                          example: open
                          nullable: false
                          enum:
                            - open
                            - collaborators
                          description: 'When this parameter has been set, users can email files to the email address that has been automatically created for this folder.  To create an email address, set this property either when creating or updating the folder.  When set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.  When set to `open` it will accept emails from any email address.'
                    - description: Setting this object enables the upload email address.  This email address can be used by users to directly upload files directly to the folder via email.
                sync_state:
                  type: string
                  example: synced
                  nullable: false
                  description: Specifies whether a folder should be synced to a user's device or not. This is used by Box Sync (discontinued) and is not used by Box Drive.
                  enum:
                    - synced
                    - not_synced
                    - partially_synced
      responses:
        '201':
          description: 'Returns a folder object.  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '400':
          description: Returns an error if some of the parameters are missing or not valid.  * `bad_request` when a parameter is missing or incorrect. * `item_name_too_long` when the folder name is too long. * `item_name_invalid` when the folder name contains   non-valid characters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: 'Returns an error if the user does not have the required access to perform the action. This might be because they don''t have access to the folder or parent folder, or because the application does not have permission to write files and folders.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error if the parent folder could not be found, or the authenticated user does not have access to the parent folder.  * `not_found` when the authenticated user does not have access   to the parent folder'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: '* `operation_blocked_temporary`: Returned if either of the destination   or source folders is locked due to another move, copy, delete or   restore operation in process.    The operation can be retried at a later point.  * `item_name_in_use`: Returned if a folder with the name   already exists in the parent folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}/copy':
    post:
      operationId: post_folders_id_copy
      summary: Copy folder
      x-box-enable-explorer: true
      x-box-tag: folders
      description: Creates a copy of a folder within a destination folder.  The original folder will not be changed.
      tags:
        - Folders
      parameters:
        - name: folder_id
          description: 'The unique identifier of the folder to copy.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder with the ID `0` can not be copied.'
          example: '0'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parent
              nullable: false
              properties:
                name:
                  type: string
                  description: 'An optional new name for the copied folder.  There are some restrictions to the file name. Names containing non-printable ASCII characters, forward and backward slashes (`/`, `\`), as well as names with trailing spaces are prohibited.  Additionally, the names `.` and `..` are not allowed either.'
                  example: New Folder
                  maxLength: 255
                  minLength: 1
                parent:
                  type: object
                  description: The destination folder to copy the folder to.
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: The ID of parent folder
                      example: '0'
      responses:
        '201':
          description: 'Returns a new folder object representing the copied folder.  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '304':
          description: Returns an empty response when the `If-None-Match` header matches the current `etag` value of the folder. This indicates that the folder has not changed since it was last requested.
        '400':
          description: Returns an error if some of the parameters are missing or not valid.  * `bad_request` when a parameter is missing. * `item_name_too_long` when the new folder name is too long.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error if either the source or destination folder could not be found, or the authenticated user does not have access to either folders.  * `not_found` when the authenticated user does not have access   to the parent folder'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: 'Returns an error if a folder by this name already exists in the destination folder, or if the destination folder is locked.  * `item_name_in_use` when a folder with the same name already   exists.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '500':
          description: Returns an error when trying to copy the root folder.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}/collaborations':
    get:
      operationId: get_folders_id_collaborations
      summary: List folder collaborations
      description: Retrieves a list of pending and active collaborations for a folder. This returns all the users that have access to the folder or have been invited to the folder.
      tags:
        - Collaborations (List)
      x-box-tag: list_collaborations
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 'Returns a collection of collaboration objects. If there are no collaborations on this folder an empty collection will be returned.  This list includes pending collaborations, for which the `status` is set to `pending`, indicating invitations that have been sent but not yet accepted.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaborations'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}/trash':
    get:
      operationId: get_folders_id_trash
      summary: Get trashed folder
      tags:
        - Trashed folders
      x-box-tag: trashed_folders
      description: 'Retrieves a folder that has been moved to the trash.  Please note that only if the folder itself has been moved to the trash can it be retrieved with this API call. If instead one of its parent folders was moved to the trash, only that folder can be inspected using the [`GET /folders/:id/trash`](e://get_folders_id_trash) API.  To list all items that have been moved to the trash, please use the [`GET /folders/trash/items`](e://get-folders-trash-items/) API.'
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 'Returns the folder that was trashed, including information about when the it was moved to the trash.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '404':
          description: 'Returns an error if the folder can not be found directly in the trash.  Please note that a `HTTP 404` is also returned if any of the folder''s parent folders have been moved to the trash.  In that case, only that parent folder can be inspected using the [`GET /folders/:id/trash`](e://get_folders_id_trash) API.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_folders_id_trash
      summary: Permanently remove folder
      tags:
        - Trashed folders
      x-box-tag: trashed_folders
      description: Permanently deletes a folder that is in the trash. This action cannot be undone.
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '204':
          content: {}
          description: Returns an empty response when the folder was permanently deleted.
        '404':
          description: Returns an error if the folder is not in the trash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /folders/trash/items:
    get:
      operationId: get_folders_trash_items
      summary: List trashed items
      tags:
        - Trashed items
      x-box-tag: trashed_items
      description: 'Retrieves the files and folders that have been moved to the trash.  Any attribute in the full files or folders objects can be passed in with the `fields` parameter to retrieve those specific attributes that are not returned by default.  This endpoint defaults to use offset-based pagination, yet also supports marker-based pagination using the `marker` parameter.'
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
        - name: usemarker
          description: 'Specifies whether to use marker-based pagination instead of offset-based pagination. Only one pagination method can be used at a time.  By setting this value to true, the API will return a `marker` field that can be passed as a parameter to this endpoint to get the next page of the response.'
          in: query
          required: false
          example: true
          schema:
            type: boolean
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: direction
          description: The direction to sort results in. This can be either in alphabetical ascending (`ASC`) or descending (`DESC`) order.
          in: query
          required: false
          example: ASC
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: sort
          description: 'Defines the **second** attribute by which items are sorted.  Items are always sorted by their `type` first, with folders listed before files, and files listed before web links.  This parameter is not supported when using marker-based pagination.'
          in: query
          required: false
          example: id
          schema:
            type: string
            enum:
              - id
              - name
              - date
              - size
      responses:
        '200':
          description: Returns a list of items that have been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
        '400':
          description: 'Returns an error if some of the parameters are missing or not valid.  * `invalid_parameter` can appear when the `sort`, `direction` or `offset` parameter is provided when using marker based pagination, or when the `marker` parameter is provided but `usemarker` is set to `false` or `null`.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}/watermark':
    get:
      operationId: get_folders_id_watermark
      summary: Get watermark for folder
      tags:
        - Watermarks (Folders)
      x-box-tag: folder_watermarks
      description: Retrieve the watermark for a folder.
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: Returns an object containing information about the watermark associated for to this folder.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watermark'
        '404':
          description: Returns an error if the folder does not have a watermark applied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_folders_id_watermark
      summary: Apply watermark to folder
      tags:
        - Watermarks (Folders)
      x-box-tag: folder_watermarks
      description: Applies or update a watermark on a folder.
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - watermark
              properties:
                watermark:
                  type: object
                  description: The watermark to imprint on the folder
                  required:
                    - imprint
                  properties:
                    imprint:
                      type: string
                      example: default
                      description: The type of watermark to apply.  Currently only supports one option.
                      enum:
                        - default
      responses:
        '200':
          description: Returns an updated watermark if a watermark already existed on this folder.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watermark'
        '201':
          description: Returns a new watermark if no watermark existed on this folder yet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Watermark'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_folders_id_watermark
      summary: Remove watermark from folder
      tags:
        - Watermarks (Folders)
      x-box-tag: folder_watermarks
      description: Removes the watermark from a folder.
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '204':
          content: {}
          description: An empty response will be returned when the watermark was successfully deleted.
        '404':
          description: Returns an error if the folder did not have a watermark applied to it
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /folder_locks:
    get:
      operationId: get_folder_locks
      summary: List folder locks
      tags:
        - Folder Locks
      x-box-tag: folder_locks
      x-box-sanitized: true
      x-box-enable-explorer: true
      description: Retrieves folder lock details for a given folder.
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: query
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '200':
          description: 'Returns details for all folder locks applied to the folder, including the lock type and user that applied the lock.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderLocks'
        '403':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the folder is not found, or the user does not have access to the folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `folder_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_folder_locks
      summary: Create folder lock
      tags:
        - Folder Locks
      x-box-tag: folder_locks
      x-box-sanitized: true
      x-box-enable-explorer: true
      description: 'Creates a folder lock on a folder, preventing it from being moved and/or deleted.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - folder
              properties:
                locked_operations:
                  type: object
                  description: 'The operations to lock for the folder. If `locked_operations` is included in the request, both `move` and `delete` must also be included and both set to `true`.'
                  required:
                    - move
                    - delete
                  properties:
                    move:
                      type: boolean
                      description: Whether moving the folder should be locked.
                      example: true
                    delete:
                      type: boolean
                      description: Whether deleting the folder should be locked.
                      example: true
                folder:
                  type: object
                  description: The folder to apply the lock to.
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      description: The content type the lock is being applied to. Only `folder` is supported.
                      example: folder
                    id:
                      type: string
                      description: The ID of the folder.
                      example: '1234567890'
      responses:
        '200':
          description: 'Returns the instance of the folder lock that was applied to the folder, including the user that applied the lock and the operations set.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderLock'
        '400':
          description: 'Returns an error when the request body is not valid.  * `schema_validation_failed` - The request body contains a value for a field that either does not exist, or for which the value or type does not match the expected field type. An example might be an unknown option for an `enum` or `multiSelect` field.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error when the folder could not be found.  * `not_found` - The folder could not be found, the user does not have access to the folder, or the user making call is not an owner or co-owner of folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folder_locks/{folder_lock_id}':
    delete:
      operationId: delete_folder_locks_id
      summary: Delete folder lock
      description: Deletes a folder lock on a given folder.
      tags:
        - Folder Locks
      x-box-tag: folder_locks
      x-box-sanitized: true
      parameters:
        - name: folder_lock_id
          description: The ID of the folder lock.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
      responses:
        '204':
          content: {}
          description: Returns an empty response when the folder lock is successfully deleted.
        '403':
          description: 'Returns an error if the user does not have the required access to perform the action.  * `access_denied_insufficient_permissions`: Returned when the   user does not have access to the folder.  * `insufficient_scope`: Returned an error if the application   does not have the right scope to delete folders. Make sure   your application has been configured to read and write all files   and folders stored in Box.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error if the folder could not be found, or the authenticated user does not have access to the folder.  * `not_found` when the authenticated user does not have access   to the folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/comments/{comment_id}':
    get:
      operationId: get_comments_id
      summary: Get comment
      tags:
        - Comments
      x-box-tag: comments
      description: 'Retrieves the message and metadata for a specific comment, as well as information on the user who created the comment.'
      parameters:
        - name: comment_id
          description: The ID of the comment.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns a full comment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_comments_id
      summary: Update comment
      tags:
        - Comments
      x-box-tag: comments
      description: Update the message of a comment.
      parameters:
        - name: comment_id
          description: The ID of the comment.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The text of the comment to update
                  example: Review completed!
      responses:
        '200':
          description: Returns the updated comment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_comments_id
      summary: Remove comment
      tags:
        - Comments
      x-box-tag: comments
      description: Permanently deletes a comment.
      parameters:
        - name: comment_id
          description: The ID of the comment.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the comment has been deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /comments:
    post:
      operationId: post_comments
      tags:
        - Comments
      x-box-tag: comments
      summary: Create comment
      description: 'Adds a comment by the user to a specific file, or as a reply to an other comment.'
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
                  description: 'The text of the comment.  To mention a user, use the `tagged_message` parameter instead.'
                  example: Review completed!
                tagged_message:
                  type: string
                  description: 'The text of the comment, including `@[user_id:name]` somewhere in the message to mention another user, which will send them an email notification, letting them know they have been mentioned.  The `user_id` is the target user''s ID, where the `name` can be any custom phrase. In the Box UI this name will link to the user''s profile.  If you are not mentioning another user, use `message` instead.'
                  example: '@[1234:John] Review completed!'
                item:
                  type: object
                  description: The item to attach the comment to.
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                      description: The ID of the item
                      example: '11446498'
                    type:
                      type: string
                      description: The type of the item that this comment will be placed on.
                      example: file
                      enum:
                        - file
                        - comment
      responses:
        '201':
          description: 'Returns the newly created comment object.  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/collaborations/{collaboration_id}':
    get:
      operationId: get_collaborations_id
      summary: Get collaboration
      x-box-tag: user_collaborations
      tags:
        - Collaborations
      description: Retrieves a single collaboration.
      parameters:
        - name: collaboration_id
          description: The ID of the collaboration
          in: path
          required: true
          example: '1234'
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns a collaboration object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_collaborations_id
      tags:
        - Collaborations
      x-box-tag: user_collaborations
      summary: Update collaboration
      description: 'Updates a collaboration.  Can be used to change the owner of an item, or to accept collaboration invites.'
      parameters:
        - name: collaboration_id
          description: The ID of the collaboration
          in: path
          required: true
          example: '1234'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  type: string
                  description: The level of access granted.
                  example: editor
                  enum:
                    - editor
                    - viewer
                    - previewer
                    - uploader
                    - previewer uploader
                    - viewer uploader
                    - co-owner
                    - owner
                status:
                  type: string
                  description: '<!--alex ignore reject--> Set the status of a `pending` collaboration invitation, effectively accepting, or rejecting the invite.'
                  example: accepted
                  enum:
                    - pending
                    - accepted
                    - rejected
                expires_at:
                  type: string
                  format: date-time
                  description: 'Update the expiration date for the collaboration. At this date, the collaboration will be automatically removed from the item.  This feature will only work if the **Automatically remove invited collaborators: Allow folder owners to extend the expiry date** setting has been enabled in the **Enterprise Settings** of the **Admin Console**. When the setting is not enabled, collaborations can not have an expiry date and a value for this field will be result in an error.  Additionally, a collaboration can only be given an expiration if it was created after the **Automatically remove invited collaborator** setting was enabled.'
                  example: '2019-08-29T23:59:00-07:00'
                can_view_path:
                  type: boolean
                  description: 'Determines if the invited users can see the entire parent path to the associated folder. The user will not gain privileges in any parent folder and therefore can not see content the user is not collaborated on.  Be aware that this meaningfully increases the time required to load the invitee''s **All Files** page. We recommend you limit the number of collaborations with `can_view_path` enabled to 1,000 per user.'
                  example: true
      responses:
        '200':
          description: Returns an updated collaboration object unless the owner has changed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
        '204':
          description: 'If the role is changed to `owner`, the collaboration is deleted and a new collaboration is created. The previous `owner` of the old collaboration will be a `co-owner` on the new collaboration.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
        '403':
          description: 'Returns an error if the authenticated user does not have the right permissions to update the collaboration.  Additionally, this error may occur when attempting to update the `expires_at` field for the collaboration without the **Automatically remove invited collaborators: Allow folder owners to extend the expiry date** setting enabled in the admin dashboard of the enterprise.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_collaborations_id
      summary: Remove collaboration
      tags:
        - Collaborations
      x-box-tag: user_collaborations
      description: Deletes a single collaboration.
      parameters:
        - name: collaboration_id
          description: The ID of the collaboration
          in: path
          required: true
          example: '1234'
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: A blank response is returned if the collaboration was successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /collaborations:
    get:
      operationId: get_collaborations
      summary: List pending collaborations
      tags:
        - Collaborations (List)
      x-box-tag: list_collaborations
      description: Retrieves all pending collaboration invites for this user.
      parameters:
        - name: status
          description: The status of the collaborations to retrieve
          in: query
          required: true
          example: pending
          schema:
            type: string
            enum:
              - pending
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: 'Returns a collection of pending collaboration objects.  If the user has no pending collaborations, the collection will be empty.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaborations'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_collaborations
      tags:
        - Collaborations
      x-box-tag: user_collaborations
      summary: Create collaboration
      description: 'Adds a collaboration for a single user or a single group to a file or folder.  Collaborations can be created using email address, user IDs, or a group IDs.  If a collaboration is being created with a group, access to this endpoint is dependent on the group''s ability to be invited.'
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: notify
          description: Determines if users should receive email notification for the action performed.
          in: query
          required: false
          example: true
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - item
                - accessible_by
                - role
              properties:
                item:
                  type: object
                  description: The item to attach the comment to.
                  required:
                    - id
                    - type
                  properties:
                    type:
                      type: string
                      description: The type of the item that this collaboration will be granted access to
                      example: file
                      enum:
                        - file
                        - folder
                    id:
                      type: string
                      description: The ID of the item that will be granted access to
                      example: '11446498'
                accessible_by:
                  type: object
                  description: The user or group to give access to the item.
                  required:
                    - type
                  properties:
                    type:
                      type: string
                      description: The type of collaborator to invite.
                      example: user
                      enum:
                        - user
                        - group
                    id:
                      type: string
                      description: 'The ID of the user or group.  Alternatively, use `login` to specify a user by email address.'
                      example: '23522323'
                    login:
                      type: string
                      description: 'The email address of the user to grant access to the item.  Alternatively, use `id` to specify a user by user ID.'
                      example: john@example.com
                role:
                  type: string
                  description: The level of access granted.
                  example: editor
                  enum:
                    - editor
                    - viewer
                    - previewer
                    - uploader
                    - previewer uploader
                    - viewer uploader
                    - co-owner
                can_view_path:
                  type: boolean
                  description: 'Determines if the invited users can see the entire parent path to the associated folder. The user will not gain privileges in any parent folder and therefore can not see content the user is not collaborated on.  Be aware that this meaningfully increases the time required to load the invitee''s **All Files** page. We recommend you limit the number of collaborations with `can_view_path` enabled to 1,000 per user.'
                  example: true
                expires_at:
                  type: string
                  format: date-time
                  description: 'Set the expiration date for the collaboration. At this date, the collaboration will be automatically removed from the item.  This feature will only work if the **Automatically remove invited collaborators: Allow folder owners to extend the expiry date** setting has been enabled in the **Enterprise Settings** of the **Admin Console**. When the setting is not enabled, collaborations can not have an expiry date and a value for this field will be result in an error.'
                  example: '2019-08-29T23:59:00-07:00'
      responses:
        '201':
          description: Returns a new collaboration object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaboration'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /tasks:
    post:
      operationId: post_tasks
      tags:
        - Tasks
      summary: Create task
      x-box-tag: tasks
      x-box-santized: true
      description: Creates a single task on a file. This task is not assigned to any user and will need to be assigned separately.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - item
              properties:
                item:
                  type: object
                  description: The file to attach the task to.
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                      description: The ID of the file
                      example: '11446498'
                    type:
                      type: string
                      description: '`file`'
                      example: file
                      enum:
                        - file
                action:
                  type: string
                  description: The action the task assignee will be prompted to do. Must be  * `review` defines an approval task that can be approved or rejected * `complete` defines a general task which can be completed
                  example: review
                  default: review
                  enum:
                    - review
                    - complete
                message:
                  type: string
                  default: ''
                  description: An optional message to include with the task.
                  example: Please review
                due_at:
                  type: string
                  format: date-time
                  description: Defines when the task is due. Defaults to `null` if not provided.
                  example: '2012-12-12T10:53:43-08:00'
                completion_rule:
                  type: string
                  description: Defines which assignees need to complete this task before the task is considered completed.  * `all_assignees` (default) requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed.
                  example: all_assignees
                  default: all_assignees
                  enum:
                    - all_assignees
                    - any_assignee
      responses:
        '201':
          description: Returns the newly created task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Returned if the request parameters or body is not valid.  * `bad_request` when the body does not contain a valid request. This may be because the `action` or `completion_rule` are not one of the allowed values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returns an error when the user does not have the permission to create a task on the file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error when the file could not be found or the user does not have access to the file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/tasks/{task_id}':
    get:
      operationId: get_tasks_id
      summary: Get task
      tags:
        - Tasks
      x-box-tag: tasks
      x-box-sanitized: true
      description: Retrieves information about a specific task.
      parameters:
        - name: task_id
          description: The ID of the task.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a task object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Returns an error when the task could not be found or the user does not have access to the file the task is assigned to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_tasks_id
      tags:
        - Tasks
      summary: Update task
      x-box-tag: tasks
      x-box-sanitized: true
      description: 'Updates a task. This can be used to update a task''s configuration, or to update its completion state.'
      parameters:
        - name: task_id
          description: The ID of the task.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: The action the task assignee will be prompted to do. Must be  * `review` defines an approval task that can be approved or rejected * `complete` defines a general task which can be completed
                  example: review
                  enum:
                    - review
                    - complete
                message:
                  type: string
                  description: The message included with the task.
                  example: Please review
                due_at:
                  type: string
                  format: date-time
                  description: When the task is due at.
                  example: '2012-12-12T10:53:43-08:00'
                completion_rule:
                  type: string
                  description: Defines which assignees need to complete this task before the task is considered completed.  * `all_assignees` (default) requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed.
                  example: all_assignees
                  enum:
                    - all_assignees
                    - any_assignee
      responses:
        '200':
          description: Returns the updated task object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Returned if the request parameters or body is not valid.  * `bad_request` when the body does not contain a valid request. This may be because the `action` or `completion_rule` are not one of the allowed values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returns an error when the user does not have the permission to update a task on the file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error when the file could not be found or the user does not have access to the file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_tasks_id
      tags:
        - Tasks
      summary: Remove task
      x-box-tag: tasks
      x-box-sanitized: true
      description: Removes a task from a file.
      parameters:
        - name: task_id
          description: The ID of the task.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the task was successfully deleted.
        '404':
          description: Returns an error when the task could not be found or the user does not have access to the file the task is assigned to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/tasks/{task_id}/assignments':
    get:
      operationId: get_tasks_id_assignments
      summary: List task assignments
      tags:
        - Task assignments
      x-box-tag: task_assignments
      x-box-sanitized: true
      description: Lists all of the assignments for a given task.
      parameters:
        - name: task_id
          description: The ID of the task.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a collection of task assignment defining what task on a file has been assigned to which users and by who.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAssignments'
        '404':
          description: Returns an error when the task could not be found or the user does not have access to the file the task is assigned to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '500':
          description: Returns an error if the task assignment ID was omitted in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /task_assignments:
    post:
      operationId: post_task_assignments
      summary: Assign task
      tags:
        - Task assignments
      x-box-tag: task_assignments
      x-box-sanitized: true
      description: Assigns a task to a user.  A task can be assigned to more than one user by creating multiple assignments.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - task
                - assign_to
              properties:
                task:
                  type: object
                  description: The task to assign to a user.
                  required:
                    - id
                    - type
                  properties:
                    id:
                      type: string
                      description: The ID of the task
                      example: '11446498'
                    type:
                      type: string
                      description: The type of the item to assign.
                      example: task
                      enum:
                        - task
                assign_to:
                  type: object
                  description: The user to assign the task to.
                  properties:
                    id:
                      type: string
                      description: The ID of the user to assign to the task.  To specify a user by their email address use the `login` parameter.
                      example: '3242343'
                    login:
                      type: string
                      description: The email address of the user to assign to the task. To specify a user by their user ID please use the `id` parameter.
                      example: john@example.com
      responses:
        '201':
          description: Returns a new task assignment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAssignment'
        '403':
          description: Returns an error if a change to a completed task is attempted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error when the task could not be found or the user does not have access to the file the task is assigned to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '500':
          description: 'Returns an error if any of the IDs for this request were not valid, or if the targeted user does not have access to the file.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/task_assignments/{task_assignment_id}':
    get:
      operationId: get_task_assignments_id
      summary: Get task assignment
      tags:
        - Task assignments
      x-box-tag: task_assignments
      x-box-sanitized: true
      description: Retrieves information about a task assignment.
      parameters:
        - name: task_assignment_id
          description: The ID of the task assignment.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Returns a task assignment, specifying who the task has been assigned to and by whom.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAssignment'
        '404':
          description: Returns an error when the task assignment could not be found or the user does not have access to the file the task is assigned to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_task_assignments_id
      summary: Update task assignment
      tags:
        - Task assignments
      x-box-tag: task_assignments
      x-box-sanitized: true
      description: Updates a task assignment. This endpoint can be used to update the state of a task assigned to a user.
      parameters:
        - name: task_assignment_id
          description: The ID of the task assignment.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: An optional message by the assignee that can be added to the task.
                  example: Looks good to me
                resolution_state:
                  type: string
                  description: 'The state of the task assigned to the user.  * For a task with an `action` value of `complete` this can be `incomplete` or `completed`. * For a task with an `action` of `review` this can be `incomplete`, `approved`, or `rejected`.'
                  example: completed
                  enum:
                    - completed
                    - incomplete
                    - approved
                    - rejected
      responses:
        '200':
          description: Returns the updated task assignment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAssignment'
        '400':
          description: Returns an error if a resolution state is incompatible with the action type of the task.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error when the task assignment could not be found or the user does not have access to the file the task is assigned to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_task_assignments_id
      summary: Unassign task
      tags:
        - Task assignments
      x-box-tag: task_assignments
      x-box-sanitized: true
      description: Deletes a specific task assignment.
      parameters:
        - name: task_assignment_id
          description: The ID of the task assignment.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the task assignment was successfully deleted.
        '404':
          description: Returns an error if the task assignment for the given ID does not exist or is inaccessible to your account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /shared_items:
    get:
      operationId: get_shared_items
      summary: Find file for shared link
      tags:
        - Shared links (Files)
      x-box-tag: shared_links_files
      x-box-enable-explorer: true
      description: 'Return the file represented by a shared link.  A shared file can be represented by a shared link, which can originate within the current enterprise or within another.  This endpoint allows an application to retrieve information about a shared file when only given a shared link.'
      parameters:
        - name: if-none-match
          description: Ensures an item is only returned if it has changed.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `304 Not Modified` if the item has not changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: boxapi
          description: 'A header containing the shared link and optional password for the shared link.  The format for this header is as follows.  `shared_link=[link]&shared_link_password=[password]`'
          example: 'shared_link=[link]&shared_link_password=[password]'
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a full file resource if the shared link is valid and the user has access to it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '304':
          description: Returns an empty response when the `If-None-Match` header matches the current `etag` value of the folder. This indicates that the folder has not changed since it was last requested.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}#get_shared_link':
    get:
      operationId: get_files_id#get_shared_link
      summary: Get shared link for file
      tags:
        - Shared links (Files)
      x-box-tag: shared_links_files
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: Gets the information for a shared link on a file.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: Explicitly request the `shared_link` fields to be returned for this item.
          example: shared_link
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the base representation of a file with the additional shared link information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                default:
                  value:
                    id: '12345'
                    type: file
                    etag: '1'
                    shared_link:
                      url: 'https://app.box.com/s/kwio6b4ovt1264rnfbyqo1'
                      download_url: 'https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf'
                      vanity_url: null
                      vanity_name: null
                      effective_access: open
                      effective_permission: can_download
                      is_password_enabled: false
                      unshared_at: '2020-09-21T10:34:41-07:00'
                      download_count: 0
                      preview_count: 0
                      access: open
                      permissions:
                        can_preview: true
                        can_download: true
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file is not found, or the user does not have access to the file.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}#add_shared_link':
    put:
      operationId: put_files_id#add_shared_link
      summary: Add shared link to file
      tags:
        - Shared links (Files)
      x-box-tag: shared_links_files
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: Adds a shared link to a file.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: Explicitly request the `shared_link` fields to be returned for this item.
          example: shared_link
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shared_link:
                  description: 'The settings for the shared link to create on the file.  Use an empty object (`{}`) to use the default settings for shared links.'
                  type: object
                  properties:
                    access:
                      type: string
                      description: 'The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the file (`collaborators`).  If not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ "shared_link": {} }`.  The `company` access level is only available to paid accounts.'
                      enum:
                        - open
                        - company
                        - collaborators
                      example: open
                    password:
                      type: string
                      description: The password required to access the shared link. Set the password to `null` to remove it.  A password can only be set when `access` is set to `open`.
                      example: do-not-use-this-password
                    vanity_name:
                      type: string
                      description: 'Defines a custom vanity name to use in the shared link URL, for example `https://app.box.com/v/my-shared-link`.  Custom URLs should not be used when sharing sensitive content as vanity URLs are a lot easier to guess than regular shared links.'
                      example: my-shared-link
                    unshared_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: The timestamp at which this shared link will expire. This field can only be set by users with paid accounts. The value must be greater than the current date and time.
                    permissions:
                      type: object
                      description: The permissions on shared link.
                      properties:
                        can_download:
                          type: boolean
                          example: true
                          description: If the shared link allows for downloading of files. This can only be set when `access` is set to `open` or `company`.
      responses:
        '200':
          description: Returns the base representation of a file with a new shared link attached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                default:
                  value:
                    id: '12345'
                    type: file
                    etag: '1'
                    shared_link:
                      url: 'https://app.box.com/s/kwio6b4ovt1264rnfbyqo1'
                      download_url: 'https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf'
                      vanity_url: null
                      vanity_name: null
                      effective_access: open
                      effective_permission: can_download
                      is_password_enabled: false
                      unshared_at: '2020-09-21T10:34:41-07:00'
                      download_count: 0
                      preview_count: 0
                      access: open
                      permissions:
                        can_preview: true
                        can_download: true
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned if the user does not have all the permissions to complete the update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file is not found, or the user does not have access to the file.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the file. This indicates that the file has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}#update_shared_link':
    put:
      operationId: put_files_id#update_shared_link
      summary: Update shared link on file
      tags:
        - Shared links (Files)
      x-box-tag: shared_links_files
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: Updates a shared link on a file.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: Explicitly request the `shared_link` fields to be returned for this item.
          example: shared_link
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shared_link:
                  description: The settings for the shared link to update.
                  type: object
                  properties:
                    access:
                      type: string
                      description: 'The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).  If not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ "shared_link": {} }`.  The `company` access level is only available to paid accounts.'
                      enum:
                        - open
                        - company
                        - collaborators
                      example: open
                    password:
                      type: string
                      description: The password required to access the shared link. Set the password to `null` to remove it.  A password can only be set when `access` is set to `open`.
                      example: do-not-use-this-password
                    vanity_name:
                      type: string
                      description: 'Defines a custom vanity name to use in the shared link URL, for example `https://app.box.com/v/my-shared-link`.  Custom URLs should not be used when sharing sensitive content as vanity URLs are a lot easier to guess than regular shared links.'
                      example: my-shared-link
                    unshared_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: The timestamp at which this shared link will expire. This field can only be set by users with paid accounts. The value must be greater than the current date and time.
                    permissions:
                      type: object
                      description: The permissions on shared link.
                      properties:
                        can_download:
                          type: boolean
                          example: true
                          description: If the shared link allows for downloading of files. This can only be set when `access` is set to `open` or `company`.
      responses:
        '200':
          description: 'Returns a basic representation of the file, with the updated shared link attached.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                default:
                  value:
                    id: '12345'
                    type: file
                    etag: '1'
                    shared_link:
                      url: 'https://app.box.com/s/kwio6b4ovt1264rnfbyqo1'
                      download_url: 'https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf'
                      vanity_url: null
                      vanity_name: null
                      effective_access: open
                      effective_permission: can_download
                      is_password_enabled: false
                      unshared_at: '2020-09-21T10:34:41-07:00'
                      download_count: 0
                      preview_count: 0
                      access: open
                      permissions:
                        can_preview: true
                        can_download: true
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned if the user does not have all the permissions to complete the update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file is not found, or the user does not have access to the file.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the file. This indicates that the file has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/files/{file_id}#remove_shared_link':
    put:
      operationId: put_files_id#remove_shared_link
      summary: Remove shared link from file
      tags:
        - Shared links (Files)
      x-box-tag: shared_links_files
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: Removes a shared link from a file.
      parameters:
        - name: file_id
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: Explicitly request the `shared_link` fields to be returned for this item.
          example: shared_link
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shared_link:
                  description: 'By setting this value to `null`, the shared link is removed from the file.'
                  type: object
                  example: null
                  nullable: true
      responses:
        '200':
          description: 'Returns a basic representation of a file, with the shared link removed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
              examples:
                default:
                  value:
                    id: '12345'
                    type: file
                    etag: '1'
                    shared_link: null
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned if the user does not have all the permissions to complete the update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the file is not found, or the user does not have access to the file.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `file_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the file. This indicates that the file has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /shared_items#folders:
    get:
      operationId: get_shared_items#folders
      summary: Find folder for shared link
      tags:
        - Shared links (Folders)
      x-box-tag: shared_links_folders
      x-box-enable-explorer: true
      description: 'Return the folder represented by a shared link.  A shared folder can be represented by a shared link, which can originate within the current enterprise or within another.  This endpoint allows an application to retrieve information about a shared folder when only given a shared link.'
      parameters:
        - name: if-none-match
          description: Ensures an item is only returned if it has changed.  Pass in the item's last observed `etag` value into this header and the endpoint will fail with a `304 Not Modified` if the item has not changed since.
          in: header
          required: false
          example: '1'
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: boxapi
          description: 'A header containing the shared link and optional password for the shared link.  The format for this header is as follows.  `shared_link=[link]&shared_link_password=[password]`'
          example: 'shared_link=[link]&shared_link_password=[password]'
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a full folder resource if the shared link is valid and the user has access to it.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '304':
          description: Returns an empty response when the `If-None-Match` header matches the current `etag` value of the folder. This indicates that the folder has not changed since it was last requested.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}#get_shared_link':
    get:
      operationId: get_folders_id#get_shared_link
      summary: Get shared link for folder
      tags:
        - Shared links (Folders)
      x-box-tag: shared_links_folders
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: Gets the information for a shared link on a folder.
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: Explicitly request the `shared_link` fields to be returned for this item.
          example: shared_link
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the base representation of a folder with the additional shared link information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
              examples:
                default:
                  value:
                    id: '12345'
                    type: folder
                    etag: '1'
                    shared_link:
                      url: 'https://app.box.com/s/kwio6b4ovt1264rnfbyqo1'
                      download_url: 'https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf'
                      vanity_url: null
                      vanity_name: null
                      effective_access: open
                      effective_permission: can_download
                      is_password_enabled: false
                      unshared_at: '2020-09-21T10:34:41-07:00'
                      download_count: 0
                      preview_count: 0
                      access: open
                      permissions:
                        can_preview: true
                        can_download: true
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the folder is not found, or the user does not have access to the folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `folder_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}#add_shared_link':
    put:
      operationId: put_folders_id#add_shared_link
      summary: Add shared link to folder
      tags:
        - Shared links (Folders)
      x-box-tag: shared_links_folders
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: Adds a shared link to a folder.
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: Explicitly request the `shared_link` fields to be returned for this item.
          example: shared_link
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shared_link:
                  description: 'The settings for the shared link to create on the folder.  Use an empty object (`{}`) to use the default settings for shared links.'
                  type: object
                  properties:
                    access:
                      type: string
                      description: 'The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).  If not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ "shared_link": {} }`.  The `company` access level is only available to paid accounts.'
                      enum:
                        - open
                        - company
                        - collaborators
                      example: open
                    password:
                      type: string
                      description: The password required to access the shared link. Set the password to `null` to remove it.  A password can only be set when `access` is set to `open`.
                      example: do-not-use-this-password
                    unshared_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: The timestamp at which this shared link will expire. This field can only be set by users with paid accounts. The value must be greater than the current date and time.
                    permissions:
                      type: object
                      description: The permissions on shared link.
                      properties:
                        can_download:
                          type: boolean
                          example: true
                          description: If the shared link allows for downloading of folders. This can only be set when `access` is set to `open` or `company`.
      responses:
        '200':
          description: Returns the base representation of a folder with a new shared link attached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
              examples:
                default:
                  value:
                    id: '12345'
                    type: folder
                    etag: '1'
                    shared_link:
                      url: 'https://app.box.com/s/kwio6b4ovt1264rnfbyqo1'
                      download_url: 'https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf'
                      vanity_url: null
                      vanity_name: null
                      effective_access: open
                      effective_permission: can_download
                      is_password_enabled: false
                      unshared_at: '2020-09-21T10:34:41-07:00'
                      download_count: 0
                      preview_count: 0
                      access: open
                      permissions:
                        can_preview: true
                        can_download: true
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned if the user does not have all the permissions to complete the update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the folder is not found, or the user does not have access to the folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `folder_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the folder. This indicates that the folder has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}#update_shared_link':
    put:
      operationId: put_folders_id#update_shared_link
      summary: Update shared link on folder
      tags:
        - Shared links (Folders)
      x-box-tag: shared_links_folders
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: Updates a shared link on a folder.
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: Explicitly request the `shared_link` fields to be returned for this item.
          example: shared_link
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shared_link:
                  description: The settings for the shared link to update.
                  type: object
                  properties:
                    access:
                      type: string
                      description: 'The level of access for the shared link. This can be restricted to anyone with the link (`open`), only people within the company (`company`) and only those who have been invited to the folder (`collaborators`).  If not set, this field defaults to the access level specified by the enterprise admin. To create a shared link with this default setting pass the `shared_link` object with no `access` field, for example `{ "shared_link": {} }`.  The `company` access level is only available to paid accounts.'
                      enum:
                        - open
                        - company
                        - collaborators
                      example: open
                    password:
                      type: string
                      description: The password required to access the shared link. Set the password to `null` to remove it.  A password can only be set when `access` is set to `open`.
                      example: do-not-use-this-password
                    unshared_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: The timestamp at which this shared link will expire. This field can only be set by users with paid accounts. The value must be greater than the current date and time.
                    permissions:
                      type: object
                      description: The permissions on shared link.
                      properties:
                        can_download:
                          type: boolean
                          example: true
                          description: If the shared link allows for downloading of folders. This can only be set when `access` is set to `open` or `company`.
      responses:
        '200':
          description: 'Returns a basic representation of the folder, with the updated shared link attached.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
              examples:
                default:
                  value:
                    id: '12345'
                    type: folder
                    etag: '1'
                    shared_link:
                      url: 'https://app.box.com/s/kwio6b4ovt1264rnfbyqo1'
                      download_url: 'https://app.box.com/shared/static/kwio6b4ovt1264rnfbyqo1.pdf'
                      vanity_url: null
                      vanity_name: null
                      effective_access: open
                      effective_permission: can_download
                      is_password_enabled: false
                      unshared_at: '2020-09-21T10:34:41-07:00'
                      download_count: 0
                      preview_count: 0
                      access: open
                      permissions:
                        can_preview: true
                        can_download: true
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned if the user does not have all the permissions to complete the update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the folder is not found, or the user does not have access to the folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `folder_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the folder. This indicates that the folder has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/folders/{folder_id}#remove_shared_link':
    put:
      operationId: put_folders_id#remove_shared_link
      summary: Remove shared link from folder
      tags:
        - Shared links (Folders)
      x-box-tag: shared_links_folders
      x-box-enable-explorer: true
      x-box-sanitized: true
      description: Removes a shared link from a folder.
      parameters:
        - name: folder_id
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting this folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folder/123` the `folder_id` is `123`.  The root folder of a Box account is always represented by the ID `0`.'
          example: '12345'
          in: path
          required: true
          schema:
            type: string
            nullable: false
        - name: fields
          description: Explicitly request the `shared_link` fields to be returned for this item.
          example: shared_link
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shared_link:
                  description: 'By setting this value to `null`, the shared link is removed from the folder.'
                  type: object
                  example: null
                  nullable: true
      responses:
        '200':
          description: 'Returns a basic representation of a folder, with the shared link removed.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
              examples:
                default:
                  value:
                    id: '12345'
                    type: folder
                    etag: '1'
                    shared_link: null
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned if the user does not have all the permissions to complete the update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returned if the folder is not found, or the user does not have access to the folder.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '405':
          description: Returned if the `folder_id` is not in a recognized format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '412':
          description: Returns an error when the `If-Match` header does not match the current `etag` value of the folder. This indicates that the folder has changed since it was last requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /web_links:
    post:
      operationId: post_web_links
      summary: Create web link
      tags:
        - Web links
      x-box-tag: web_links
      description: Creates a web link object within a folder.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parent
                - url
              properties:
                url:
                  type: string
                  example: 'https://box.com'
                  description: 'The URL that this web link links to. Must start with `"http://"` or `"https://"`.'
                parent:
                  type: object
                  description: The parent folder to create the web link within.
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: The ID of parent folder
                      example: '0'
                name:
                  type: string
                  example: Box Website
                  description: Name of the web link. Defaults to the URL if not set.
                description:
                  type: string
                  example: Cloud Content Management
                  description: Description of the web link.
      responses:
        '200':
          description: Returns the newly created web link object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebLink'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/web_links/{web_link_id}':
    get:
      operationId: get_web_links_id
      summary: Get web link
      tags:
        - Web links
      x-box-tag: web_links
      description: Retrieve information about a web link.
      parameters:
        - name: web_link_id
          description: The ID of the web link.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: boxapi
          description: 'The URL, and optional password, for the shared link of this item.  This header can be used to access items that have not been explicitly shared with a user.  Use the format `shared_link=[link]` or if a password is required then use `shared_link=[link]&shared_link_password=[password]`.  This header can be used on the file or folder shared, as well as on any files or folders nested within the item.'
          example: 'shared_link=[link]&shared_link_password=[password]'
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the web link object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebLink'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_web_links_id
      summary: Restore web link
      tags:
        - Trashed web links
      x-box-tag: trashed_web_links
      description: Restores a web link that has been moved to the trash.  An optional new parent ID can be provided to restore the  web link to in case the original folder has been deleted.
      parameters:
        - name: web_link_id
          description: The ID of the web link.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: An optional new name for the web link.
                  example: Restored.docx
                  type: string
                parent:
                  allOf:
                    - type: object
                      description: The parent for this item
                      properties:
                        id:
                          type: string
                          description: The ID of parent item
                          example: '123'
                    - description: Specifies an optional ID of a folder to restore the web link to when the original folder no longer exists.  Please be aware that this ID will only be used if the original folder no longer exists. Use this ID to provide a fallback location to restore the web link to if the original location has been deleted.
      responses:
        '201':
          description: Returns a web link object when it has been restored.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebLink'
        '403':
          description: 'Returns an error if the user does not have access to the folder the web link is being restored to, or the user does not have permission to restore web link from the trash.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error if the web link is not in the trash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: Returns an error if there is an web link with the same name in the folder the web link is being restored to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_web_links_id
      summary: Update web link
      tags:
        - Web links
      x-box-tag: web_links
      description: Updates a web link object.
      parameters:
        - name: web_link_id
          description: The ID of the web link.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: 'https://box.com'
                  description: 'The new URL that the web link links to. Must start with `"http://"` or `"https://"`.'
                parent:
                  allOf:
                    - type: object
                      description: The parent for this item
                      properties:
                        id:
                          type: string
                          description: The ID of parent item
                          example: '123'
                    - description: The new parent folder to put the web link in. Use this to move the web link to a different folder.
                name:
                  type: string
                  example: Box Website
                  description: A new name for the web link. Defaults to the URL if not set.
                description:
                  type: string
                  example: Cloud Content Management
                  description: A new description of the web link.
      responses:
        '200':
          description: Returns the updated web link object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebLink'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_web_links_id
      summary: Remove web link
      tags:
        - Web links
      x-box-tag: web_links
      description: Deletes a web link.
      parameters:
        - name: web_link_id
          description: The ID of the web link.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: An empty response will be returned when the web link was successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/web_links/{web_link_id}/trash':
    get:
      operationId: get_web_links_id_trash
      summary: Get trashed web link
      tags:
        - Trashed web links
      x-box-tag: trashed_web_links
      description: Retrieves a web link that has been moved to the trash.
      parameters:
        - name: web_link_id
          description: The ID of the web link.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 'Returns the web link that was trashed, including information about when the it was moved to the trash.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        '404':
          description: Returns an error if the web link is not in the trash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_web_links_id_trash
      summary: Permanently remove web link
      tags:
        - Trashed web links
      x-box-tag: trashed_web_links
      description: Permanently deletes a web link that is in the trash. This action cannot be undone.
      parameters:
        - name: web_link_id
          description: The ID of the web link.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the web link was permanently deleted.
        '404':
          description: Returns an error if the web link is not in the trash.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /users:
    get:
      operationId: get_users
      x-box-tag: users
      summary: List enterprise users
      tags:
        - Users
      description: 'Returns a list of all users for the Enterprise along with their `user_id`, `public_name`, and `login`.  The application and the authenticated user need to have the permission to look up users in the entire enterprise.'
      parameters:
        - name: filter_term
          description: 'Limits the results to only users who''s `name` or `login` start with the search term.  For externally managed users, the search term needs to completely match the in order to find the user, and it will only return one user at a time.'
          in: query
          required: false
          example: john
          schema:
            type: string
        - name: user_type
          description: 'Limits the results to the kind of user specified.  * `all` returns every kind of user for whom the   `login` or `name` partially matches the   `filter_term`. It will only return an external user   if the login matches the `filter_term` completely,   and in that case it will only return that user. * `managed` returns all managed and app users for whom   the `login` or `name` partially matches the   `filter_term`. * `external` returns all external users for whom the   `login` matches the `filter_term` exactly.'
          in: query
          required: false
          example: managed
          schema:
            type: string
            enum:
              - all
              - managed
              - external
        - name: external_app_user_id
          in: query
          required: false
          schema:
            type: string
          example: my-user-1234
          description: 'Limits the results to app users with the given `external_app_user_id` value.  When creating an app user, an `external_app_user_id` value can be set. This value can then be used in this endpoint to find any users that match that `external_app_user_id` value.'
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: usemarker
          description: 'Specifies whether to use marker-based pagination instead of offset-based pagination. Only one pagination method can be used at a time.  By setting this value to true, the API will return a `marker` field that can be passed as a parameter to this endpoint to get the next page of the response.'
          in: query
          required: false
          example: true
          schema:
            type: boolean
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
      responses:
        '200':
          description: Returns all of the users in the enterprise.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_users
      summary: Create user
      tags:
        - Users
      x-box-tag: users
      description: Creates a new managed user in an enterprise. This endpoint is only available to users and applications with the right admin permissions.
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: The name of the user
                  example: Aaron Levie
                  maxLength: 50
                login:
                  type: string
                  description: 'The email address the user uses to log in  Required, unless `is_platform_access_only` is set to `true`.'
                  example: boss@box.com
                is_platform_access_only:
                  type: boolean
                  example: true
                  description: Specifies that the user is an app user.
                role:
                  type: string
                  enum:
                    - coadmin
                    - user
                  description: The user’s enterprise role
                  example: user
                language:
                  type: string
                  description: 'The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format.'
                  example: en
                is_sync_enabled:
                  type: boolean
                  description: Whether the user can use Box Sync
                  example: true
                job_title:
                  type: string
                  description: The user’s job title
                  maxLength: 100
                  example: CEO
                phone:
                  type: string
                  description: The user’s phone number
                  maxLength: 100
                  example: '6509241374'
                address:
                  type: string
                  description: The user’s address
                  maxLength: 255
                  example: '900 Jefferson Ave, Redwood City, CA 94063'
                space_amount:
                  type: integer
                  format: int64
                  description: The user’s total available space in bytes. Set this to `-1` to indicate unlimited storage.
                  example: 11345156112
                tracking_codes:
                  type: array
                  description: Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used.
                  example:
                    - 'code1: 12345'
                  items:
                    type: string
                can_see_managed_users:
                  type: boolean
                  example: true
                  description: Whether the user can see other enterprise users in their contact list
                timezone:
                  type: string
                  format: timezone
                  description: The user's timezone
                  example: Africa/Bujumbura
                is_external_collab_restricted:
                  type: boolean
                  example: true
                  description: Whether the user is allowed to collaborate with users outside their enterprise
                is_exempt_from_device_limits:
                  type: boolean
                  example: true
                  description: Whether to exempt the user from enterprise device limits
                is_exempt_from_login_verification:
                  type: boolean
                  example: true
                  description: Whether the user must use two-factor authentication
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                    - cannot_delete_edit
                    - cannot_delete_edit_upload
                  description: The user's account status
                  example: active
                external_app_user_id:
                  type: string
                  example: my-user-1234
                  description: 'An external identifier for an app user, which can be used to look up the user. This can be used to tie user IDs from external identity providers to Box users.'
      responses:
        '201':
          description: Returns a user object for the newly created user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /users/me:
    get:
      operationId: get_users_me
      x-box-tag: users
      summary: Get current user
      tags:
        - Users
      description: 'Retrieves information about the user who is currently authenticated.  In the case of a client-side authenticated OAuth 2.0 application this will be the user who authorized the app.  In the case of a JWT, server-side authenticated application this will be the service account that belongs to the application by default.  Use the `As-User` header to change who this API call is made on behalf of.'
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns a single user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/users/{user_id}':
    get:
      operationId: get_users_id
      x-box-tag: users
      summary: Get user
      tags:
        - Users
      description: 'Retrieves information about a user in the enterprise.  The application and the authenticated user need to have the permission to look up users in the entire enterprise.  This endpoint also returns a limited set of information for external users who are collaborated on content owned by the enterprise for authenticated users with the right scopes. In this case, disallowed fields will return null instead.'
      parameters:
        - name: user_id
          description: The ID of the user.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 'Returns a single user object.  Not all available fields are returned by default. Use the [fields](#param-fields) query parameter to explicitly request any specific fields using the [fields](#get-users-id--request--fields) parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_users_id
      summary: Update user
      tags:
        - Users
      x-box-tag: users
      x-box-enable-explorer: true
      description: Updates a managed user in an enterprise. This endpoint is only available to users and applications with the right admin permissions.
      parameters:
        - name: user_id
          description: The ID of the user.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                enterprise:
                  type: string
                  nullable: true
                  example: null
                  description: Set this to `null` to roll the user out of the enterprise and make them a free user
                notify:
                  type: boolean
                  example: true
                  description: Whether the user should receive an email when they are rolled out of an enterprise
                name:
                  type: string
                  description: The name of the user
                  example: Aaron Levie
                  maxLength: 50
                login:
                  type: string
                  description: The email address the user uses to log in
                  example: boss@box.com
                role:
                  type: string
                  enum:
                    - coadmin
                    - user
                  description: The user’s enterprise role
                  example: user
                language:
                  type: string
                  description: 'The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format.'
                  example: en
                is_sync_enabled:
                  type: boolean
                  description: Whether the user can use Box Sync
                  example: true
                job_title:
                  type: string
                  description: The user’s job title
                  maxLength: 100
                  example: CEO
                phone:
                  type: string
                  description: The user’s phone number
                  maxLength: 100
                  example: '6509241374'
                address:
                  type: string
                  description: The user’s address
                  maxLength: 255
                  example: '900 Jefferson Ave, Redwood City, CA 94063'
                tracking_codes:
                  type: array
                  description: Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used.
                  example:
                    - 'code1: 12345'
                  items:
                    type: string
                can_see_managed_users:
                  type: boolean
                  example: true
                  description: Whether the user can see other enterprise users in their contact list
                timezone:
                  type: string
                  format: timezone
                  description: The user's timezone
                  example: Africa/Bujumbura
                is_external_collab_restricted:
                  type: boolean
                  example: true
                  description: Whether the user is allowed to collaborate with users outside their enterprise
                is_exempt_from_device_limits:
                  type: boolean
                  example: true
                  description: Whether to exempt the user from enterprise device limits
                is_exempt_from_login_verification:
                  type: boolean
                  example: true
                  description: Whether the user must use two-factor authentication
                is_password_reset_required:
                  type: boolean
                  example: true
                  description: Whether the user is required to reset their password
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                    - cannot_delete_edit
                    - cannot_delete_edit_upload
                  description: The user's account status
                  example: active
                space_amount:
                  type: integer
                  format: int64
                  description: The user’s total available space in bytes. Set this to `-1` to indicate unlimited storage.
                  example: 11345156112
                notification_email:
                  type: object
                  nullable: true
                  description: 'An alternate notification email address to which email notifications are sent. When it''s confirmed, this will be the email address to which notifications are sent instead of to the primary email address.  Set this value to `null` to remove the notification email.'
                  properties:
                    email:
                      type: string
                      example: notifications@example.com
                      description: The email address to send the notifications to.
      responses:
        '200':
          description: Returns the updated user object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 'Returns an error if some of the parameters are missing or not valid.  * `invalid_parameter` when a parameter is formatted incorrectly,   for example when the `notification_email` has an incorrectly formatted   email address.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: 'Returns an error if the user is not allowed to make the changes.  * `access_denied_insufficient_permissions` when the user does not have   the right permissions, for example when updating the notification email   is turned off for the enterprise.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_users_id
      x-box-tag: users
      summary: Delete user
      tags:
        - Users
      description: 'Deletes a user. By default this will fail if the user still owns any content. Move their owned content first before proceeding, or use the `force` field to delete the user and their files.'
      parameters:
        - name: user_id
          description: The ID of the user.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: notify
          schema:
            type: boolean
          in: query
          example: true
          description: Whether the user will receive email notification of the deletion
        - name: force
          schema:
            type: boolean
          in: query
          example: true
          description: Whether the user should be deleted even if this user still own files
      responses:
        '204':
          content: {}
          description: Removes the user and returns an empty response.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/users/{user_id}/avatar':
    get:
      operationId: get_users_id_avatar
      x-box-tag: avatars
      summary: Get user avatar
      tags:
        - User avatars
      description: Retrieves an image of a the user's avatar.
      parameters:
        - name: user_id
          description: The ID of the user.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: When an avatar can be found for the user the image data will be returned in the body of the response.
          content:
            image/jpg:
              schema:
                type: string
                format: binary
                description: The avatar
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/users/{user_id}/folders/0':
    put:
      operationId: put_users_id_folders_0
      x-box-tag: transfer
      summary: Transfer owned folders
      tags:
        - Transfer folders
      description: 'Move all of the items (files, folders and workflows) owned by a user into another user''s account  Only the root folder (`0`) can be transferred.  Folders can only be moved across users by users with administrative permissions.  All existing shared links and folder-level collaborations are transferred during the operation. Please note that while collaborations at the individual file-level are transferred during the operation, the collaborations are deleted when the original user is deleted.  This call will be performed synchronously which might lead to a slow response when the source user has a large number of items in all of its folders.  If the destination path has a metadata cascade policy attached to any of the parent folders, a metadata cascade operation will be kicked off asynchronously.  There is currently no way to check for when this operation is finished.  The destination folder''s name will be in the format `{User}''s Files and Folders`, where `{User}` is the display name of the user.  To make this API call your application will need to have the "Read and write all files and folders stored in Box" scope enabled.  Please make sure the destination user has access to `Relay` or `Relay Lite`, and has access to the files and folders involved in the workflows being transferred.  Admins will receive an email when the operation is completed.'
      parameters:
        - name: user_id
          description: The ID of the user.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: notify
          description: Determines if users should receive email notification for the action performed.
          in: query
          required: false
          example: true
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - owned_by
              properties:
                owned_by:
                  type: object
                  description: The user who the folder will be transferred to
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      example: '1232234'
                      description: The ID of the user who the folder will be transferred to
      responses:
        '200':
          description: Returns the information for the newly created destination folder.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/users/{user_id}/email_aliases':
    get:
      operationId: get_users_id_email_aliases
      summary: List user's email aliases
      tags:
        - Email aliases
      x-box-tag: email_aliases
      description: Retrieves all email aliases for a user. The collection does not include the primary login for the user.
      parameters:
        - name: user_id
          description: The ID of the user.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a collection of email aliases.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAliases'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_users_id_email_aliases
      x-box-tag: email_aliases
      summary: Create email alias
      tags:
        - Email aliases
      description: Adds a new email alias to a user account..
      parameters:
        - name: user_id
          description: The ID of the user.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: alias@example.com
                  description: The email address to add to the account as an alias.
      responses:
        '201':
          description: Returns the newly created email alias object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAlias'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/users/{user_id}/email_aliases/{email_alias_id}':
    delete:
      operationId: delete_users_id_email_aliases_id
      x-box-tag: email_aliases
      summary: Remove email alias
      tags:
        - Email aliases
      description: Removes an email alias from a user.
      parameters:
        - name: user_id
          description: The ID of the user.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: email_alias_id
          description: The ID of the email alias.
          example: '23432'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Removes the alias and returns an empty response.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/users/{user_id}/memberships':
    get:
      operationId: get_users_id_memberships
      summary: List user's groups
      x-box-tag: memberships
      tags:
        - Group memberships
      description: Retrieves all the groups for a user. Only members of this group or users with admin-level permissions will be able to use this API.
      parameters:
        - name: user_id
          description: The ID of the user.
          example: '12345'
          in: path
          required: true
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        '200':
          description: 'Returns a collection of membership objects. If there are no memberships, an empty collection will be returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMemberships'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /invites:
    post:
      operationId: post_invites
      summary: Create user invite
      tags:
        - Invites
      x-box-tag: invites
      description: 'Invites an existing external user to join an enterprise.  The existing user can not be part of another enterprise and must already have a Box account. Once invited, the user will receive an email and are prompted to accept the invitation within the Box web application.  This method requires the "Manage An Enterprise" scope enabled for the application, which can be enabled within the developer console.'
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - enterprise
                - actionable_by
              properties:
                enterprise:
                  type: object
                  description: The enterprise to invite the user to
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      example: '1232234'
                      description: The ID of the enterprise
                actionable_by:
                  type: object
                  description: The user to invite
                  required:
                    - id
                  properties:
                    login:
                      type: string
                      example: john@example.com
                      description: The login of the invited user
      responses:
        '200':
          description: Returns a new invite object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/invites/{invite_id}':
    get:
      operationId: get_invites_id
      summary: Get user invite status
      tags:
        - Invites
      description: Returns the status of a user invite.
      x-box-tag: invites
      parameters:
        - name: invite_id
          description: The ID of an invite.
          example: '213723'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns an invite object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invite'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /groups:
    get:
      operationId: get_groups
      summary: List groups for enterprise
      x-box-tag: groups
      tags:
        - Groups
      description: Retrieves all of the groups for a given enterprise. The user must have admin permissions to inspect enterprise's groups.
      parameters:
        - name: filter_term
          description: Limits the results to only groups whose `name` starts with the search term.
          in: query
          required: false
          example: Engineering
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        '200':
          description: 'Returns a collection of group objects. If there are no groups, an empty collection will be returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_groups
      summary: Create group
      tags:
        - Groups
      x-box-tag: groups
      description: Creates a new group of users in an enterprise. Only users with admin permissions can create new groups.
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: Customer Support
                  description: The name of the new group to be created. This name must be unique within the enterprise.
                provenance:
                  type: string
                  description: 'Keeps track of which external source this group is coming, for example `Active Directory`, or `Okta`.  Setting this will also prevent Box admins from editing the group name and its members directly via the Box web application.  This is desirable for one-way syncing of groups.'
                  maxLength: 255
                  example: Active Directory
                external_sync_identifier:
                  type: string
                  description: An arbitrary identifier that can be used by external group sync tools to link this Box Group to an external group.  Example values of this field could be an **Active Directory Object ID** or a **Google Group ID**.  We recommend you use of this field in order to avoid issues when group names are updated in either Box or external systems.
                  example: 'AD:123456'
                description:
                  type: string
                  description: A human readable description of the group.
                  maxLength: 255
                  example: '"Customer Support Group - as imported from Active Directory"'
                invitability_level:
                  type: string
                  example: admins_only
                  description: 'Specifies who can invite the group to collaborate on folders.  When set to `admins_only` the enterprise admin, co-admins, and the group''s admin can invite the group.  When set to `admins_and_members` all the admins listed above and group members can invite the group.  When set to `all_managed_users` all managed users in the enterprise can invite the group.'
                  enum:
                    - admins_only
                    - admins_and_members
                    - all_managed_users
                member_viewability_level:
                  type: string
                  example: admins_only
                  description: 'Specifies who can see the members of the group.  * `admins_only` - the enterprise admin, co-admins, group''s   group admin * `admins_and_members` - all admins and group members * `all_managed_users` - all managed users in the   enterprise'
                  enum:
                    - admins_only
                    - admins_and_members
                    - all_managed_users
      responses:
        '201':
          description: Returns the new group object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '409':
          description: 'Returns an error a conflict is stopping the group from being created.  * `invalid_parameter`: Often returned if the group name is not unique in the enterprise.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/groups/{group_id}':
    get:
      operationId: get_groups_id
      summary: Get group
      tags:
        - Groups
      x-box-tag: groups
      description: Retrieves information about a group. Only members of this group or users with admin-level permissions will be able to use this API.
      parameters:
        - name: group_id
          description: The ID of the group.
          example: '57645'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns the group object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_groups_id
      summary: Update group
      tags:
        - Groups
      x-box-tag: groups
      description: Updates a specific group. Only admins of this group or users with admin-level permissions will be able to use this API.
      parameters:
        - name: group_id
          description: The ID of the group.
          example: '57645'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Customer Support
                  description: The name of the new group to be created. Must be unique within the enterprise.
                provenance:
                  type: string
                  description: 'Keeps track of which external source this group is coming, for example `Active Directory`, or `Okta`.  Setting this will also prevent Box admins from editing the group name and its members directly via the Box web application.  This is desirable for one-way syncing of groups.'
                  maxLength: 255
                  example: Active Directory
                external_sync_identifier:
                  type: string
                  description: An arbitrary identifier that can be used by external group sync tools to link this Box Group to an external group.  Example values of this field could be an **Active Directory Object ID** or a **Google Group ID**.  We recommend you use of this field in order to avoid issues when group names are updated in either Box or external systems.
                  example: 'AD:123456'
                description:
                  type: string
                  description: A human readable description of the group.
                  maxLength: 255
                  example: '"Customer Support Group - as imported from Active Directory"'
                invitability_level:
                  type: string
                  example: admins_only
                  description: 'Specifies who can invite the group to collaborate on folders.  When set to `admins_only` the enterprise admin, co-admins, and the group''s admin can invite the group.  When set to `admins_and_members` all the admins listed above and group members can invite the group.  When set to `all_managed_users` all managed users in the enterprise can invite the group.'
                  enum:
                    - admins_only
                    - admins_and_members
                    - all_managed_users
                member_viewability_level:
                  type: string
                  example: admins_only
                  description: 'Specifies who can see the members of the group.  * `admins_only` - the enterprise admin, co-admins, group''s   group admin * `admins_and_members` - all admins and group members * `all_managed_users` - all managed users in the   enterprise'
                  enum:
                    - admins_only
                    - admins_and_members
                    - all_managed_users
      responses:
        '200':
          description: Returns the updated group object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        '409':
          description: 'Returns an error a conflict is stopping the group from being created.  * `invalid_parameter`: Often returned if the group name is not unique in the enterprise.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_groups_id
      summary: Remove group
      tags:
        - Groups
      x-box-tag: groups
      description: Permanently deletes a group. Only users with admin-level permissions will be able to use this API.
      parameters:
        - name: group_id
          description: The ID of the group.
          example: '57645'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: A blank response is returned if the group was successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/groups/{group_id}/memberships':
    get:
      operationId: get_groups_id_memberships
      summary: List members of group
      x-box-tag: memberships
      tags:
        - Group memberships
      description: Retrieves all the members for a group. Only members of this group or users with admin-level permissions will be able to use this API.
      parameters:
        - name: group_id
          description: The ID of the group.
          example: '57645'
          in: path
          required: true
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        '200':
          description: 'Returns a collection of membership objects. If there are no memberships, an empty collection will be returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMemberships'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/groups/{group_id}/collaborations':
    get:
      operationId: get_groups_id_collaborations
      summary: List group collaborations
      x-box-tag: list_collaborations
      tags:
        - Collaborations (List)
      description: Retrieves all the collaborations for a group. The user must have admin permissions to inspect enterprise's groups.  Each collaboration object has details on which files or folders the group has access to and with what role.
      parameters:
        - name: group_id
          description: The ID of the group.
          example: '57645'
          in: path
          required: true
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        '200':
          description: 'Returns a collection of collaboration objects. If there are no collaborations, an empty collection will be returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collaborations'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /group_memberships:
    post:
      operationId: post_group_memberships
      summary: Add user to group
      tags:
        - Group memberships
      x-box-tag: memberships
      description: Creates a group membership. Only users with admin-level permissions will be able to use this API.
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user
                - group
              properties:
                user:
                  type: object
                  description: The user to add to the group.
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: The ID of the user to add to the group
                      example: '1434325'
                group:
                  type: object
                  description: The group to add the user to.
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: The ID of the group to add the user to
                      example: '4545523'
                role:
                  type: string
                  example: member
                  description: The role of the user in the group.
                  enum:
                    - member
                    - admin
                configurable_permissions:
                  type: object
                  example:
                    can_run_reports: true
                  description: 'Custom configuration for the permissions an admin if a group will receive. This option has no effect on members with a role of `member`.  Setting these permissions overwrites the default access levels of an admin.  Specifying a value of "null" for this object will disable all configurable permissions. Specifying permissions will set them accordingly, omitted permissions will be enabled by default.'
                  additionalProperties:
                    type: boolean
                    description: A key value pair of custom permissions.
                    example: true
                    x-box-example-key: can_run_reports
      responses:
        '201':
          description: Returns a new group membership object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembership'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/group_memberships/{group_membership_id}':
    get:
      operationId: get_group_memberships_id
      summary: Get group membership
      tags:
        - Group memberships
      x-box-tag: memberships
      description: Retrieves a specific group membership. Only admins of this group or users with admin-level permissions will be able to use this API.
      parameters:
        - name: group_membership_id
          description: The ID of the group membership.
          example: '434534'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns the group membership object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembership'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_group_memberships_id
      summary: Update group membership
      tags:
        - Group memberships
      x-box-tag: memberships
      description: Updates a user's group membership. Only admins of this group or users with admin-level permissions will be able to use this API.
      parameters:
        - name: group_membership_id
          description: The ID of the group membership.
          example: '434534'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  example: member
                  description: The role of the user in the group.
                  enum:
                    - member
                    - admin
                configurable_permissions:
                  type: object
                  example:
                    can_run_reports: true
                  description: 'Custom configuration for the permissions an admin if a group will receive. This option has no effect on members with a role of `member`.  Setting these permissions overwrites the default access levels of an admin.  Specifying a value of "null" for this object will disable all configurable permissions. Specifying permissions will set them accordingly, omitted permissions will be enabled by default.'
                  additionalProperties:
                    type: boolean
                    description: A key value pair of custom permissions.
                    example: true
                    x-box-example-key: can_run_reports
      responses:
        '200':
          description: Returns a new group membership object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMembership'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_group_memberships_id
      summary: Remove user from group
      tags:
        - Group memberships
      x-box-tag: memberships
      description: Deletes a specific group membership. Only admins of this group or users with admin-level permissions will be able to use this API.
      parameters:
        - name: group_membership_id
          description: The ID of the group membership.
          example: '434534'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: A blank response is returned if the membership was successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /webhooks:
    get:
      operationId: get_webhooks
      summary: List all webhooks
      tags:
        - Webhooks
      x-box-tag: webhooks
      description: 'Returns all defined webhooks for the requesting application.  This API only returns webhooks that are applied to files or folders that are owned by the authenticated user. This means that an admin can not see webhooks created by a service account unless the admin has access to those folders, and vice versa.'
      parameters:
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns a list of webhooks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
        '403':
          description: Returns an error if the application does not have the permission to manage webhooks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_webhooks
      summary: Create webhook
      tags:
        - Webhooks
      x-box-tag: webhooks
      description: Creates a webhook.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - target
                - triggers
                - address
              properties:
                target:
                  type: object
                  description: The item that will trigger the webhook
                  properties:
                    id:
                      description: The ID of the item to trigger a webhook
                      type: string
                      example: '1231232'
                    type:
                      description: The type of item to trigger a webhook
                      type: string
                      example: file
                      enum:
                        - file
                        - folder
                address:
                  type: string
                  example: 'https://example.com/webhooks'
                  description: The URL that is notified by this webhook
                triggers:
                  type: array
                  example:
                    - FILE.UPLOADED
                  description: An array of event names that this webhook is to be triggered for
                  items:
                    title: Webhook Trigger
                    example: FILE.UPLOADED
                    type: string
                    description: The event name that triggered this webhook
                    enum:
                      - FILE.UPLOADED
                      - FILE.PREVIEWED
                      - FILE.DOWNLOADED
                      - FILE.TRASHED
                      - FILE.DELETED
                      - FILE.RESTORED
                      - FILE.COPIED
                      - FILE.MOVED
                      - FILE.LOCKED
                      - FILE.UNLOCKED
                      - FILE.RENAMED
                      - COMMENT.CREATED
                      - COMMENT.UPDATED
                      - COMMENT.DELETED
                      - TASK_ASSIGNMENT.CREATED
                      - TASK_ASSIGNMENT.UPDATED
                      - METADATA_INSTANCE.CREATED
                      - METADATA_INSTANCE.UPDATED
                      - METADATA_INSTANCE.DELETED
                      - FOLDER.CREATED
                      - FOLDER.RENAMED
                      - FOLDER.DOWNLOADED
                      - FOLDER.RESTORED
                      - FOLDER.DELETED
                      - FOLDER.COPIED
                      - FOLDER.MOVED
                      - FOLDER.TRASHED
                      - WEBHOOK.DELETED
                      - COLLABORATION.CREATED
                      - COLLABORATION.ACCEPTED
                      - COLLABORATION.REJECTED
                      - COLLABORATION.REMOVED
                      - COLLABORATION.UPDATED
                      - SHARED_LINK.DELETED
                      - SHARED_LINK.CREATED
                      - SHARED_LINK.UPDATED
      responses:
        '201':
          description: Returns the new webhook object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          description: Returns an error if the parameters were incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returns an error if the application does not have the permission to manage webhooks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error if the target item could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: 'Returns an error if the a webhook for this combination of target, application, and user already exists.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/webhooks/{webhook_id}':
    get:
      operationId: get_webhooks_id
      tags:
        - Webhooks
      x-box-tag: webhooks
      summary: Get webhook
      description: Retrieves a specific webhook
      parameters:
        - name: webhook_id
          description: The ID of the webhook.
          example: '3321123'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a webhook object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '403':
          description: Returns an error if the application does not have the permission to manage webhooks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error if the webhook could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_webhooks_id
      summary: Update webhook
      tags:
        - Webhooks
      x-box-tag: webhooks
      description: Updates a webhook.
      parameters:
        - name: webhook_id
          description: The ID of the webhook.
          example: '3321123'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: object
                  description: The item that will trigger the webhook
                  properties:
                    id:
                      description: The ID of the item to trigger a webhook
                      type: string
                      example: '1231232'
                    type:
                      description: The type of item to trigger a webhook
                      type: string
                      example: file
                      enum:
                        - file
                        - folder
                address:
                  type: string
                  example: 'https://example.com/webhooks'
                  description: The URL that is notified by this webhook
                triggers:
                  type: array
                  example:
                    - FILE.UPLOADED
                  description: An array of event names that this webhook is to be triggered for
                  items:
                    title: Webhook Trigger
                    example: FILE.UPLOADED
                    type: string
                    description: The event name that triggered this webhook
                    enum:
                      - FILE.UPLOADED
                      - FILE.PREVIEWED
                      - FILE.DOWNLOADED
                      - FILE.TRASHED
                      - FILE.DELETED
                      - FILE.RESTORED
                      - FILE.COPIED
                      - FILE.MOVED
                      - FILE.LOCKED
                      - FILE.UNLOCKED
                      - FILE.RENAMED
                      - COMMENT.CREATED
                      - COMMENT.UPDATED
                      - COMMENT.DELETED
                      - TASK_ASSIGNMENT.CREATED
                      - TASK_ASSIGNMENT.UPDATED
                      - METADATA_INSTANCE.CREATED
                      - METADATA_INSTANCE.UPDATED
                      - METADATA_INSTANCE.DELETED
                      - FOLDER.CREATED
                      - FOLDER.RENAMED
                      - FOLDER.DOWNLOADED
                      - FOLDER.RESTORED
                      - FOLDER.DELETED
                      - FOLDER.COPIED
                      - FOLDER.MOVED
                      - FOLDER.TRASHED
                      - WEBHOOK.DELETED
                      - COLLABORATION.CREATED
                      - COLLABORATION.ACCEPTED
                      - COLLABORATION.REJECTED
                      - COLLABORATION.REMOVED
                      - COLLABORATION.UPDATED
                      - SHARED_LINK.DELETED
                      - SHARED_LINK.CREATED
                      - SHARED_LINK.UPDATED
      responses:
        '200':
          description: Returns the new webhook object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          description: Returns an error if the parameters were incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returns an error if the application does not have the permission to manage webhooks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error if the target item or webhook could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: 'Returns an error if the a webhook for this combination of target, application, and user already exists.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_webhooks_id
      summary: Remove webhook
      tags:
        - Webhooks
      x-box-tag: webhooks
      description: Deletes a webhook.
      parameters:
        - name: webhook_id
          description: The ID of the webhook.
          example: '3321123'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: An empty response will be returned when the webhook was successfully deleted.
        '403':
          description: Returns an error if the application does not have the permission to manage webhooks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error if the webhook could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/skill_invocations/{skill_id}':
    put:
      operationId: put_skill_invocations_id
      summary: Update all Box Skill cards on file
      tags:
        - Skills
      x-box-tag: skills
      description: An alternative method that can be used to overwrite and update all Box Skill metadata cards on a file.
      parameters:
        - name: skill_id
          description: The ID of the skill to apply this metadata for.
          example: '33243242'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
                - metadata
                - file
              properties:
                status:
                  type: string
                  description: Defines the status of this invocation. Set this to `success` when setting Skill cards.
                  example: success
                  enum:
                    - invoked
                    - processing
                    - success
                    - transient_failure
                    - permanent_failure
                metadata:
                  type: object
                  description: The metadata to set for this skill. This is a list of Box Skills cards. These cards will overwrite any existing Box skill cards on the file.
                  properties:
                    cards:
                      type: array
                      description: A list of Box Skill cards to apply to this file.
                      items:
                        oneOf:
                          - $ref: '#/components/schemas/SkillCard'
                          - $ref: '#/components/schemas/KeywordSkillCard'
                          - $ref: '#/components/schemas/TimelineSkillCard'
                          - $ref: '#/components/schemas/TranscriptSkillCard'
                          - $ref: '#/components/schemas/StatusSkillCard'
                file:
                  type: object
                  description: The file to assign the cards to.
                  properties:
                    type:
                      type: string
                      description: '`file`'
                      example: file
                      enum:
                        - file
                    id:
                      type: string
                      description: The ID of the file
                      example: '3243244'
                file_version:
                  type: object
                  description: The optional file version to assign the cards to.
                  properties:
                    type:
                      type: string
                      description: '`file_version`'
                      example: file_version
                      enum:
                        - file_version
                    id:
                      type: string
                      description: The ID of the file version
                      example: '731381601045'
                usage:
                  type: object
                  description: 'A descriptor that defines what items are affected by this call.  Set this to the default values when setting a card to a `success` state, and leave it out in most other situations.'
                  properties:
                    unit:
                      type: string
                      example: file
                      description: '`file`'
                    value:
                      type: number
                      example: 1
                      description: '`1`'
      responses:
        '200':
          content: {}
          description: Returns an empty response when the card has been successfully updated.
        '400':
          description: 'Returns an error when the request body is not valid.  * `schema_validation_failed` - The request body contains a value for a for a field that either does not exist, or for which the value or type does not match the expected field type. An example might be an unknown option for an `enum` or `multiSelect` field.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error when the file could not be found or the user does not have access.  * `not_found` - The file could not be found, or the user does not have access to the file.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /events:
    options:
      operationId: options_events
      summary: Get events long poll endpoint
      tags:
        - Events
      x-box-tag: events
      description: 'Returns a list of real-time servers that can be used for long-polling updates to the [event stream](#get-events).  Long polling is the concept where a HTTP request is kept open until the server sends a response, then repeating the process over and over to receive updated responses.  Long polling the event stream can only be used for user events, not for enterprise events.  To use long polling, first use this endpoint to retrieve a list of long poll URLs. Next, make a long poll request to any of the provided URLs.  When an event occurs in monitored account a response with the value `new_change` will be sent. The response contains no other details as it only serves as a prompt to take further action such as sending a request to the [events endpoint](#get-events) with the last known `stream_position`.  After the server sends this response it closes the connection. You must now repeat the long poll process to begin listening for events again.  If no events occur for a while and the connection times out you will receive a response with the value `reconnect`. When you receive this response you’ll make another call to this endpoint to restart the process.  If you receive no events in `retry_timeout` seconds then you will need to make another request to the real-time server (one of the URLs in the response for this endpoint). This might be necessary due to network errors.  Finally, if you receive a `max_retries` error when making a request to the real-time server, you should start over by making a call to this endpoint first.'
      responses:
        '200':
          description: Returns a paginated array of servers that can be used instead of the regular endpoints for long-polling events.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealtimeServers'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    get:
      operationId: get_events
      summary: List user and enterprise events
      tags:
        - Events
      x-box-tag: events
      description: 'Returns up to a year of past events for a given user or for the entire enterprise.  By default this returns events for the authenticated user. To retrieve events for the entire enterprise, set the `stream_type` to `admin_logs`. The user making the API call will need to have admin privileges, and the application will need to have the permission to access the event feed to get the enterprise event feed.'
      parameters:
        - name: stream_type
          description: Defines the type of events that are returned  * `all` returns everything for a user and is the default * `changes` returns events that may cause file tree changes   such as file updates or collaborations. * `sync` is similar to `changes` but only applies to synced folders * `admin_logs` returns all events for an entire enterprise and   requires the user making the API call to have admin permissions.
          in: query
          example: all
          schema:
            type: string
            default: all
            enum:
              - all
              - changes
              - sync
              - admin_logs
        - name: stream_position
          description: The location in the event stream to start receiving events from.  * `now` will return an empty list events and the latest stream position for initialization. * `0` or `null` will return all events.
          example: '1348790499819'
          in: query
          schema:
            type: string
        - name: limit
          description: Limits the number of events returned
          in: query
          example: 50
          schema:
            type: integer
            format: int64
            default: 100
            maximum: 500
        - name: event_type
          description: A comma-separated list of events to filter by. This can only be used when requesting the events with a `stream_type` of `admin_logs`. For any other `stream_type` this value will be ignored.
          in: query
          explode: false
          example:
            - ACCESS_GRANTED
          schema:
            type: array
            items:
              type: string
              description: An event type that can be filtered by
              enum:
                - ACCESS_GRANTED
                - ACCESS_REVOKED
                - ADD_DEVICE_ASSOCIATION
                - ADD_LOGIN_ACTIVITY_DEVICE
                - ADMIN_LOGIN
                - APPLICATION_CREATED
                - APPLICATION_PUBLIC_KEY_ADDED
                - APPLICATION_PUBLIC_KEY_DELETED
                - CHANGE_ADMIN_ROLE
                - CHANGE_FOLDER_PERMISSION
                - COLLABORATION_ACCEPT
                - COLLABORATION_EXPIRATION
                - COLLABORATION_INVITE
                - COLLABORATION_REMOVE
                - COLLABORATION_ROLE_CHANGE
                - COMMENT_CREATE
                - COMMENT_DELETE
                - CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY
                - CONTENT_WORKFLOW_AUTOMATION_ADD
                - CONTENT_WORKFLOW_AUTOMATION_DELETE
                - CONTENT_WORKFLOW_POLICY_ADD
                - CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION
                - CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION
                - COPY
                - DATA_RETENTION_CREATE_RETENTION
                - DATA_RETENTION_REMOVE_RETENTION
                - DELETE
                - DELETE_USER
                - DEVICE_TRUST_CHECK_FAILED
                - DOWNLOAD
                - EDIT
                - EDIT_USER
                - EMAIL_ALIAS_CONFIRM
                - EMAIL_ALIAS_REMOVE
                - ENTERPRISE_APP_AUTHORIZATION_UPDATE
                - EXTERNAL_COLLAB_SECURITY_SETTINGS
                - FAILED_LOGIN
                - FILE_MARKED_MALICIOUS
                - FILE_WATERMARKED_DOWNLOAD
                - GROUP_ADD_ITEM
                - GROUP_ADD_USER
                - GROUP_CREATION
                - GROUP_DELETION
                - GROUP_EDITED
                - GROUP_REMOVE_ITEM
                - GROUP_REMOVE_USER
                - ITEM_MODIFY
                - ITEM_OPEN
                - ITEM_SHARED_UPDATE
                - ITEM_SYNC
                - ITEM_UNSYNC
                - LEGAL_HOLD_ASSIGNMENT_CREATE
                - LEGAL_HOLD_ASSIGNMENT_DELETE
                - LEGAL_HOLD_POLICY_CREATE
                - LEGAL_HOLD_POLICY_DELETE
                - LEGAL_HOLD_POLICY_UPDATE
                - LOCK
                - LOGIN
                - METADATA_INSTANCE_CREATE
                - METADATA_INSTANCE_DELETE
                - METADATA_INSTANCE_UPDATE
                - METADATA_TEMPLATE_CREATE
                - METADATA_TEMPLATE_DELETE
                - METADATA_TEMPLATE_UPDATE
                - MOVE
                - NEW_USER
                - OAUTH2_ACCESS_TOKEN_REVOKE
                - PREVIEW
                - REMOVE_DEVICE_ASSOCIATION
                - REMOVE_LOGIN_ACTIVITY_DEVICE
                - RENAME
                - RETENTION_POLICY_ASSIGNMENT_ADD
                - SHARE
                - SHARE_EXPIRATION
                - SHIELD_ALERT
                - STORAGE_EXPIRATION
                - TASK_ASSIGNMENT_CREATE
                - TASK_ASSIGNMENT_DELETE
                - TASK_ASSIGNMENT_UPDATE
                - TASK_CREATE
                - TASK_UPDATE
                - TERMS_OF_SERVICE_ACCEPT
                - TERMS_OF_SERVICE_REJECT
                - UNDELETE
                - UNLOCK
                - UNSHARE
                - UPDATE_COLLABORATION_EXPIRATION
                - UPDATE_SHARE_EXPIRATION
                - UPLOAD
                - USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE
                - WATERMARK_LABEL_CREATE
                - WATERMARK_LABEL_DELETE
        - name: created_after
          description: The lower bound date and time to return events for. This can only be used when requesting the events with a `stream_type` of `admin_logs`. For any other `stream_type` this value will be ignored.
          in: query
          example: '2012-12-12T10:53:43-08:00'
          schema:
            type: string
            format: date-time
        - name: created_before
          description: The upper bound date and time to return events for. This can only be used when requesting the events with a `stream_type` of `admin_logs`. For any other `stream_type` this value will be ignored.
          in: query
          required: false
          example: '2013-12-12T10:53:43-08:00'
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: 'Returns a list of event objects.  Events objects are returned in pages, with each page (chunk) including a list of event objects. The response includes a `chunk_size` parameter indicating how many events were returned in this chunk, as well as the next `stream_position` that can be queried.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /collections:
    get:
      operationId: get_collections
      summary: List all collections
      tags:
        - Collections
      x-box-tag: collections
      description: 'Retrieves all collections for a given user.  Currently, only the `favorites` collection is supported.'
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns all collections for the given user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collections'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/collections/{collection_id}/items':
    get:
      operationId: get_collections_id_items
      summary: List collection items
      tags:
        - Collections
      x-box-tag: collections
      description: Retrieves the files and/or folders contained within this collection.
      parameters:
        - name: collection_id
          description: The ID of the collection.
          example: '926489'
          in: path
          required: true
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: offset
          description: The offset of the item at which to begin the response.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            default: 0
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns an array of items in the collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /recent_items:
    get:
      operationId: get_recent_items
      summary: List recently accessed items
      tags:
        - Recent items
      description: 'Returns information about the recent items accessed by a user, either in the last 90 days or up to the last 1000 items accessed.'
      x-box-tag: recent_items
      x-box-enable-explorer: true
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
      responses:
        '200':
          description: Returns a list recent items access by a user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentItems'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /retention_policies:
    get:
      operationId: get_retention_policies
      summary: List retention policies
      tags:
        - Retention policies
      x-box-tag: retention_policies
      description: Retrieves all of the retention policies for an enterprise.
      parameters:
        - name: policy_name
          description: Filters results by a case sensitive prefix of the name of retention policies.
          in: query
          required: false
          example: Sales Policy
          schema:
            type: string
        - name: policy_type
          description: Filters results by the type of retention policy.
          in: query
          required: false
          example: finite
          schema:
            type: string
            enum:
              - finite
              - indefinite
        - name: created_by_user_id
          description: Filters results by the ID of the user who created policy.
          example: '21312321'
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns a list retention policies in the enterprise.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicies'
        '400':
          description: Returns a `bad_request` if a non existent `policy_type` was specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns a `not_found` error if the user specified in `created_by_user_id` does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_retention_policies
      summary: Create retention policy
      tags:
        - Retention policies
      x-box-tag: retention_policies
      description: Creates a retention policy.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - policy_name
                - policy_type
                - disposition_action
              properties:
                policy_name:
                  type: string
                  description: The name for the retention policy
                  example: Some Policy Name
                policy_type:
                  type: string
                  example: finite
                  description: 'The type of the retention policy. A retention policy type can either be `finite`, where a specific amount of time to retain the content is known upfront, or `indefinite`, where the amount of time to retain the content is still unknown.'
                  enum:
                    - finite
                    - indefinite
                disposition_action:
                  type: string
                  example: permanently_delete
                  description: 'The disposition action of the retention policy. This action can be `permanently_delete`, which will cause the content retained by the policy to be permanently deleted, or `remove_retention`, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy has expired.'
                  enum:
                    - permanently_delete
                    - remove_retention
                retention_length:
                  type: string
                  format: int32
                  example: '365'
                  minimum: 1
                  description: 'The length of the retention policy. This length specifies the duration in days that the retention policy will be active for after being assigned to content.  If the policy has A `policy_type` of `indefinite`, the `retention_length` will also be `indefinite`.'
                can_owner_extend_retention:
                  type: boolean
                  example: true
                  description: Whether the owner of a file will be allowed to extend the retention.
                are_owners_notified:
                  type: boolean
                  example: true
                  description: Whether owner and co-owners of a file are notified when the policy nears expiration.
                custom_notification_recipients:
                  type: array
                  items:
                    type: object
                    description: A user that is notified of an event.
                    properties:
                      type:
                        description: The type of item to notify
                        type: string
                        example: user
                        enum:
                          - user
                      id:
                        description: The id of the user to notify
                        type: string
                        example: '12312312'
                      name:
                        type: string
                        description: The name of the user to notify
                        example: Tim Apple
                      login:
                        type: string
                        description: The email address the user uses to notify
                        example: apple@example.com
      responses:
        '200':
          description: Returns a new retention policy object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicy'
        '400':
          description: 'Returns a `bad_request` error with the `retention_length` was specified for a `infinite` retention policy, or an incorrect `disposition_action` was set.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: Returns an error if a retention policy with the given name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/retention_policies/{retention_policy_id}':
    get:
      operationId: get_retention_policies_id
      summary: Get retention policy
      tags:
        - Retention policies
      x-box-tag: retention_policies
      description: Retrieves a retention policy.
      parameters:
        - name: retention_policy_id
          description: The ID of the retention policy.
          example: '982312'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the retention policy object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicy'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_retention_policies_id
      summary: Update retention policy
      tags:
        - Retention policies
      x-box-tag: retention_policies
      description: Updates a retention policy.
      parameters:
        - name: retention_policy_id
          description: The ID of the retention policy.
          example: '982312'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                policy_name:
                  type: string
                  description: The name for the retention policy
                  example: Some Policy Name
                disposition_action:
                  type: string
                  example: permanently_delete
                  description: 'The disposition action of the retention policy. This action can be `permanently_delete`, which will cause the content retained by the policy to be permanently deleted, or `remove_retention`, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy has expired.'
                  enum:
                    - permanently_delete
                    - remove_retention
                status:
                  type: string
                  example: retired
                  description: 'Used to retire a retention policy.  If not retiring a policy, do not include this parameter or set it to `null`.'
                  enum:
                    - retired
      responses:
        '200':
          description: Returns the updated retention policy object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicy'
        '400':
          description: Returns a `bad_request` if an incorrect `disposition_action` was set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: Returns an error if a retention policy with the given name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/retention_policies/{retention_policy_id}/assignments':
    get:
      operationId: get_retention_policies_id_assignments
      summary: List retention policy assignments
      tags:
        - Retention policy assignments
      x-box-tag: retention_policy_assignments
      description: Returns a list of all retention policy assignments associated with a specified retention policy.
      parameters:
        - name: retention_policy_id
          description: The ID of the retention policy.
          example: '982312'
          in: path
          required: true
          schema:
            type: string
        - name: type
          description: The type of the retention policy assignment to retrieve.
          in: query
          required: false
          example: folder
          schema:
            type: string
            enum:
              - folder
              - enterprise
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns a list of the retention policy assignments associated with the specified retention policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicyAssignments'
        '400':
          description: Returns an error if an unknown `type` is specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /retention_policy_assignments:
    post:
      operationId: post_retention_policy_assignments
      summary: Assign retention policy
      tags:
        - Retention policy assignments
      x-box-tag: retention_policy_assignments
      description: Assigns a retention policy to an item.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - policy_id
                - assign_to
              properties:
                policy_id:
                  type: string
                  description: The ID of the retention policy to assign
                  example: '173463'
                assign_to:
                  type: object
                  description: The item to assign the policy to
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      description: The type of item to assign the policy to.
                      example: folder
                      enum:
                        - enterprise
                        - folder
                        - metadata_template
                    id:
                      type: string
                      description: The ID of item to assign the policy to.  Set to `null` or omit when `type` is set to `enterprise`.
                      example: '6564564'
      responses:
        '201':
          description: Returns a new retention policy assignment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicyAssignment'
        '400':
          description: Returns an error if an `id` is specified while assigning a the retention policy to an enterprise.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: Returns an error if no retention policy with the given `policy_id` exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: Returns an error if a retention policy of equal or greater length has already been assigned to this item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/retention_policy_assignments/{retention_policy_assignment_id}':
    get:
      operationId: get_retention_policy_assignments_id
      summary: Get retention policy assignment
      tags:
        - Retention policy assignments
      x-box-tag: retention_policy_assignments
      description: Retrieves a retention policy assignment
      parameters:
        - name: retention_policy_assignment_id
          description: The ID of the retention policy assignment.
          example: '1233123'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the retention policy assignment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionPolicyAssignment'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /legal_hold_policies:
    get:
      operationId: get_legal_hold_policies
      summary: List all legal hold policies
      tags:
        - Legal hold policies
      x-box-tag: legal_hold_policies
      description: Retrieves a list of legal hold policies that belong to an enterprise.
      parameters:
        - name: policy_name
          description: Limits results to policies for which the names start with this search term. This is a case-insensitive prefix.
          in: query
          example: Sales Policy
          required: false
          schema:
            type: string
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns a list of legal hold policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldPolicies'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_legal_hold_policies
      summary: Create legal hold policy
      tags:
        - Legal hold policies
      x-box-tag: legal_hold_policies
      description: Create a new legal hold policy.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - policy_name
              properties:
                policy_name:
                  description: The name of the policy.
                  example: Sales Policy
                  type: string
                  maxLength: 254
                description:
                  description: A description for the policy.
                  example: A custom policy for the sales team
                  type: string
                  maxLength: 500
                filter_started_at:
                  description: 'The filter start date.  When this policy is applied using a `custodian` legal hold assignments, it will only apply to file versions created or uploaded inside of the date range. Other assignment types, such as folders and files, will ignore the date filter.  Required if `is_ongoing` is set to `false`.'
                  example: '2012-12-12T10:53:43-08:00'
                  type: string
                  maxLength: 500
                  format: date-time
                filter_ended_at:
                  description: 'The filter end date.  When this policy is applied using a `custodian` legal hold assignments, it will only apply to file versions created or uploaded inside of the date range. Other assignment types, such as folders and files, will ignore the date filter.  Required if `is_ongoing` is set to `false`.'
                  example: '2012-12-18T10:53:43-08:00'
                  type: string
                  maxLength: 500
                  format: date-time
                is_ongoing:
                  description: 'Whether new assignments under this policy should continue applying to files even after initialization.  When this policy is applied using a legal hold assignment, it will continue applying the policy to any new file versions even after it has been applied.  For example, if a legal hold assignment is placed on a user today, and that user uploads a file tomorrow, that file will get held. This will continue until the policy is retired.  Required if no filter dates are set.'
                  example: true
                  type: boolean
      responses:
        '201':
          description: Returns a new legal hold policy object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldPolicy'
        '400':
          description: 'Returns an error if required parameters are missing, or neither `is_ongoing` or filter dates are specified.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '409':
          description: Returns an error if a policy with this name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/legal_hold_policies/{legal_hold_policy_id}':
    get:
      operationId: get_legal_hold_policies_id
      summary: Get legal hold policy
      tags:
        - Legal hold policies
      x-box-tag: legal_hold_policies
      description: Retrieve a legal hold policy.
      parameters:
        - name: legal_hold_policy_id
          description: The ID of the legal hold policy
          example: '324432'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a legal hold policy object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldPolicy'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_legal_hold_policies_id
      summary: Update legal hold policy
      tags:
        - Legal hold policies
      x-box-tag: legal_hold_policies
      description: Update legal hold policy.
      parameters:
        - name: legal_hold_policy_id
          description: The ID of the legal hold policy
          example: '324432'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                policy_name:
                  description: The name of the policy.
                  example: Sales Policy
                  type: string
                  maxLength: 254
                description:
                  description: A description for the policy.
                  example: A custom policy for the sales team
                  type: string
                  maxLength: 500
                release_notes:
                  description: Notes around why the policy was released.
                  example: Required for GDPR
                  type: string
                  maxLength: 500
      responses:
        '200':
          description: Returns a new legal hold policy object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldPolicy'
        '409':
          description: Returns an error if a policy with this name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_legal_hold_policies_id
      x-box-tag: legal_hold_policies
      tags:
        - Legal hold policies
      summary: Remove legal hold policy
      description: Delete an existing legal hold policy.  This is an asynchronous process. The policy will not be fully deleted yet when the response returns.
      parameters:
        - name: legal_hold_policy_id
          description: The ID of the legal hold policy
          example: '324432'
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          content: {}
          description: A blank response is returned if the policy was successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /legal_hold_policy_assignments:
    get:
      operationId: get_legal_hold_policy_assignments
      summary: List legal hold policy assignments
      tags:
        - Legal hold policy assignments
      x-box-tag: legal_hold_policy_assignments
      description: Retrieves a list of items a legal hold policy has been assigned to.
      parameters:
        - name: policy_id
          description: The ID of the legal hold policy
          example: '324432'
          in: query
          required: true
          schema:
            type: string
        - name: assign_to_type
          description: Filters the results by the type of item the policy was applied to.
          example: file
          in: query
          schema:
            type: string
            enum:
              - file
              - file_version
              - folder
              - user
        - name: assign_to_id
          description: Filters the results by the ID of item the policy was applied to.
          example: '1234323'
          in: query
          schema:
            type: string
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns a list of legal hold policy assignments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldPolicyAssignments'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_legal_hold_policy_assignments
      summary: Assign legal hold policy
      tags:
        - Legal hold policy assignments
      x-box-tag: legal_hold_policy_assignments
      description: 'Assign a legal hold to a file, file version, folder, or user.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - policy_id
                - assign_to
              properties:
                policy_id:
                  description: The ID of the policy to assign.
                  example: '123244'
                  type: string
                assign_to:
                  type: object
                  description: The item to assign the policy to
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      description: The type of item to assign the policy to
                      example: folder
                      enum:
                        - file
                        - file_version
                        - folder
                        - user
                    id:
                      type: string
                      description: The ID of item to assign the policy to
                      example: '6564564'
      responses:
        '201':
          description: Returns a new legal hold policy assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldPolicyAssignment'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}':
    get:
      operationId: get_legal_hold_policy_assignments_id
      summary: Get legal hold policy assignment
      tags:
        - Legal hold policy assignments
      x-box-tag: legal_hold_policy_assignments
      description: Retrieve a legal hold policy assignment.
      parameters:
        - name: legal_hold_policy_assignment_id
          description: The ID of the legal hold policy assignment
          example: '753465'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a legal hold policy object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHoldPolicyAssignment'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_legal_hold_policy_assignments_id
      x-box-tag: legal_hold_policy_assignments
      tags:
        - Legal hold policy assignments
      summary: Unassign legal hold policy
      description: Remove a legal hold from an item.  This is an asynchronous process. The policy will not be fully removed yet when the response returns.
      parameters:
        - name: legal_hold_policy_assignment_id
          description: The ID of the legal hold policy assignment
          example: '753465'
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          content: {}
          description: A blank response is returned if the assignment was successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}/files_on_hold':
    get:
      operationId: get_legal_hold_policy_assignments_id_files_on_hold
      summary: List current file versions for legal hold policy assignment
      tags:
        - Legal hold policy assignments
      x-box-tag: legal_hold_policy_assignments
      description: 'Get a list of current file versions for a legal hold assignment.  In some cases you may want to get previous file versions instead. In these cases, use the `GET  /legal_hold_policy_assignments/:id/file_versions_on_hold` API instead to return any previous versions of a file for this legal hold policy assignment.  Due to ongoing re-architecture efforts this API might not return all file versions held for this policy ID. Instead, this API will only return the latest file version held in the newly developed architecture. The `GET /file_version_legal_holds` API can be used to fetch current and past versions of files held within the legacy architecture.  The `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to find a list of policy assignments for a given policy ID.'
      parameters:
        - name: legal_hold_policy_assignment_id
          description: The ID of the legal hold policy assignment
          example: '753465'
          in: path
          required: true
          schema:
            type: string
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns the list of current file versions held under legal hold for a specific legal hold policy assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVersionLegalHolds'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/legal_hold_policy_assignments/{legal_hold_policy_assignment_id}/file_versions_on_hold':
    get:
      operationId: get_legal_hold_policy_assignments_id_file_versions_on_hold
      summary: List previous file versions for legal hold policy assignment
      tags:
        - Legal hold policy assignments
      x-box-tag: legal_hold_policy_assignments
      description: 'Get a list of previous file versions for a legal hold assignment.  In some cases you may only need the latest file versions instead. In these cases, use the `GET  /legal_hold_policy_assignments/:id/files_on_hold` API instead to return any current (latest) versions of a file for this legal hold policy assignment.  Due to ongoing re-architecture efforts this API might not return all files held for this policy ID. Instead, this API will only return past file versions held in the newly developed architecture. The `GET /file_version_legal_holds` API can be used to fetch current and past versions of files held within the legacy architecture.  The `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to find a list of policy assignments for a given policy ID.'
      parameters:
        - name: legal_hold_policy_assignment_id
          description: The ID of the legal hold policy assignment
          example: '753465'
          in: path
          required: true
          schema:
            type: string
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Returns the list of previous file versions held under legal hold for a specific legal hold policy assignment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVersionLegalHolds'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/file_version_retentions/{file_version_retention_id}':
    get:
      operationId: get_file_version_retentions_id
      tags:
        - File version retentions
      x-box-tag: file_version_retentions
      summary: Get retention on file
      description: Returns information about a file version retention.
      parameters:
        - name: file_version_retention_id
          description: The ID of the file version retention
          in: path
          required: true
          example: '3424234'
          schema:
            type: string
      responses:
        '200':
          description: Returns a file version retention object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVersionRetention'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /file_version_retentions:
    get:
      operationId: get_file_version_retentions
      tags:
        - File version retentions
      x-box-tag: file_version_retentions
      summary: List file version retentions
      description: Retrieves all file version retentions for the given enterprise.
      parameters:
        - name: file_id
          description: Filters results by files with this ID.
          in: query
          example: '43123123'
          required: false
          schema:
            type: string
        - name: file_version_id
          description: Filters results by file versions with this ID.
          in: query
          example: '1'
          required: false
          schema:
            type: string
        - name: policy_id
          description: Filters results by the retention policy with this ID.
          in: query
          required: false
          example: '982312'
          schema:
            type: string
        - name: disposition_action
          description: Filters results by the retention policy with this disposition action.
          in: query
          required: false
          example: permanently_delete
          schema:
            type: string
            enum:
              - permanently_delete
              - remove_retention
        - name: disposition_before
          description: Filters results by files that will have their disposition come into effect before this date.
          in: query
          required: false
          example: '2012-12-12T10:53:43-08:00'
          schema:
            type: string
        - name: disposition_after
          description: Filters results by files that will have their disposition come into effect after this date.
          in: query
          required: false
          example: '2012-12-19T10:34:23-08:00'
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
      responses:
        '200':
          description: Returns a list of all file version retentions for the enterprise.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVersionRetentions'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/file_version_legal_holds/{file_version_legal_hold_id}':
    get:
      operationId: get_file_version_legal_holds_id
      summary: Get file version legal hold
      tags:
        - File version legal holds
      x-box-tag: file_version_legal_holds
      description: Retrieves information about the legal hold policies assigned to a file version.
      parameters:
        - name: file_version_legal_hold_id
          description: The ID of the file version legal hold
          in: path
          required: true
          example: '2348213'
          schema:
            type: string
      responses:
        '200':
          description: Returns the legal hold policy assignments for the file version.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVersionLegalHold'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /file_version_legal_holds:
    get:
      operationId: get_file_version_legal_holds
      summary: List file version legal holds
      tags:
        - File version legal holds
      x-box-tag: file_version_legal_holds
      description: 'Get a list of file versions on legal hold for a legal hold assignment.  Due to ongoing re-architecture efforts this API might not return all file versions for this policy ID.  Instead, this API will only return file versions held in the legacy architecture. Two new endpoints will available to request any file versions held in the new architecture.  For file versions held in the new architecture, the `GET /legal_hold_policy_assignments/:id/file_versions_on_hold` API can be used to return all past file versions available for this policy assignment, and the `GET /legal_hold_policy_assignments/:id/files_on_hold` API can be used to return any current (latest) versions of a file under legal hold.  The `GET /legal_hold_policy_assignments?policy_id={id}` API can be used to find a list of policy assignments for a given policy ID.  Once the re-architecture is completed this API will be deprecated.'
      parameters:
        - name: policy_id
          description: The ID of the legal hold policy to get the file version legal holds for.
          in: query
          example: '133870'
          required: true
          schema:
            type: string
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns the list of file version legal holds for a specific legal hold policy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVersionLegalHolds'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/device_pinners/{device_pinner_id}':
    get:
      operationId: get_device_pinners_id
      summary: Get device pin
      tags:
        - Device pinners
      x-box-tag: device_pinners
      description: Retrieves information about an individual device pin.
      parameters:
        - name: device_pinner_id
          description: The ID of the device pin
          in: path
          required: true
          example: '2324234'
          schema:
            type: string
      responses:
        '200':
          description: Returns information about a single device pin.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePinner'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_device_pinners_id
      summary: Remove device pin
      tags:
        - Device pinners
      x-box-tag: device_pinners
      description: Deletes an individual device pin.
      parameters:
        - name: device_pinner_id
          description: The ID of the device pin
          in: path
          required: true
          example: '2324234'
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the pin has been deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/enterprises/{enterprise_id}/device_pinners':
    get:
      operationId: get_enterprises_id_device_pinners
      summary: List enterprise device pins
      tags:
        - Device pinners
      x-box-tag: device_pinners
      description: 'Retrieves all the device pins within an enterprise.  The user must have admin privileges, and the application needs the "manage enterprise" scope to make this call.'
      parameters:
        - name: enterprise_id
          description: The ID of the enterprise
          in: path
          required: true
          example: '3442311'
          schema:
            type: string
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
        - name: direction
          description: The direction to sort results in. This can be either in alphabetical ascending (`ASC`) or descending (`DESC`) order.
          in: query
          required: false
          example: ASC
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Returns a list of device pins for a given enterprise.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicePinners'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /terms_of_services:
    get:
      operationId: get_terms_of_services
      x-box-tag: terms_of_services
      summary: List terms of services
      tags:
        - Terms of service
      description: Returns the current terms of service text and settings for the enterprise.
      parameters:
        - name: tos_type
          description: Limits the results to the terms of service of the given type.
          in: query
          required: false
          example: managed
          schema:
            type: string
            enum:
              - external
              - managed
      responses:
        '200':
          description: Returns a collection of terms of service text and settings for the enterprise.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfServices'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_terms_of_services
      tags:
        - Terms of service
      summary: Create terms of service
      x-box-tag: terms_of_services
      description: Creates a terms of service for a given enterprise and type of user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
                - text
              properties:
                status:
                  description: Whether this terms of service is active.
                  example: enabled
                  type: string
                  enum:
                    - enabled
                    - disabled
                tos_type:
                  description: The type of user to set the terms of service for.
                  example: managed
                  type: string
                  enum:
                    - external
                    - managed
                text:
                  description: The terms of service text to display to users.  The text can be set to empty if the `status` is set to `disabled`.
                  example: By collaborating on this file you are accepting...
                  type: string
      responses:
        '200':
          description: Returns a new task object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/terms_of_services/{terms_of_service_id}':
    get:
      operationId: get_terms_of_services_id
      summary: Get terms of service
      tags:
        - Terms of service
      x-box-tag: terms_of_services
      description: Fetches a specific terms of service.
      parameters:
        - name: terms_of_service_id
          description: The ID of the terms of service.
          example: '324234'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a terms of service object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfService'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_terms_of_services_id
      summary: Update terms of service
      tags:
        - Terms of service
      x-box-tag: terms_of_services
      description: Updates a specific terms of service.
      parameters:
        - name: terms_of_service_id
          description: The ID of the terms of service.
          example: '324234'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
                - text
              properties:
                status:
                  description: Whether this terms of service is active.
                  example: enabled
                  type: string
                  enum:
                    - enabled
                    - disabled
                text:
                  description: The terms of service text to display to users.  The text can be set to empty if the `status` is set to `disabled`.
                  example: By collaborating on this file you are accepting...
                  type: string
      responses:
        '200':
          description: Returns an updated terms of service object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfService'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /terms_of_service_user_statuses:
    get:
      operationId: get_terms_of_service_user_statuses
      summary: List terms of service user statuses
      tags:
        - Terms of service user statuses
      x-box-tag: terms_of_service_user_statuses
      description: 'Retrieves an overview of users and their status for a terms of service, including Whether they have accepted the terms and when.'
      parameters:
        - name: tos_id
          description: The ID of the terms of service.
          example: '324234'
          in: query
          required: true
          schema:
            type: string
        - name: user_id
          description: Limits results to the given user ID.
          example: '123334'
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns a list of terms of service statuses.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfServiceUserStatuses'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_terms_of_service_user_statuses
      summary: Create terms of service status for new user
      tags:
        - Terms of service user statuses
      x-box-tag: terms_of_service_user_statuses
      description: Sets the status for a terms of service for a user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - tos
                - user
                - is_accepted
              properties:
                tos:
                  type: object
                  description: The terms of service to set the status for.
                  required:
                    - id
                    - type
                  properties:
                    type:
                      type: string
                      description: The type of object.
                      example: terms_of_service
                      enum:
                        - terms_of_service
                    id:
                      type: string
                      description: The ID of terms of service
                      example: '1232132'
                user:
                  type: object
                  description: The user to set the status for.
                  required:
                    - id
                    - type
                  properties:
                    type:
                      type: string
                      description: The type of object.
                      example: user
                      enum:
                        - user
                    id:
                      type: string
                      description: The ID of user
                      example: '3423423'
                is_accepted:
                  type: boolean
                  example: true
                  description: Whether the user has accepted the terms.
      responses:
        '200':
          description: Returns a terms of service status object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfServiceUserStatus'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/terms_of_service_user_statuses/{terms_of_service_user_status_id}':
    put:
      operationId: put_terms_of_service_user_statuses_id
      summary: Update terms of service status for existing user
      tags:
        - Terms of service user statuses
      x-box-tag: terms_of_service_user_statuses
      description: Updates the status for a terms of service for a user.
      parameters:
        - name: terms_of_service_user_status_id
          description: The ID of the terms of service status.
          example: '324234'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - is_accepted
              properties:
                is_accepted:
                  type: boolean
                  example: true
                  description: Whether the user has accepted the terms.
      responses:
        '200':
          description: Returns the updated terms of service status object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsOfServiceUserStatus'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /collaboration_whitelist_entries:
    get:
      operationId: get_collaboration_whitelist_entries
      summary: List allowed collaboration domains
      tags:
        - Domain restrictions for collaborations
      x-box-tag: collaboration_allowlist_entries
      description: Returns the list domains that have been deemed safe to create collaborations for within the current enterprise.
      parameters:
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns a collection of domains that are allowed for collaboration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationAllowlistEntries'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_collaboration_whitelist_entries
      summary: Add domain to list of allowed collaboration domains
      tags:
        - Domain restrictions for collaborations
      x-box-tag: collaboration_allowlist_entries
      description: Creates a new entry in the list of allowed domains to allow collaboration for.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - domain
                - direction
              properties:
                domain:
                  type: string
                  description: The domain to add to the list of allowed domains.
                  example: example.com
                direction:
                  type: string
                  description: The direction in which to allow collaborations.
                  example: inbound
                  enum:
                    - inbound
                    - outbound
                    - both
      responses:
        '200':
          description: Returns a new entry on the list of allowed domains.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationAllowlistEntry'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/collaboration_whitelist_entries/{collaboration_whitelist_entry_id}':
    get:
      operationId: get_collaboration_whitelist_entries_id
      summary: Get allowed collaboration domain
      tags:
        - Domain restrictions for collaborations
      x-box-tag: collaboration_allowlist_entries
      description: Returns a domain that has been deemed safe to create collaborations for within the current enterprise.
      parameters:
        - name: collaboration_whitelist_entry_id
          description: The ID of the entry in the list.
          in: path
          required: true
          example: '213123'
          schema:
            type: string
      responses:
        '200':
          description: Returns an entry on the list of allowed domains.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationAllowlistEntry'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_collaboration_whitelist_entries_id
      summary: Remove domain from list of allowed collaboration domains
      tags:
        - Domain restrictions for collaborations
      x-box-tag: collaboration_allowlist_entries
      description: Removes a domain from the list of domains that have been deemed safe to create collaborations for within the current enterprise.
      parameters:
        - name: collaboration_whitelist_entry_id
          description: The ID of the entry in the list.
          in: path
          required: true
          example: '213123'
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: A blank response is returned if the entry was successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /collaboration_whitelist_exempt_targets:
    get:
      operationId: get_collaboration_whitelist_exempt_targets
      summary: List users exempt from collaboration domain restrictions
      tags:
        - Domain restrictions (User exemptions)
      x-box-tag: collaboration_allowlist_exempt_targets
      description: Returns a list of users who have been exempt from the collaboration domain restrictions.
      parameters:
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns a collection of user exemptions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationAllowlistExemptTargets'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_collaboration_whitelist_exempt_targets
      summary: Create user exemption from collaboration domain restrictions
      tags:
        - Domain restrictions (User exemptions)
      x-box-tag: collaboration_allowlist_exempt_targets
      description: Exempts a user from the restrictions set out by the allowed list of domains for collaborations.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              properties:
                user:
                  type: object
                  description: The user to exempt.
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: The ID of the user to exempt.
                      example: '23522323'
      responses:
        '200':
          description: Returns a new exemption entry.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationAllowlistExemptTarget'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/collaboration_whitelist_exempt_targets/{collaboration_whitelist_exempt_target_id}':
    get:
      operationId: get_collaboration_whitelist_exempt_targets_id
      summary: Get user exempt from collaboration domain restrictions
      tags:
        - Domain restrictions (User exemptions)
      x-box-tag: collaboration_allowlist_exempt_targets
      description: Returns a users who has been exempt from the collaboration domain restrictions.
      parameters:
        - name: collaboration_whitelist_exempt_target_id
          description: The ID of the exemption to the list.
          in: path
          required: true
          example: '984923'
          schema:
            type: string
      responses:
        '200':
          description: Returns the user's exempted from the list of collaboration domains.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollaborationAllowlistExemptTarget'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_collaboration_whitelist_exempt_targets_id
      summary: Remove user from list of users exempt from domain restrictions
      tags:
        - Domain restrictions (User exemptions)
      x-box-tag: collaboration_allowlist_exempt_targets
      description: Removes a user's exemption from the restrictions set out by the allowed list of domains for collaborations.
      parameters:
        - name: collaboration_whitelist_exempt_target_id
          description: The ID of the exemption to the list.
          in: path
          required: true
          example: '984923'
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: A blank response is returned if the exemption was successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /storage_policies:
    get:
      operationId: get_storage_policies
      summary: List storage policies
      tags:
        - Storage policies
      x-box-tag: storage_policies
      description: Fetches all the storage policies in the enterprise.
      parameters:
        - name: fields
          description: 'A comma-separated list of attributes to include in the response. This can be used to request fields that are not normally returned in a standard response.  Be aware that specifying this parameter will have the effect that none of the standard fields are returned in the response unless explicitly specified, instead only fields for the mini representation are returned, additional to the fields requested.'
          in: query
          example:
            - id
            - type
            - name
          required: false
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: limit
          description: The maximum number of items to return per page.
          in: query
          required: false
          example: 1000
          schema:
            type: integer
            format: int64
            maximum: 1000
      responses:
        '200':
          description: Returns a collection of storage policies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePolicies'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/storage_policies/{storage_policy_id}':
    get:
      operationId: get_storage_policies_id
      summary: Get storage policy
      tags:
        - Storage policies
      x-box-tag: storage_policies
      description: Fetches a specific storage policy.
      parameters:
        - name: storage_policy_id
          description: The ID of the storage policy.
          example: '34342'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a storage policy object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePolicy'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /storage_policy_assignments:
    get:
      operationId: get_storage_policy_assignments
      summary: List storage policy assignments
      tags:
        - Storage policy assignments
      x-box-tag: storage_policy_assignments
      description: Fetches all the storage policy assignment for an enterprise or user.
      parameters:
        - name: marker
          description: Defines the position marker at which to begin returning results. This is used when paginating using marker-based pagination.  This requires `usemarker` to be set to `true`.
          in: query
          required: false
          example: JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii
          schema:
            type: string
        - name: resolved_for_type
          in: query
          example: user
          description: The target type to return assignments for
          required: true
          schema:
            type: string
            enum:
              - user
              - enterprise
        - name: resolved_for_id
          in: query
          required: true
          example: '984322'
          description: The ID of the user or enterprise to return assignments for
          schema:
            type: string
      responses:
        '200':
          description: Returns a collection of storage policies for the enterprise or user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePolicyAssignments'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    post:
      operationId: post_storage_policy_assignments
      summary: Assign storage policy
      tags:
        - Storage policy assignments
      x-box-tag: storage_policy_assignments
      description: Creates a storage policy assignment for an enterprise or user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - storage_policy
                - assigned_to
              properties:
                storage_policy:
                  type: object
                  description: The storage policy to assign to the user or enterprise
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      description: The type to assign.
                      example: storage_policy
                      enum:
                        - storage_policy
                    id:
                      type: string
                      description: The ID of the storage policy to assign.
                      example: '1434325'
                assigned_to:
                  type: object
                  description: The user or enterprise to assign the storage policy to.
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      description: The type to assign the policy to.
                      example: user
                      enum:
                        - user
                        - enterprise
                    id:
                      type: string
                      description: The ID of the user or enterprise
                      example: '9987987'
      responses:
        '200':
          description: Returns the new storage policy assignment created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePolicyAssignment'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/storage_policy_assignments/{storage_policy_assignment_id}':
    get:
      operationId: get_storage_policy_assignments_id
      summary: Get storage policy assignment
      tags:
        - Storage policy assignments
      x-box-tag: storage_policy_assignments
      description: Fetches a specific storage policy assignment.
      parameters:
        - name: storage_policy_assignment_id
          description: The ID of the storage policy assignment.
          example: '932483'
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns a storage policy assignment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePolicyAssignment'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    put:
      operationId: put_storage_policy_assignments_id
      summary: Update storage policy assignment
      tags:
        - Storage policy assignments
      x-box-tag: storage_policy_assignments
      description: Updates a specific storage policy assignment.
      parameters:
        - name: storage_policy_assignment_id
          description: The ID of the storage policy assignment.
          example: '932483'
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - storage_policy
              properties:
                storage_policy:
                  type: object
                  description: The storage policy to assign to the user or enterprise
                  required:
                    - type
                    - id
                  properties:
                    type:
                      type: string
                      description: The type to assign.
                      example: storage_policy
                      enum:
                        - storage_policy
                    id:
                      type: string
                      description: The ID of the storage policy to assign.
                      example: '1434325'
      responses:
        '200':
          description: Returns an updated storage policy assignment object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePolicyAssignment'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
    delete:
      operationId: delete_storage_policy_assignments_id
      summary: Unassign storage policy
      tags:
        - Storage policy assignments
      x-box-tag: storage_policy_assignments
      description: Delete a storage policy assignment.  Deleting a storage policy assignment on a user will have the user inherit the enterprise's default storage policy.  There is a rate limit for calling this endpoint of only twice per user in a 24 hour time frame.
      parameters:
        - name: storage_policy_assignment_id
          description: The ID of the storage policy assignment.
          example: '932483'
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          content: {}
          description: Returns an empty response when the storage policy assignment is successfully deleted.
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  /zip_downloads:
    post:
      operationId: post_zip_downloads
      summary: Create zip download
      tags:
        - Zip Downloads
      x-box-tag: zip_downloads
      x-box-reference-category: zip_downloads
      description: 'Creates a request to download multiple files and folders as a single `zip` archive file. This API does not return the archive but instead performs all the checks to ensure that the user has access to all the items, and then returns a `download_url` and a `status_url` that can be used to download the archive.  The limit for an archive is either 32GB or 10,000 files, whichever limitation is met first.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZipDownloadRequest'
      responses:
        '202':
          description: 'If the `zip` archive is ready to be downloaded, the API will return a response that will include a `download_url`, a `status_url`, as well as any conflicts that might have occurred when creating the request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZipDownload'
              examples:
                default:
                  value:
                    download_url: 'https://dl.boxcloud.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/content'
                    status_url: 'https://api.box.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/status'
                    expires_at: '2020-07-22T11:26:08Z'
                    name_conflicts:
                      - - id: '12345'
                          type: file
                          original_name: Report.pdf
                          download_name: 3aa6a7.pdf
                        - id: '34325'
                          type: file
                          original_name: Report.pdf
                          download_name: 5d53f2.pdf
        '400':
          description: 'Returns an error if some of the parameters are missing or not valid.  In most cases, this error might happen because the JSON request body is not valid JSON, any of the items has an incorrect or missing ID, any of the items is not a file or folder, or the root folder with ID `0` has been added to the list of folders to add to the archive.  The following is a list of common error codes for this response.  * `bad_request` - the request body is missing, invalid, or both the list of files and folders are empty. Additionally, it this error might be returned when attempting to add the root folder with ID `0` to an archive. * `zip_download_file_count_exceeded_limit` - the requested files and folders would result in an archive with more than 10,000 files. The request will have to be split into multiple requests to reduce the number of files per archive. * `zip_download_pre_compressed_bytes_exceeded_limit` - the requested files and folders would result in an archive with more than 32GB of content. The request will have to be split into multiple requests to reduce the size of the archive.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned when an authorization header is provided but the user does not have access to the items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/zip_downloads/{zip_download_id}/content':
    get:
      operationId: get_zip_downloads_id_content
      summary: Download zip archive
      tags:
        - Zip Downloads
      x-box-tag: zip_downloads
      x-box-reference-category: zip_downloads
      description: 'Returns the contents of a `zip` archive in binary format. This URL does not require any form of authentication and could be used in a user''s browser to download the archive to a user''s device.  By default, this URL is only valid for a few seconds from the creation of the request for this archive. Once a download has started it can not be stopped and resumed, instead a new request for a zip archive would need to be created.  The URL of this endpoint should not be considered as fixed. Instead, use the [Create zip download](e://post_zip_downloads) API to request to create a `zip` archive, and then follow the `download_url` field in the response to this endpoint.'
      security: []
      servers:
        - url: 'https://dl.boxcloud.com/2.0'
          description: An opaque server URL for downloading zip downloads. The format of this URL might change over time.
      parameters:
        - name: zip_download_id
          description: The unique identifier that represent this `zip` archive.
          example: Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Returns the content of the items requested for this download, formatted as a stream of files and folders in a `zip` archive.'
          headers:
            Content-Disposition:
              description: The name of the archive to be downloaded
              schema:
                type: string
                example: attachment;filename="Avatars.zip";filename*=UTF-8''Avatars.zip
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: 'The binary content of the archive, which will include the items requested for this download.'
        '404':
          description: 'Returns an error if the ID of this download request is not valid. This error can also be returned if this URL has been called before. To re-download this archive, please create a new request for a zip download.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '429':
          description: Returns an error if the number of concurrent zip downloads has been reached for either the user or the enterprise.  * `user_too_many_concurrent_downloads` - the maximum of 5 parallel downloads of zip archives per user has been met. * `enterprise_too_many_concurrent_downloads` - the maximum of 10 parallel downloads of zip archives per enterprise has been met.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
  '/zip_downloads/{zip_download_id}/status':
    get:
      operationId: get_zip_downloads_id_status
      summary: Get zip download status
      tags:
        - Zip Downloads
      x-box-tag: zip_downloads
      x-box-reference-category: zip_downloads
      description: 'Returns the download status of a `zip` archive, allowing an application to inspect the progress of the download as well as the number of items that might have been skipped.  This endpoint can only be accessed once the download has started. Subsequently this endpoint is valid for 12 hours from the start of the download.  The URL of this endpoint should not be considered as fixed. Instead, use the [Create zip download](e://post_zip_downloads) API to request to create a `zip` archive, and then follow the `status_url` field in the response to this endpoint.'
      parameters:
        - name: zip_download_id
          description: The unique identifier that represent this `zip` archive.
          example: Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the status of the `zip` archive that is being downloaded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZipDownloadStatus'
        '401':
          description: Returned when the access token provided in the `Authorization` header is not recognized or not provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '403':
          description: Returned when an authorization header is provided but the user does not have access to the items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        '404':
          description: 'Returns an error if the ID of this download request is not valid, or if the status of a download is requested before the download has been started.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
        default:
          description: An unexpected client error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
components:
  securitySchemes:
    OAuth2Security:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://account.box.com/api/oauth2/authorize'
          tokenUrl: 'https://api.box.com/oauth2/token'
          scopes:
            root_readonly: Read all files and folders stored in Box
            root_readwrite: Read and write all files and folders stored in Box
            manage_app_users: Provision and manage app users
            manage_managed_users: Provision and manage managed users
            manage_groups: Manage an enterprise's groups
            manage_webhook: Create webhooks programmatically through the API
            manage_enterprise_properties: Manage enterprise properties
            manage_data_retention: Manage data retention polices
            manage_legal_hold: Manage Legal Holds
  schemas:
    PostOAuth2Token:
      title: Token request
      type: object
      description: A request for a new OAuth 2.0 token
      required:
        - grant_type
      properties:
        grant_type:
          type: string
          format: urn
          example: authorization_code
          description: 'The type of request being made, either using a client-side obtained authorization code, a refresh token, a JWT assertion, client credentials grant or another access token for the purpose of downscoping a token.'
          enum:
            - authorization_code
            - refresh_token
            - client_credentials
            - 'urn:ietf:params:oauth:grant-type:jwt-bearer'
            - 'urn:ietf:params:oauth:grant-type:token-exchange'
        client_id:
          type: string
          description: 'The Client ID of the application requesting an access token.  Used in combination with `authorization_code`, `client_credentials`, or `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.'
          example: ly1nj6n11vionaie65emwzk575hnnmrk
        client_secret:
          type: string
          description: 'The client secret of the application requesting an access token.  Used in combination with `authorization_code`, `client_credentials`, or `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.'
          example: hOzsTeFlT6ko0dme22uGbQal04SBPYc1
        code:
          type: string
          format: token
          description: The client-side authorization code passed to your application by Box in the browser redirect after the user has successfully granted your application permission to make API calls on their behalf.  Used in combination with `authorization_code` as the `grant_type`.
          example: n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW
        refresh_token:
          type: string
          format: token
          description: A refresh token used to get a new access token with.  Used in combination with `refresh_token` as the `grant_type`.
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
        assertion:
          type: string
          format: jwt
          description: 'A JWT assertion for which to request a new access token.  Used in combination with `urn:ietf:params:oauth:grant-type:jwt-bearer` as the `grant_type`.'
          example: xxxxx.yyyyy.zzzzz
        subject_token:
          type: string
          format: token
          description: 'The token to exchange for a downscoped token. This can be a regular access token, a JWT assertion, or an app token.  Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`.'
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
        subject_token_type:
          type: string
          example: 'urn:ietf:params:oauth:token-type:access_token'
          description: 'The type of `subject_token` passed in.  Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`.'
          enum:
            - 'urn:ietf:params:oauth:token-type:access_token'
        actor_token:
          type: string
          format: token
          description: 'The token used to create an annotator token. This is a JWT assertion.  Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`.'
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
        actor_token_type:
          type: string
          format: urn
          example: 'urn:ietf:params:oauth:token-type:id_token'
          description: 'The type of `actor_token` passed in.  Used in combination with `urn:ietf:params:oauth:grant-type:token-exchange` as the `grant_type`.'
          enum:
            - 'urn:ietf:params:oauth:token-type:id_token'
        scope:
          type: string
          format: space_delimited_list
          description: The space-delimited list of scopes that you want apply to the new access token.  The `subject_token` will need to have all of these scopes or the call will error with **401 Unauthorized**.
          example: item_upload item_preview base_explorer
        resource:
          type: string
          format: url
          description: Full URL for the file that the token should be generated for.
          example: 'https://api.box.com/2.0/files/123456'
        box_subject_type:
          type: string
          example: enterprise
          description: Used in combination with `client_credentials` as the `grant_type`.
          enum:
            - enterprise
            - user
        box_subject_id:
          type: string
          example: '123456789'
          description: Used in combination with `client_credentials` as the `grant_type`. Value is determined by `box_subject_type`. If `user` use user ID and if `enterprise` use enterprise ID.
        box_shared_link:
          type: string
          format: url
          description: Full URL of the shared link on the file or folder that the token should be generated for.
          example: 'https://cloud.box.com/s/123456'
    PostOAuth2Token--RefreshAccessToken:
      title: Refresh access token
      type: object
      description: A request to refresh an Access Token. Use this API to refresh an expired Access Token using a valid Refresh Token.
      required:
        - grant_type
        - client_id
        - client_secret
        - refresh_token
      properties:
        grant_type:
          type: string
          format: urn
          example: refresh_token
          description: 'The type of request being made, in this case a refresh request.'
          enum:
            - refresh_token
        client_id:
          type: string
          description: The client ID of the application requesting to refresh the token.
          example: ly1nj6n11vionaie65emwzk575hnnmrk
        client_secret:
          type: string
          description: The client secret of the application requesting to refresh the token.
          example: hOzsTeFlT6ko0dme22uGbQal04SBPYc1
        refresh_token:
          type: string
          format: token
          description: The refresh token to refresh.
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
    PostOAuth2Revoke:
      title: Token revocation request
      type: object
      description: A request to revoke an OAuth 2.0 token
      required:
        - grant_type
      properties:
        client_id:
          type: string
          description: The Client ID of the application requesting to revoke the access token.
          example: ly1nj6n11vionaie65emwzk575hnnmrk
        client_secret:
          type: string
          description: The client secret of the application requesting to revoke an access token.
          example: hOzsTeFlT6ko0dme22uGbQal04SBPYc1
        token:
          type: string
          format: token
          description: The access token to revoke.
          example: n22JPxrh18m4Y0wIZPIqYZK7VRrsMTWW
    ZipDownloadRequest:
      title: Create a `zip` archive
      type: object
      description: A request to create a `zip` archive to download
      required:
        - items
      properties:
        items:
          type: array
          description: A list of items to add to the `zip` archive. These can be folders or files.
          items:
            type: object
            description: An item to add to the `zip` archive. This can be a file or a folder.
            required:
              - type
              - id
            properties:
              type:
                type: string
                description: The type of the item to add to the archive.
                example: file
                enum:
                  - file
                  - folder.
              id:
                type: string
                description: The identifier of the item to add to the archive. When this item is a folder then this can not be the root folder with ID `0`.
                example: '12345'
        download_file_name:
          type: string
          description: 'The optional name of the `zip` archive. This name will be appended by the `.zip` file extension, for example `January Financials.zip`.'
          example: January Financials
    FileRequestUpdateRequest:
      title: File Request (Update)
      type: object
      description: The request body to update a file request.
      properties:
        title:
          type: string
          description: An optional new title for the file request. This can be used to change the title of the file request.  This will default to the value on the existing file request.
          example: Please upload required documents
        description:
          type: string
          description: An optional new description for the file request. This can be used to change the description of the file request.  This will default to the value on the existing file request.
          example: Please upload required documents
        status:
          type: string
          description: 'An optional new status of the file request.  When the status is set to `inactive`, the file request will no longer accept new submissions, and any visitor to the file request URL will receive a `HTTP 404` status code.  This will default to the value on the existing file request.'
          example: active
          enum:
            - active
            - inactive
        is_email_required:
          type: boolean
          example: true
          description: 'Whether a file request submitter is required to provide their email address.  When this setting is set to true, the Box UI will show an email field on the file request form.  This will default to the value on the existing file request.'
        is_description_required:
          type: boolean
          example: true
          description: 'Whether a file request submitter is required to provide a description of the files they are submitting.  When this setting is set to true, the Box UI will show a description field on the file request form.  This will default to the value on the existing file request.'
        expires_at:
          type: string
          format: date-time
          description: 'The date after which a file request will no longer accept new submissions.  After this date, the `status` will automatically be set to `inactive`.  This will default to the value on the existing file request.'
          example: '2020-09-28T10:53:43-08:00'
    FileRequestCopyRequest:
      title: File Request (Copy)
      type: object
      description: The request body to copy a file request.
      required:
        - folder
      allOf:
        - $ref: '#/components/schemas/FileRequestUpdateRequest'
        - properties:
            folder:
              type: object
              description: The folder to associate the new file request to.
              required:
                - id
              properties:
                type:
                  type: string
                  example: folder
                  description: '`folder`'
                  enum:
                    - folder
                id:
                  type: string
                  example: '42037322'
                  description: The ID of the folder to associate the new file request to.
    ClientError:
      title: Client error
      type: object
      x-box-resource-id: client_error
      description: A generic error
      properties:
        type:
          description: '`error`'
          example: error
          type: string
          enum:
            - error
          nullable: false
        status:
          description: The HTTP status of the response.
          example: 400
          type: integer
          format: int32
          nullable: false
        code:
          description: A Box-specific error code
          example: item_name_invalid
          type: string
          enum:
            - created
            - accepted
            - no_content
            - redirect
            - not_modified
            - bad_request
            - unauthorized
            - forbidden
            - not_found
            - method_not_allowed
            - conflict
            - precondition_failed
            - too_many_requests
            - internal_server_error
            - unavailable
            - item_name_invalid
        message:
          description: A short message describing the error.
          example: Method Not Allowed
          type: string
          nullable: false
        context_info:
          description: A free-form object that contains additional context about the error. The possible fields are defined on a per-endpoint basis.
          type: object
          properties:
            conflicts:
              type: array
              description: A list of the file conflicts that caused this error.
              items:
                $ref: '#/components/schemas/FileConflict'
        help_url:
          description: A URL that links to more information about why this error occurred.
          example: 'http://developers.box.com/docs/#errors'
          type: string
          nullable: false
        request_id:
          description: 'A unique identifier for this response, which can be used when contacting Box support.'
          type: string
          example: abcdef123456
          nullable: false
    ConflictError:
      title: Conflict error
      type: object
      x-box-resource-id: conflict_error
      x-box-tag: uploads
      description: The error that occurs when a file can not be created due to a conflict.
      allOf:
        - $ref: '#/components/schemas/ClientError'
        - properties:
            context_info:
              type: object
              properties:
                conflicts:
                  type: array
                  description: A list of the file conflicts that caused this error.
                  items:
                    $ref: '#/components/schemas/FileConflict'
    OAuth2Error:
      title: OAuth 2.0 error
      type: object
      x-box-resource-id: oauth2_error
      x-box-tag: authorization
      description: An OAuth 2.0 error
      properties:
        error:
          type: string
          example: invalid_client
          description: The type of the error returned.
        error_description:
          type: string
          example: The client credentials are not valid
          description: The type of the error returned.
    SkillInvocation:
      title: Skill webhook payload
      x-box-resource-id: skill_invocation
      x-box-tag: skills
      description: The payload of a Box skill as sent to a skill's `invocation_url`.
      properties:
        type:
          type: string
          description: '`skill_invocation`'
          example: skill_invocation
          enum:
            - skill_invocation
        id:
          type: string
          description: Unique identifier for the invocation request.
          example: fd1d2e53-35f5-41fb-9c25-4ba326daf2f9_341016304
        skill:
          title: Skill
          description: An object representing a skill
          properties:
            id:
              type: string
              description: The unique identifier for this skill
              example: '11446498'
            type:
              type: string
              description: '`skill`'
              example: skill
              enum:
                - skill
            name:
              type: string
              description: The name of the skill
              example: Hello World Skill
            api_key:
              type: string
              description: The client ID of the application
              example: hxel2s12wd2h9r8ne103c4gjbqefofih
        token:
          type: object
          description: The read-only and read-write access tokens for this item
          properties:
            read:
              type: object
              description: The basics of an access token
              properties:
                access_token:
                  type: string
                  format: token
                  example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
                  description: The requested access token.
                expires_in:
                  type: integer
                  format: int64
                  example: 3600
                  description: The time in seconds in seconds by which this token will expire.
                token_type:
                  type: string
                  enum:
                    - bearer
                  example: bearer
                  description: The type of access token returned.
                restricted_to:
                  type: array
                  description: 'The permissions that this access token permits, providing a list of resources (files, folders, etc) and the scopes permitted for each of those resources.'
                  items:
                    $ref: '#/components/schemas/FileScope'
            write:
              type: object
              description: The basics of an access token
              properties:
                access_token:
                  type: string
                  format: token
                  example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
                  description: The requested access token.
                expires_in:
                  type: integer
                  format: int64
                  example: 3600
                  description: The time in seconds in seconds by which this token will expire.
                token_type:
                  type: string
                  enum:
                    - bearer
                  example: bearer
                  description: The type of access token returned.
                restricted_to:
                  type: array
                  description: 'The permissions that this access token permits, providing a list of resources (files, folders, etc) and the scopes permitted for each of those resources.'
                  items:
                    $ref: '#/components/schemas/FileScope'
        status:
          type: object
          description: The details status of this event.
          properties:
            state:
              type: string
              example: invoked
              description: The state of this event.  * `invoked` - Triggered the skill with event details to start   applying skill on the file. * `processing` - Currently processing. * `success` - Completed processing with a success. * `transient_failure` - Encountered an issue which can be   retried. * `permanent_failure` -  Encountered a permanent issue and   retry would not help.
              enum:
                - invoked
                - processing
                - success
                - transient_failure
                - permanent_failure
            message:
              type: string
              example: Example
              description: Status information
            error_code:
              type: string
              example: '400'
              description: 'Error code information, if error occurred.'
            additional_info:
              type: string
              example: Example
              description: Additional status information.
        created_at:
          type: string
          format: date-time
          description: The time this invocation was created.
          example: '2012-12-12T10:53:43-08:00'
        trigger:
          type: string
          example: FILE_CONTENT
          description: Action that triggered the invocation
        enterprise:
          title: Enterprise
          type: object
          description: A representation of a Box enterprise
          properties:
            id:
              type: string
              description: The unique identifier for this enterprise.
              example: '11446498'
            type:
              type: string
              description: '`enterprise`'
              example: enterprise
              enum:
                - enterprise
            name:
              description: The name of the enterprise
              example: Acme Inc.
              type: string
        source:
          oneOf:
            - $ref: '#/components/schemas/File'
            - $ref: '#/components/schemas/Folder'
        event:
          description: The event that triggered this invocation
          $ref: '#/components/schemas/Event'
    WebhookInvocation:
      title: Webhook (V2) payload
      x-box-resource-id: webhook_invocation
      x-box-tag: webhooks
      description: The event that is sent to a webhook address when an event happens.
      properties:
        id:
          type: string
          description: The unique identifier for this webhook invocation
          example: '11446498'
        type:
          type: string
          description: '`webhook_event`'
          example: webhook_event
          enum:
            - webhook_event
        webhook:
          description: The webhook object that triggered this event
          $ref: '#/components/schemas/Webhook'
        created_by:
          description: The user that triggered this event
          $ref: '#/components/schemas/User--Mini'
        created_at:
          type: string
          format: date-time
          description: A timestamp identifying the time that the webhook event was triggered.
          example: '2012-12-12T10:53:43-08:00'
        trigger:
          title: Webhook Trigger
          example: FILE.UPLOADED
          type: string
          description: The event name that triggered this webhook
          enum:
            - FILE.UPLOADED
            - FILE.PREVIEWED
            - FILE.DOWNLOADED
            - FILE.TRASHED
            - FILE.DELETED
            - FILE.RESTORED
            - FILE.COPIED
            - FILE.MOVED
            - FILE.LOCKED
            - FILE.UNLOCKED
            - FILE.RENAMED
            - COMMENT.CREATED
            - COMMENT.UPDATED
            - COMMENT.DELETED
            - TASK_ASSIGNMENT.CREATED
            - TASK_ASSIGNMENT.UPDATED
            - METADATA_INSTANCE.CREATED
            - METADATA_INSTANCE.UPDATED
            - METADATA_INSTANCE.DELETED
            - FOLDER.CREATED
            - FOLDER.RENAMED
            - FOLDER.DOWNLOADED
            - FOLDER.RESTORED
            - FOLDER.DELETED
            - FOLDER.COPIED
            - FOLDER.MOVED
            - FOLDER.TRASHED
            - WEBHOOK.DELETED
            - COLLABORATION.CREATED
            - COLLABORATION.ACCEPTED
            - COLLABORATION.REJECTED
            - COLLABORATION.REMOVED
            - COLLABORATION.UPDATED
            - SHARED_LINK.DELETED
            - SHARED_LINK.CREATED
            - SHARED_LINK.UPDATED
        source:
          oneOf:
            - $ref: '#/components/schemas/File'
            - $ref: '#/components/schemas/Folder'
    AccessToken:
      title: Access token
      type: object
      x-box-resource-id: access_token
      x-box-tag: authorization
      description: A token that can be used to make authenticated API calls.
      properties:
        access_token:
          type: string
          format: token
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
          description: The requested access token.
        expires_in:
          type: integer
          format: int64
          example: 3600
          description: The time in seconds in seconds by which this token will expire.
        token_type:
          type: string
          enum:
            - bearer
          example: bearer
          description: The type of access token returned.
        restricted_to:
          type: array
          description: 'The permissions that this access token permits, providing a list of resources (files, folders, etc) and the scopes permitted for each of those resources.'
          items:
            $ref: '#/components/schemas/FileScope'
        refresh_token:
          type: string
          format: token
          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
          description: 'The refresh token for this access token, which can be used to request a new access token when the current one expires.'
        issued_token_type:
          type: string
          format: urn
          example: 'urn:ietf:params:oauth:token-type:access_token'
          enum:
            - 'urn:ietf:params:oauth:token-type:access_token'
          description: The type of downscoped access token returned. This is only returned if an access token has been downscoped.
    ClassificationTemplate:
      title: Classification Template
      type: object
      x-box-resource-id: classification_template
      x-box-tag: classifications
      description: A metadata template that holds the security classifications defined by an enterprise.
      properties:
        id:
          type: string
          example: 58063d82-4128-7b43-bba9-92f706befcdf
          description: The ID of the classification template.
        type:
          type: string
          description: '`metadata_template`'
          example: metadata_template
          enum:
            - metadata_template
          nullable: false
        scope:
          type: string
          description: 'The scope of the classification template. This is in the format `enterprise_{id}` where the `id` is the enterprise ID.'
          example: enterprise_123456
        templateKey:
          type: string
          example: securityClassification-6VMVochwUWo
          description: '`securityClassification-6VMVochwUWo`'
          enum:
            - securityClassification-6VMVochwUWo
        displayName:
          type: string
          example: Classification
          description: The name of this template as shown in web and mobile interfaces.
          enum:
            - Classification
        hidden:
          type: boolean
          example: false
          description: This template is always available in web and mobile interfaces.
        copyInstanceOnItemCopy:
          type: boolean
          example: true
          description: Classifications are always copied along when the file or folder is copied.
        fields:
          type: array
          maxItems: 1
          minItems: 1
          description: 'A list of fields for this classification template. This includes only one field, the `Box__Security__Classification__Key`, which defines the different classifications available in this enterprise.'
          items:
            type: object
            description: The metadata template field that represents the available classifications.
            properties:
              id:
                type: string
                example: 822227e0-47a5-921b-88a8-494760b2e6d2
                description: The unique ID of the field.
              type:
                type: string
                example: enum
                description: '`enum`'
                enum:
                  - enum
              key:
                type: string
                example: Box__Security__Classification__Key
                description: '`Box__Security__Classification__Key`'
                enum:
                  - Box__Security__Classification__Key
              displayName:
                type: string
                example: Classification
                description: '`Classification`'
                enum:
                  - Classification
              hidden:
                type: boolean
                example: false
                description: Classifications are always visible to web and mobile users.
              options:
                type: array
                description: A list of classifications available in this enterprise.
                minItems: 1
                items:
                  type: object
                  description: A single classification available in this enterprise.
                  properties:
                    id:
                      type: string
                      example: 46aea176-3483-4431-856c-6b5b13d1cc50
                      description: The unique ID of this classification.
                    key:
                      type: string
                      example: Sensitive
                      description: The display name and key for this classification.
                    staticConfig:
                      type: object
                      description: Additional information about the classification.
                      properties:
                        classification:
                          type: object
                          description: 'Additional information about the classification.  This is not an exclusive list of properties, and more object fields might be returned. These fields are used for internal Box Shield and Box Governance purposes and no additional value must be derived from these fields.'
                          properties:
                            classificationDefinition:
                              type: string
                              example: Sensitive information
                              description: A longer description of the classification.
                            colorID:
                              type: number
                              example: 4
                              description: 'An internal Box identifier used to assign a color to a classification label.  Mapping between a `colorID` and a color may change without notice. Currently, the color mappings are as follows.  * `0`: Yellow * `1`: Orange * `2`: Watermelon red * `3`: Purple rain * `4`: Light blue * `5`: Dark blue * `6`: Light green * `7`: Gray'
    Collaboration:
      title: Collaboration
      type: object
      x-box-resource-id: collaboration
      x-box-tag: user_collaborations
      description: 'Collaborations define access permissions for users and groups to files and folders, similar to access control lists. A collaboration object grants a user or group access to a file or folder with permissions defined by a specific role.'
      properties:
        id:
          type: string
          description: The unique identifier for this collaboration.
          example: '12345678'
        type:
          type: string
          description: '`collaboration`'
          example: collaboration
          enum:
            - collaboration
        item:
          oneOf:
            - $ref: '#/components/schemas/File'
            - $ref: '#/components/schemas/Folder'
            - $ref: '#/components/schemas/WebLink'
          nullable: true
        accessible_by:
          description: The user or group that is granted access
          $ref: '#/components/schemas/User--Mini'
        invite_email:
          type: string
          nullable: true
          example: john@example.com
          description: 'The email address used to invite an unregistered collaborator, if they are not a registered user.'
        role:
          type: string
          example: editor
          enum:
            - editor
            - viewer
            - previewer
            - uploader
            - previewer uploader
            - viewer uploader
            - co-owner
            - owner
          description: The level of access granted.
        expires_at:
          type: string
          nullable: true
          format: date-time
          example: '2012-12-26T10:53:43-08:00'
          description: 'When the collaboration will expire, or `null` if no expiration date is set.'
        status:
          type: string
          example: accepted
          enum:
            - accepted
            - pending
            - rejected
          description: The status of the collaboration invitation.
        acknowledged_at:
          type: string
          format: date-time
          example: '2012-12-12T10:55:20-08:00'
          description: When the `status` of the collaboration object changed to `accepted` or `rejected`
        created_by:
          description: The user who created the collaboration object
          $ref: '#/components/schemas/User--Mini'
        created_at:
          type: string
          format: date-time
          example: '2012-12-12T10:53:43-08:00'
          description: When the collaboration object was created
        modified_at:
          type: string
          format: date-time
          example: '2012-12-12T10:53:43-08:00'
          description: When the collaboration object was last modified
        acceptance_requirements_status:
          type: object
          description: The terms of service that must be accepted before the collaboration can be accepted.
          properties:
            terms_of_service_requirement:
              type: object
              properties:
                is_accepted:
                  type: boolean
                  nullable: true
                  example: true
                  description: Whether or not the terms of service have been accepted.  The field is `null` when there is no terms of service required.
                terms_of_service:
                  allOf:
                    - $ref: '#/components/schemas/TermsOfService--Mini'
                    - description: The terms of service that must be accepted before the collaboration can be accepted. The field is `null` when there is no terms of service required.
            strong_password_requirement:
              type: object
              properties:
                enterprise_has_strong_password_required_for_external_users:
                  type: boolean
                  example: true
                  description: Whether or not the enterprise that owns the content requires a strong password to collaborate on the content.
                user_has_strong_password:
                  type: boolean
                  nullable: true
                  example: true
                  description: Whether or not the user has a strong password set for their account. The field is `null` when a strong password is not required.
            two_factor_authentication_requirement:
              type: object
              properties:
                enterprise_has_two_factor_auth_enabled:
                  type: boolean
                  example: true
                  description: Whether or not the enterprise that owns the content requires two-factor authentication to be enabled in order to collaborate on the content.
                user_has_two_factor_authentication_enabled:
                  type: boolean
                  nullable: true
                  example: true
                  description: Whether or not the user has two-factor authentication enabled. The field is `null` when two-factor authentication is not required.
    Collaborations:
      title: Collaborations
      type: object
      x-box-resource-id: collaborations
      x-box-tag: user_collaborations
      description: A list of collaborations
      allOf:
        - type: object
          description: The part of an API response that describes pagination
          properties:
            total_count:
              description: 'One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            offset:
              description: 'The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 2000
              type: integer
              format: int64
            order:
              description: 'The order by which items are returned.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              type: array
              items:
                type: object
                description: The order in which a pagination is ordered
                properties:
                  by:
                    description: The field to order by
                    example: type
                    type: string
                  direction:
                    type: string
                    description: 'The direction to order by, either ascending or descending'
                    example: ASC
                    enum:
                      - ASC
                      - DESC
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/Collaboration'
    CollaborationAllowlistEntry:
      title: Allowed collaboration domain
      type: object
      x-box-resource-id: collaboration_allowlist_entry
      x-box-tag: collaboration_allowlist_entries
      description: An entry that describes an approved domain for which users can collaborate with files and folders in your enterprise or vice versa.
      properties:
        id:
          type: string
          description: The unique identifier for this entry
          example: '11446498'
        type:
          type: string
          description: '`collaboration_whitelist_entry`'
          example: collaboration_whitelist_entry
          enum:
            - collaboration_whitelist_entry
        domain:
          type: string
          example: example.com
          description: The whitelisted domain
        direction:
          type: string
          example: both
          description: The direction of the collaborations to allow.
          enum:
            - inbound
            - outbound
            - both
        enterprise:
          description: Collaboration allowlist enterprise.
          $ref: '#/components/schemas/CollaborationAllowlistEnterprise'
        created_at:
          type: string
          format: date-time
          description: The time the entry was created at
          example: '2012-12-12T10:53:43-08:00'
    CollaborationAllowlistEntries:
      title: Allowed collaboration domains
      type: object
      x-box-resource-id: collaboration_allowlist_entries
      x-box-tag: collaboration_allowlist_entries
      description: A list of allowed domains for collaboration.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/CollaborationAllowlistEntry'
    CollaborationAllowlistExemptTarget:
      title: Allowed collaboration domains user exemption
      type: object
      x-box-resource-id: collaboration_allowlist_exempt_target
      x-box-tag: collaboration_allowlist_exempt_targets
      description: The user that is exempt from any of the restrictions imposed by the list of allowed collaboration domains for this enterprise.
      properties:
        id:
          type: string
          description: The unique identifier for this exemption
          example: '11446498'
        type:
          type: string
          description: '`collaboration_whitelist`'
          example: collaboration_whitelist
          enum:
            - collaboration_whitelist
        enterprise:
          description: The enterprise this entry belongs to
          $ref: '#/components/schemas/CollaborationAllowlistEnterprise'
        user:
          description: The user that has been exempt
          $ref: '#/components/schemas/CollaborationAllowlistUser'
        created_at:
          type: string
          format: date-time
          description: The time the entry was created
          example: '2012-12-12T10:53:43-08:00'
        modified_at:
          type: string
          format: date-time
          description: The time the entry was modified
          example: '2012-12-12T10:53:43-08:00'
    CollaborationAllowlistExemptTargets:
      title: Allowed collaboration domains user exemptions
      type: object
      x-box-resource-id: collaboration_allowlist_exempt_targets
      x-box-tag: collaboration_allowlist_exempt_targets
      description: A list of users that is exempt from any of the restrictions imposed by the list of allowed collaboration domains for this enterprise.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/CollaborationAllowlistExemptTarget'
    Collection:
      title: Collection
      type: object
      x-box-resource-id: collection
      x-box-tag: collections
      description: 'A collection of items, including files and folders.  Currently, the only collection available is the `favorites` collection.  The contents of a collection can be explored in a similar way to which the contents of a folder is explored.'
      properties:
        id:
          type: string
          description: The unique identifier for this collection.
          example: '11446498'
        type:
          type: string
          description: '`collection`'
          example: collection
          enum:
            - collection
        name:
          type: string
          description: The name of the collection.
          enum:
            - Favorites
          example: Favorites
        collection_type:
          type: string
          description: The type of the collection. This is used to determine the proper visual treatment for collections.
          enum:
            - favorites
          example: favorites
    Collections:
      title: Collections
      type: object
      x-box-resource-id: collections
      x-box-tag: collections
      description: A list of collections
      allOf:
        - type: object
          description: The part of an API response that describes pagination
          properties:
            total_count:
              description: 'One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            offset:
              description: 'The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 2000
              type: integer
              format: int64
            order:
              description: 'The order by which items are returned.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              type: array
              items:
                type: object
                description: The order in which a pagination is ordered
                properties:
                  by:
                    description: The field to order by
                    example: type
                    type: string
                  direction:
                    type: string
                    description: 'The direction to order by, either ascending or descending'
                    example: ASC
                    enum:
                      - ASC
                      - DESC
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/Collection'
    Comment:
      title: Comment
      type: object
      description: Standard representation of a comment.
      x-box-resource-id: comment
      x-box-variant: standard
      allOf:
        - $ref: '#/components/schemas/Comment--Base'
        - properties:
            is_reply_comment:
              type: boolean
              description: Whether or not this comment is a reply to another comment
              example: true
            message:
              type: string
              example: '@Aaron Levie these tigers are cool!'
              description: 'The text of the comment, as provided by the user'
            created_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: A mini user object representing the author of the comment
            created_at:
              type: string
              format: date-time
              description: The time this comment was created
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: The time this comment was last modified
              example: '2012-12-12T10:53:43-08:00'
            item:
              allOf:
                - title: Reference
                  description: The bare basic reference for an object
                  type: object
                  properties:
                    id:
                      type: string
                      description: The unique identifier for this object
                      example: '11446498'
                    type:
                      type: string
                      description: The type for this object
                      example: file
                - description: The file this comment was placed on
    Comments:
      title: Comments
      type: object
      x-box-resource-id: comments
      x-box-tag: comments
      description: A list of comments
      allOf:
        - type: object
          description: The part of an API response that describes pagination
          properties:
            total_count:
              description: 'One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            offset:
              description: 'The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 2000
              type: integer
              format: int64
            order:
              description: 'The order by which items are returned.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              type: array
              items:
                type: object
                description: The order in which a pagination is ordered
                properties:
                  by:
                    description: The field to order by
                    example: type
                    type: string
                  direction:
                    type: string
                    description: 'The direction to order by, either ascending or descending'
                    example: ASC
                    enum:
                      - ASC
                      - DESC
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/Comment'
    Comment--Base:
      title: Comment (Base)
      type: object
      x-box-resource-id: comment--base
      x-box-sanitized: true
      x-box-tag: comments
      x-box-variants:
        - base
        - standard
        - full
      x-box-variant: base
      description: Base representation of a comment.
      properties:
        id:
          type: string
          description: The unique identifier for this comment.
          example: '11446498'
        type:
          type: string
          description: '`comment`'
          example: comment
          enum:
            - comment
    Comment--Full:
      title: Comment (Full)
      type: object
      x-box-resource-id: comment--full
      x-box-variant: full
      description: Comments are messages created on files. Comments can be made independently or created as responses to other comments
      allOf:
        - $ref: '#/components/schemas/Comment'
        - properties:
            tagged_message:
              type: string
              example: '@[1234567:Aaron Levie] these tigers are cool!'
              description: 'The string representing the comment text with @mentions included. @mention format is @[id:username] where `id` is user''s Box ID and `username` is their display name.'
    DevicePinner:
      title: Device pinner
      type: object
      x-box-resource-id: device_pinner
      x-box-tag: device_pinners
      description: Device pins allow enterprises to control what devices can use native Box applications.
      properties:
        id:
          type: string
          description: The unique identifier for this device pin.
          example: '11446498'
        type:
          type: string
          description: '`device_pinner`'
          example: device_pinner
          enum:
            - device_pinner
        owned_by:
          description: The user that the device pin belongs to
          $ref: '#/components/schemas/User--Mini'
        product_name:
          type: string
          description: The type of device being pinned
          example: iPad
        created_at:
          type: string
          format: date-time
          description: The time the device pin was created
          example: '2012-12-12T10:53:43-08:00'
        modified_at:
          type: string
          format: date-time
          description: The time the device pin was modified
          example: '2012-12-12T10:53:43-08:00'
    DevicePinners:
      title: Device pinners
      type: object
      x-box-resource-id: device_pinners
      x-box-tag: device_pinners
      description: A list of device pins
      properties:
        entries:
          type: array
          description: A entries of device pins
          items:
            $ref: '#/components/schemas/DevicePinner'
        limit:
          description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed.
          default: 100
          example: 200
          type: integer
          format: int64
        next_marker:
          description: The marker for the start of the next page of results.
          example: 3000
          type: integer
          format: int64
        order:
          description: The order by which items are returned.
          type: array
          items:
            type: object
            description: The order in which a pagination is ordered
            properties:
              by:
                description: The field that is ordered by
                example: id
                enum:
                  - id
                type: string
              direction:
                type: string
                description: 'The direction to order by, either ascending or descending'
                example: asc
                enum:
                  - asc
                  - desc
    EmailAlias:
      title: Email alias
      type: object
      x-box-resource-id: email_alias
      x-box-tag: email_aliases
      description: An email alias for a user.
      properties:
        id:
          type: string
          description: The unique identifier for this object
          example: '11446498'
        type:
          type: string
          description: Email alias type
          example: email_alias
          enum:
            - email_alias
        email:
          type: string
          description: The email address
          example: alias@example.com
        is_confirmed:
          type: boolean
          description: Whether the email address has been confirmed
          example: true
    EmailAliases:
      title: Email aliases
      type: object
      x-box-resource-id: email_aliases
      x-box-tag: email_aliases
      description: A list of email aliases
      properties:
        total_count:
          description: The number of email aliases.
          example: 5000
          type: integer
          format: int64
        entries:
          type: array
          description: The entries of email alias.
          items:
            $ref: '#/components/schemas/EmailAlias'
    Event:
      title: Event
      type: object
      x-box-resource-id: event
      x-box-tag: events
      description: The description of an event that happened within Box
      properties:
        type:
          description: '`event`'
          type: string
          example: event
        event_id:
          type: string
          example: f82c3ba03e41f7e8a7608363cc6c0390183c3f83
          description: The ID of the event object. You can use this to detect duplicate events
        created_by:
          description: 'The user that performed the action represented by the event. Some events may be performed by users not logged into Box. In that case, not all attributes of the object are populated and the event is attributed to a unknown user (`user_id = 2`)'
          $ref: '#/components/schemas/User--Mini'
        event_type:
          title: Event Type
          example: FILE_MARKED_MALICIOUS
          type: string
          description: An event type that can trigger an event
          enum:
            - ACCESS_GRANTED
            - ACCESS_REVOKED
            - ADD_DEVICE_ASSOCIATION
            - ADD_LOGIN_ACTIVITY_DEVICE
            - ADMIN_LOGIN
            - APPLICATION_CREATED
            - APPLICATION_PUBLIC_KEY_ADDED
            - APPLICATION_PUBLIC_KEY_DELETED
            - CHANGE_ADMIN_ROLE
            - CHANGE_FOLDER_PERMISSION
            - COLLABORATION_ACCEPT
            - COLLABORATION_EXPIRATION
            - COLLABORATION_INVITE
            - COLLABORATION_REMOVE
            - COLLABORATION_ROLE_CHANGE
            - COLLAB_ADD_COLLABORATOR
            - COLLAB_INVITE_COLLABORATOR
            - COLLAB_REMOVE_COLLABORATOR
            - COLLAB_ROLE_CHANGE
            - COMMENT_CREATE
            - COMMENT_DELETE
            - CONTENT_ACCESS
            - CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY
            - CONTENT_WORKFLOW_AUTOMATION_ADD
            - CONTENT_WORKFLOW_AUTOMATION_DELETE
            - CONTENT_WORKFLOW_POLICY_ADD
            - CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION
            - CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION
            - COPY
            - DATA_RETENTION_CREATE_RETENTION
            - DATA_RETENTION_REMOVE_RETENTION
            - DELETE
            - DELETE_USER
            - DEVICE_TRUST_CHECK_FAILED
            - DOWNLOAD
            - EDIT
            - EDIT_USER
            - EMAIL_ALIAS_CONFIRM
            - EMAIL_ALIAS_REMOVE
            - ENABLE_TWO_FACTOR_AUTH
            - ENTERPRISE_APP_AUTHORIZATION_UPDATE
            - FAILED_LOGIN
            - FILE_MARKED_MALICIOUS
            - FILE_WATERMARKED_DOWNLOAD
            - GROUP_ADD_ITEM
            - GROUP_ADD_USER
            - GROUP_CREATION
            - GROUP_DELETION
            - GROUP_EDITED
            - GROUP_REMOVE_ITEM
            - GROUP_REMOVE_USER
            - ITEM_COPY
            - ITEM_CREATE
            - ITEM_DOWNLOAD
            - ITEM_MAKE_CURRENT_VERSION
            - ITEM_MODIFY
            - ITEM_MOVE
            - ITEM_OPEN
            - ITEM_PREVIEW
            - ITEM_RENAME
            - ITEM_SHARED
            - ITEM_SHARED_CREATE
            - ITEM_SHARED_UNSHARE
            - ITEM_SHARED_UPDATE
            - ITEM_SYNC
            - ITEM_TRASH
            - ITEM_UNDELETE_VIA_TRASH
            - ITEM_UNSYNC
            - ITEM_UPLOAD
            - LEGAL_HOLD_ASSIGNMENT_CREATE
            - LEGAL_HOLD_ASSIGNMENT_DELETE
            - LEGAL_HOLD_POLICY_CREATE
            - LEGAL_HOLD_POLICY_DELETE
            - LEGAL_HOLD_POLICY_UPDATE
            - LOCK
            - LOCK_CREATE
            - LOCK_DESTROY
            - LOGIN
            - MASTER_INVITE_ACCEPT
            - MASTER_INVITE_REJECT
            - METADATA_INSTANCE_CREATE
            - METADATA_INSTANCE_DELETE
            - METADATA_INSTANCE_UPDATE
            - METADATA_TEMPLATE_CREATE
            - METADATA_TEMPLATE_DELETE
            - METADATA_TEMPLATE_UPDATE
            - MOVE
            - NEW_USER
            - PREVIEW
            - REMOVE_DEVICE_ASSOCIATION
            - REMOVE_LOGIN_ACTIVITY_DEVICE
            - RENAME
            - RETENTION_POLICY_ASSIGNMENT_ADD
            - SHARE
            - SHARE_EXPIRATION
            - SHIELD_ALERT
            - SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED
            - SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED_MISSING_JUSTIFICATION
            - SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED
            - SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED_MISSING_JUSTIFICATION
            - SHIELD_JUSTIFICATION_APPROVAL
            - STORAGE_EXPIRATION
            - TAG_ITEM_CREATE
            - TASK_ASSIGNMENT_CREATE
            - TASK_ASSIGNMENT_DELETE
            - TASK_ASSIGNMENT_UPDATE
            - TASK_CREATE
            - TASK_UPDATE
            - TERMS_OF_SERVICE_ACCEPT
            - TERMS_OF_SERVICE_REJECT
            - UNDELETE
            - UNLOCK
            - UNSHARE
            - UPDATE_COLLABORATION_EXPIRATION
            - UPDATE_SHARE_EXPIRATION
            - UPLOAD
            - USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE
            - WATERMARK_LABEL_CREATE
            - WATERMARK_LABEL_DELETE
        session_id:
          type: string
          example: 70090280850c8d2a1933c1
          description: The session of the user that performed the action. Not all events will populate this attribute.
        source:
          oneOf:
            - $ref: '#/components/schemas/User'
            - $ref: '#/components/schemas/EventSource'
        additional_details:
          type: object
          example:
            key: value
          description: This object provides additional information about the event if available.  This can include how a user performed an event as well as additional information to correlate an event to external KeySafe logs. Not all events have an `additional_details` object.  This object is only available in the Enterprise Events.
    Events:
      title: Events
      type: object
      x-box-resource-id: events
      x-box-tag: events
      description: A list of event objects
      properties:
        chunk_size:
          description: The number of events returned in this response.
          example: 2
          type: integer
          format: int64
        next_stream_position:
          description: The stream position of the start of the next page (chunk) of events.
          example: '1152922976252290886'
          type: string
        entries:
          type: array
          description: The description of an events that happened within Box.
          items:
            $ref: '#/components/schemas/Event'
    File:
      title: File
      type: object
      x-box-resource-id: file
      x-box-variant: standard
      description: 'A standard representation of a file, as returned from any file API endpoints by default'
      allOf:
        - $ref: '#/components/schemas/File--Mini'
        - properties:
            description:
              type: string
              nullable: false
              description: The optional description of this file
              maxLength: 256
              example: Contract for Q1 renewal
            size:
              type: integer
              nullable: false
              description: The file size in bytes. Be careful parsing this integer as it can get very large and cause an integer overflow.
              example: 629644
            path_collection:
              allOf:
                - title: Path collection
                  description: A list of parent folders for an item.
                  type: object
                  properties:
                    total_count:
                      description: The number of folders in this list.
                      example: 1
                      type: integer
                      format: int64
                      nullable: false
                    entries:
                      type: array
                      description: The parent folders for this item
                      nullable: false
                      items:
                        $ref: '#/components/schemas/Folder--Mini'
                - description: 'The tree of folders that this file is contained in, starting at the root.'
                - nullable: false
            created_at:
              type: string
              format: date-time
              nullable: false
              description: The date and time when the file was created on Box.
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              nullable: false
              description: The date and time when the file was last updated on Box.
              example: '2012-12-12T10:53:43-08:00'
            trashed_at:
              type: string
              format: date-time
              nullable: true
              description: The time at which this file was put in the trash.
              example: '2012-12-12T10:53:43-08:00'
            purged_at:
              type: string
              format: date-time
              nullable: true
              description: The time at which this file is expected to be purged from the trash.
              example: '2012-12-12T10:53:43-08:00'
            content_created_at:
              type: string
              format: date-time
              nullable: true
              description: 'The date and time at which this file was originally created, which might be before it was uploaded to Box.'
              example: '2012-12-12T10:53:43-08:00'
            content_modified_at:
              type: string
              format: date-time
              nullable: true
              description: 'The date and time at which this file was last updated, which might be before it was uploaded to Box.'
              example: '2012-12-12T10:53:43-08:00'
            created_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who created this file
            modified_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who last modified this file
                - nullable: false
            owned_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who owns this file
                - nullable: false
            shared_link:
              allOf:
                - title: Shared link
                  description: 'Shared links provide direct, read-only access to files or folder on Box.  Shared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users.'
                  type: object
                  properties:
                    url:
                      type: string
                      format: url
                      description: The URL that can be used to access the item on Box.  This URL will display the item in Box's preview UI where the file can be downloaded if allowed.  This URL will continue to work even when a custom `vanity_url` has been set for this shared link.
                      example: 'https://www.box.com/s/vspke7y05sb214wjokpk'
                      nullable: false
                    download_url:
                      type: string
                      format: url
                      x-box-premium-feature: true
                      description: A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.  This property will be `null` for folders.
                      example: 'https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg'
                      nullable: true
                    vanity_url:
                      type: string
                      format: url
                      description: The "Custom URL" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application.
                      example: 'https://acme.app.box.com/v/my_url/'
                      nullable: true
                    vanity_name:
                      type: string
                      description: 'The custom name of a shared link, as used in the `vanity_url` field.'
                      example: my_url
                      nullable: true
                    access:
                      type: string
                      description: 'The access level for this shared link.  * `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are    collaborators on this item  If this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin.'
                      enum:
                        - open
                        - company
                        - collaborators
                      example: open
                      nullable: false
                    effective_access:
                      type: string
                      description: The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels.
                      enum:
                        - open
                        - company
                        - collaborators
                      example: company
                      nullable: false
                    effective_permission:
                      type: string
                      description: The effective permissions for this shared link.
                      enum:
                        - can_download
                        - can_preview
                      example: can_download
                      nullable: false
                    unshared_at:
                      type: string
                      format: date-time
                      description: The date and time when this link will be unshared. This field can only be set by users with paid accounts.
                      example: '2018-04-13T13:53:23-07:00'
                      nullable: true
                    is_password_enabled:
                      type: boolean
                      description: Defines if the shared link requires a password to access the item.
                      example: true
                      nullable: false
                    permissions:
                      type: object
                      description: Defines if this link allows a user to preview and download an item.
                      properties:
                        can_download:
                          type: boolean
                          example: true
                          nullable: false
                          description: 'Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.  This value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`.'
                        can_preview:
                          type: boolean
                          example: true
                          nullable: false
                          description: Defines if the shared link allows for the item to be previewed.  This value is always `true`. For shared links on folders this also applies to any items in the folder.
                    download_count:
                      type: integer
                      example: 3
                      description: The number of times this item has been downloaded.
                      nullable: false
                    preview_count:
                      type: integer
                      example: 3
                      description: The number of times this item has been previewed.
                      nullable: false
                - description: The shared link for this file. This will be `null` if no shared link has been created for this file.
                - nullable: true
            parent:
              allOf:
                - $ref: '#/components/schemas/Folder--Mini'
                - description: The folder that this file is located within.
              nullable: true
            item_status:
              type: string
              description: Defines if this item has been deleted or not.  * `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted.
              enum:
                - active
                - trashed
                - deleted
              nullable: false
              example: active
    FileConflict:
      title: File (Conflict)
      type: object
      x-box-sanitized: true
      x-box-resource-id: file_conflict
      x-box-tag: null
      description: A representation of a file that is used to show
      allOf:
        - $ref: '#/components/schemas/File--Mini'
        - properties:
            sha1:
              type: string
              example: 85136C79CBF9FE36BB9D05D0639C70C265C18D37
              description: The SHA1 hash of the file.
            file_version:
              $ref: '#/components/schemas/FileVersion--Mini'
    Files:
      title: Files
      type: object
      x-box-resource-id: files
      x-box-tag: files
      description: A list of files
      properties:
        total_count:
          description: The number of files.
          example: 1
          type: integer
          format: int64
        entries:
          type: array
          description: A list of files
          items:
            $ref: '#/components/schemas/File'
    File--Full:
      title: File (Full)
      type: object
      x-box-resource-id: file--full
      x-box-variant: full
      description: 'A full representation of a file, as can be returned from any file API endpoints by default'
      allOf:
        - $ref: '#/components/schemas/File'
        - properties:
            version_number:
              type: string
              example: '1'
              description: The version number of this file
            comment_count:
              type: integer
              example: 10
              description: The number of comments on this file
            permissions:
              allOf:
                - type: object
                  description: The permissions that the authenticated user has for a file.
                  allOf:
                    - type: object
                      description: The permissions that the authenticated user has for an item.
                      properties:
                        can_delete:
                          type: boolean
                          description: Specifies if the current user can delete this item.
                          example: true
                          nullable: false
                        can_download:
                          type: boolean
                          description: Specifies if the current user can download this item.
                          example: true
                          nullable: false
                        can_invite_collaborator:
                          type: boolean
                          description: 'Specifies if the current user can invite new users to collaborate on this item, and if the user can update the role of a user already collaborated on this item.'
                          example: true
                          nullable: false
                        can_rename:
                          type: boolean
                          description: Specifies if the user can rename this item.
                          example: true
                          nullable: false
                        can_set_share_access:
                          type: boolean
                          description: Specifies if the user can change the access level of an existing shared link on this item.
                          example: true
                          nullable: false
                        can_share:
                          type: boolean
                          description: Specifies if the user can create a shared link for this item.
                          example: true
                          nullable: false
                    - properties:
                        can_annotate:
                          type: boolean
                          description: Specifies if the user can place annotations on this file.
                          example: true
                          nullable: false
                        can_comment:
                          type: boolean
                          description: Specifies if the user can place comments on this file.
                          example: true
                          nullable: false
                        can_preview:
                          type: boolean
                          description: Specifies if the user can preview this file.
                          example: true
                          nullable: false
                        can_upload:
                          type: boolean
                          description: Specifies if the user can upload a new version of this file.
                          example: true
                          nullable: false
                        can_view_annotations_all:
                          type: boolean
                          description: Specifies if the user view all annotations placed on this file
                          example: true
                          nullable: false
                        can_view_annotations_self:
                          type: boolean
                          description: Specifies if the user view annotations placed by themselves on this file
                          example: true
                          nullable: false
                - description: Describes the permissions that the current user has for this file.
                - nullable: false
            tags:
              allOf:
                - type: array
                  example:
                    - approved
                  items:
                    type: string
                  minItems: 1
                  maxItems: 100
                  description: 'The tags for this item. These tags are shown in the Box web app and mobile apps next to an item.  To add or remove a tag, retrieve the item''s current tags, modify them, and then update this field.  There is a limit of 100 tags per item, and 10,000 unique tags per enterprise.'
                - nullable: false
            lock:
              allOf:
                - title: Lock
                  type: object
                  description: 'The lock held on a file. A lock prevents a file from being moved, renamed, or otherwise changed by anyone else than the user who created the lock.'
                  properties:
                    id:
                      type: string
                      description: The unique identifier for this lock
                      example: '11446498'
                    type:
                      type: string
                      description: '`lock`'
                      example: lock
                      enum:
                        - lock
                    created_by:
                      allOf:
                        - $ref: '#/components/schemas/User--Mini'
                        - description: The user who created the lock.
                    created_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: The time this lock was created at.
                    expired_at:
                      type: string
                      format: date-time
                      example: '2012-12-12T10:53:43-08:00'
                      description: 'The time this lock is to expire at, which might be in the past.'
                    is_download_prevented:
                      type: boolean
                      example: true
                      description: Whether or not the file can be downloaded while locked.
                - description: 'The lock held on this file. If there is no lock, this can either be `null` or have a timestamp in the past.'
              nullable: true
            extension:
              type: string
              example: pdf
              description: 'Indicates the (optional) file extension for this file. By default, this is set to an empty string.'
            is_package:
              type: boolean
              example: true
              description: Indicates if the file is a package. Packages are commonly used by Mac Applications and can include iWork files.
            expiring_embed_link:
              allOf:
                - title: Expiring embed link
                  type: object
                  description: An expiring Box Embed Link.
                  allOf:
                    - type: object
                      description: The basics of an access token
                      properties:
                        access_token:
                          type: string
                          format: token
                          example: c3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQ
                          description: The requested access token.
                        expires_in:
                          type: integer
                          format: int64
                          example: 3600
                          description: The time in seconds in seconds by which this token will expire.
                        token_type:
                          type: string
                          enum:
                            - bearer
                          example: bearer
                          description: The type of access token returned.
                        restricted_to:
                          type: array
                          description: 'The permissions that this access token permits, providing a list of resources (files, folders, etc) and the scopes permitted for each of those resources.'
                          items:
                            $ref: '#/components/schemas/FileScope'
                    - properties:
                        url:
                          type: string
                          format: url
                          example: 'https://cloud.app.box.com/preview/expiring_embed/...'
                          description: 'The actual expiring embed URL for this file, constructed from the file ID and access tokens specified in this object.'
                - description: 'Requesting this field creates an expiring Box Embed URL for an embedded preview session in an `iframe`.  This URL will expire after 60 seconds and the session will expire after 60 minutes.  Not all file types are supported for these embed URLs. Box Embed is not optimized for mobile browsers and should not be used in web experiences designed for mobile devices. Many UI elements, like the **download** and **print** options might not show in mobile browsers.'
            watermark_info:
              allOf:
                - type: object
                  description: Details about the watermark applied to this item
                  properties:
                    is_watermarked:
                      type: boolean
                      description: Specifies if this item has a watermark applied.
                      example: true
                      nullable: false
                - description: Details about the watermark applied to this file
            allowed_invitee_roles:
              type: array
              example:
                - editor
              nullable: false
              description: A list of the types of roles that user can be invited at when sharing this file.
              items:
                type: string
                enum:
                  - editor
                  - viewer
                  - previewer
                  - uploader
                  - previewer uploader
                  - viewer uploader
                  - co-owner
            is_externally_owned:
              type: boolean
              example: true
              nullable: false
              description: Specifies if this file is owned by a user outside of the authenticated enterprise.
            has_collaborations:
              type: boolean
              example: true
              nullable: false
              description: Specifies if this file has any other collaborators.
            metadata:
              allOf:
                - title: Item metadata instances
                  type: object
                  description: 'A list of metadata instances, nested within key-value pairs of their `scope` and `templateKey`.  To access the metadata for a file or folder, first use the metadata endpoints to determine the metadata templates available to your enterprise.  Then use the `GET /files/:id` or `GET /folder/:id` endpoint with the `fields` query parameter to get the metadata by ID.  To request a metadata instance for a particular `scope` and `templateKey` use the following format for the `fields` parameter: `metadata.<scope>.<templateKey>`  For example, `?fields=metadata.enterprise_27335.marketingCollateral`.'
                  example:
                    enterprise_27335:
                      marketingCollateral:
                        $canEdit: true
                        $id: 01234500-12f1-1234-aa12-b1d234cb567e
                        $parent: folder_59449484661
                        $scope: enterprise_27335
                        $template: marketingCollateral
                        $type: properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0
                        $typeVersion: 2
                        $version: 1
                  additionalProperties:
                    type: object
                    description: 'A list of metadata instances, nested within key-value pairs of their `scope` and `templateKey`.'
                    example:
                      marketingCollateral:
                        $canEdit: true
                        $id: 01234500-12f1-1234-aa12-b1d234cb567e
                        $parent: folder_59449484661
                        $scope: enterprise_27335
                        $template: marketingCollateral
                        $type: properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0
                        $typeVersion: 2
                        $version: 1
                    additionalProperties:
                      $ref: '#/components/schemas/Metadata'
                - description: 'An object containing the metadata instances that have been attached to this file.  Each metadata instance is uniquely identified by its `scope` and `templateKey`. There can only be one instance of any metadata template attached to each file. Each metadata instance is nested within an object with the `templateKey` as the key, which again itself is nested in an object with the `scope` as the key.'
            expires_at:
              type: string
              format: date-time
              nullable: true
              description: When the file will automatically be deleted
              example: '2012-12-12T10:53:43-08:00'
            representations:
              allOf:
                - title: Representations
                  description: A list of file representations
                  type: object
                  properties:
                    entries:
                      type: array
                      description: A list of files
                      items:
                        type: object
                        description: A file representation
                        properties:
                          content:
                            type: object
                            description: An object containing the URL that can be used to actually fetch the representation.
                            properties:
                              url_template:
                                type: string
                                example: 'https://dl.boxcloud.com/api/2.0/internal_files/123/versions/345/representations/png_paged_2048x2048/content/{+asset_path}?watermark_content=4567'
                                description: 'The download URL that can be used to fetch the representation. Make sure to make an authenticated API call to this endpoint.  This URL is a template and will require the `{+asset_path}` to be replaced by a path. In general, for unpaged representations it can be replaced by an empty string.  For paged representations, replace the `{+asset_path}` with the page to request plus the extension for the file, for example `1.pdf`.  When requesting the download URL the following additional query params can be passed along.  * `set_content_disposition_type` - Sets the `Content-Disposition` header in the API response with the specified disposition type of either `inline` or `attachment`. If not supplied, the `Content-Disposition` header is not included in the response.  * `set_content_disposition_filename` - Allows the application to   define the representation''s file name used in the   `Content-Disposition` header.  If not defined, the filename   is derived from the source file name in Box combined with the   extension of the representation.'
                          info:
                            type: object
                            description: An object containing the URL that can be used to fetch more info on this representation.
                            properties:
                              url:
                                type: string
                                example: 'https://api.box.com/2.0/internal_files/123/versions/345/representations/png_paged_2048x2048'
                                description: The API URL that can be used to get more info on this file representation. Make sure to make an authenticated API call to this endpoint.
                          properties:
                            type: object
                            description: An object containing the size and type of this presentation.
                            properties:
                              dimensions:
                                type: string
                                format: <width>x<height>
                                example: 2048x2048
                                description: The width by height size of this representation in pixels.
                              paged:
                                type: boolean
                                example: true
                                description: Indicates if the representation is build up out of multiple pages.
                              thumb:
                                type: boolean
                                example: true
                                description: Indicates if the representation can be used as a thumbnail of the file.
                          representation:
                            type: string
                            example: png
                            description: Indicates the file type of the returned representation.
                          status:
                            type: object
                            description: An object containing the status of this representation.
                            properties:
                              state:
                                type: string
                                example: success
                                enum:
                                  - success
                                  - viewable
                                  - pending
                                  - none
                                description: The status of the representation.  * `success` defines the representation as ready to be viewed. * `viewable` defines a video to be ready for viewing. * `pending` defines the representation as to be generated. Retry   this endpoint to re-check the status. * `none` defines that the representation will be created when   requested. Request the URL defined in the `info` object to   trigger this generation.
                - description: A list of representations for a file that can be used to display a placeholder of the file in your application. By default this returns all representations and we recommend using the `X-Rep-Hints` header to further customize the desired representations.
            classification:
              allOf:
                - type: object
                  description: The classification applied to an item
                  properties:
                    name:
                      type: string
                      example: Top Secret
                      description: The name of the classification
                    definition:
                      type: string
                      example: Content that should not be shared outside the company.
                      description: An explanation of the meaning of this classification.
                    color:
                      type: string
                      example: '#FF0000'
                      description: The color that is used to display the classification label in a user-interface. Colors are defined by the admin or co-admin who created the classification in the Box web app.
                - description: Details about the classification applied to this file.
                - nullable: true
            uploader_display_name:
              allOf:
                - title: Uploader display name
                  type: string
                  example: Ellis Wiggins
                  nullable: false
                  description: 'The display name of the user that uploaded the file. In most cases this is the name of the user logged in at the time of the upload.  If the file was uploaded using a File Request form that requires the user to provide an email address, this field is populated with that email address. If an email address was not required in the File Request form, this field is set to return a value of `File Request`.  In all other anonymous cases where no email was provided this field will default to a value of `Someone`.'
    File--Mini:
      title: File (Mini)
      type: object
      x-box-resource-id: file--mini
      x-box-variant: mini
      description: 'A mini representation of a file, used when nested under another resource.'
      allOf:
        - $ref: '#/components/schemas/File--Base'
        - properties:
            sequence_id:
              allOf:
                - type: string
                  example: '3'
                  nullable: false
                  description: 'A numeric identifier that represents the most recent user event that has been applied to this item.  This can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.  An example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource.'
                - nullable: false
            name:
              type: string
              description: The name of the file
              example: Contract.pdf
            sha1:
              type: string
              format: digest
              nullable: false
              example: 85136C79CBF9FE36BB9D05D0639C70C265C18D37
              description: The SHA1 hash of the file. This can be used to compare the contents of a file on Box with a local file.
            file_version:
              allOf:
                - $ref: '#/components/schemas/FileVersion--Mini'
                - description: The information about the current version of the file.
    File--Base:
      title: File (Base)
      type: object
      x-box-resource-id: file--base
      x-box-sanitized: true
      x-box-tag: files
      x-box-variants:
        - base
        - mini
        - standard
        - full
      x-box-variant: base
      description: 'The bare basic representation of a file, the minimal amount of fields returned when using the `fields` query parameter.'
      properties:
        id:
          type: string
          nullable: false
          description: 'The unique identifier that represent a file.  The ID for any file can be determined by visiting a file in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/files/123` the `file_id` is `123`.'
          example: '12345'
        etag:
          type: string
          example: '1'
          nullable: true
          description: The HTTP `etag` of this file. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the file if (no) changes have happened.
        type:
          type: string
          description: '`file`'
          example: file
          enum:
            - file
          nullable: false
    FileRequest:
      title: File Request
      type: object
      x-box-resource-id: file_request
      x-box-tag: file_requests
      description: 'A standard representation of a file request, as returned from any file request API endpoints by default.'
      properties:
        id:
          type: string
          description: The unique identifier for this file request.
          readOnly: true
          example: '42037322'
        type:
          type: string
          description: '`file-request`'
          example: file-request
          enum:
            - file-request
          readOnly: true
        title:
          type: string
          description: The title of file request. This is shown in the Box UI to users uploading files.  This defaults to title of the file request that was copied to create this file request.
          example: Please upload documents
        description:
          type: string
          nullable: true
          description: The optional description of this file request. This is shown in the Box UI to users uploading files.  This defaults to description of the file request that was copied to create this file request.
          example: Following documents are requested for your process
        status:
          type: string
          example: active
          description: 'The status of the file request. This defaults to `active`.  When the status is set to `inactive`, the file request will no longer accept new submissions, and any visitor to the file request URL will receive a `HTTP 404` status code.  This defaults to status of file request that was copied to create this file request.'
          enum:
            - active
            - inactive
        is_email_required:
          type: boolean
          example: true
          description: 'Whether a file request submitter is required to provide their email address.  When this setting is set to true, the Box UI will show an email field on the file request form.  This defaults to setting of file request that was copied to create this file request.'
        is_description_required:
          type: boolean
          example: true
          description: 'Whether a file request submitter is required to provide a description of the files they are submitting.  When this setting is set to true, the Box UI will show a description field on the file request form.  This defaults to setting of file request that was copied to create this file request.'
        expires_at:
          type: string
          format: date-time
          description: 'The date after which a file request will no longer accept new submissions.  After this date, the `status` will automatically be set to `inactive`.'
          example: '2020-09-28T10:53:43-08:00'
        folder:
          description: The folder that this file request is associated with.  Files submitted through the file request form will be uploaded to this folder.
          $ref: '#/components/schemas/Folder--Mini'
          nullable: false
        url:
          type: string
          description: The generated URL for this file request. This URL can be shared with users to let them upload files to the associated folder.
          example: 'https://cloud.app.box.com/f/19e57f40ace247278a8e3d336678c64a'
          readOnly: true
        etag:
          type: string
          example: '1'
          nullable: true
          description: 'The HTTP `etag` of this file. This can be used in combination with the `If-Match` header when updating a file request. By providing that header, a change will only be performed on the  file request if the `etag` on the file request still matches the `etag` provided in the `If-Match` header.'
        created_by:
          description: The user who created this file request.
          $ref: '#/components/schemas/User--Mini'
        created_at:
          type: string
          format: date-time
          nullable: false
          description: The date and time when the file request was created.
          example: '2020-09-28T10:53:43-08:00'
        updated_by:
          description: The user who last modified this file request.
          $ref: '#/components/schemas/User--Mini'
        updated_at:
          type: string
          format: date-time
          nullable: false
          description: The date and time when the file request was last updated.
          example: '2020-09-28T10:53:43-08:00'
    FileVersion:
      title: File version
      type: object
      x-box-resource-id: file_version
      x-box-variant: standard
      description: A standard representation of a file version
      allOf:
        - $ref: '#/components/schemas/FileVersion--Mini'
        - properties:
            name:
              type: string
              description: The name of the file version
              example: tigers.jpeg
            size:
              type: integer
              format: int64
              description: Size of the file version in bytes
              example: 629644
            created_at:
              type: string
              format: date-time
              description: When the file version object was created
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: When the file version object was last updated
              example: '2012-12-12T10:53:43-08:00'
            modified_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who last updated the file version
            trashed_at:
              type: string
              description: When the file version object was trashed.
              format: date-time
              nullable: true
              example: '2012-12-12T10:53:43-08:00'
            trashed_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who trashed the file version
            restored_at:
              type: string
              description: When the file version was restored from the trash.
              format: date-time
              nullable: true
              example: '2012-12-12T10:53:43-08:00'
            restored_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who restored the file version from the trash.
            purged_at:
              type: string
              description: When the file version object will be permanently deleted.
              format: date-time
              nullable: true
              example: '2012-12-12T10:53:43-08:00'
            uploader_display_name:
              allOf:
                - title: Uploader display name
                  type: string
                  example: Ellis Wiggins
                  nullable: false
                  description: 'The display name of the user that uploaded the file. In most cases this is the name of the user logged in at the time of the upload.  If the file was uploaded using a File Request form that requires the user to provide an email address, this field is populated with that email address. If an email address was not required in the File Request form, this field is set to return a value of `File Request`.  In all other anonymous cases where no email was provided this field will default to a value of `Someone`.'
    FileVersion--Mini:
      title: File version (Mini)
      type: object
      x-box-resource-id: file_version--mini
      x-box-variant: mini
      description: 'A mini representation of a file version, used when nested within another resource.'
      allOf:
        - $ref: '#/components/schemas/FileVersion--Base'
        - properties:
            sha1:
              type: string
              description: The SHA1 hash of this version of the file.
              example: 134b65991ed521fcfe4724b7d814ab8ded5185dc
    FileVersion--Base:
      title: File version (Base)
      type: object
      x-box-resource-id: file_version--base
      x-box-sanitized: true
      x-box-variants:
        - base
        - mini
        - standard
      x-box-variant: base
      description: 'The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.'
      properties:
        id:
          type: string
          nullable: false
          description: The unique identifier that represent a file version.
          example: '12345'
        type:
          type: string
          description: '`file_version`'
          example: file_version
          enum:
            - file_version
          nullable: false
    FileVersions:
      title: File versions
      type: object
      x-box-resource-id: file_versions
      x-box-tag: file_versions
      description: A list of file versions
      allOf:
        - type: object
          description: The part of an API response that describes pagination
          properties:
            total_count:
              description: 'One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            offset:
              description: 'The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 2000
              type: integer
              format: int64
            order:
              description: 'The order by which items are returned.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              type: array
              items:
                type: object
                description: The order in which a pagination is ordered
                properties:
                  by:
                    description: The field to order by
                    example: type
                    type: string
                  direction:
                    type: string
                    description: 'The direction to order by, either ascending or descending'
                    example: ASC
                    enum:
                      - ASC
                      - DESC
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/FileVersion'
    FileVersionLegalHold:
      title: File version legal hold
      type: object
      x-box-resource-id: file_version_legal_hold
      x-box-tag: file_version_legal_holds
      description: File-Version-Legal-Hold is an entity representing all holds on a File Version.
      properties:
        id:
          type: string
          description: The unique identifier for this file version legal hold
          example: '11446498'
        type:
          type: string
          description: '`file_version_legal_hold`'
          example: file_version_legal_hold
          enum:
            - file_version_legal_hold
        file_version:
          description: The file version this file version retention was applied to
          $ref: '#/components/schemas/FileVersion--Mini'
        file:
          description: The file this file version retention was applied to
          $ref: '#/components/schemas/File--Mini'
        legal_hold_policy_assignments:
          description: List of assignments contributing to this Hold.
          type: array
          items:
            $ref: '#/components/schemas/LegalHoldPolicyAssignment'
        deleted_at:
          type: string
          format: date-time
          description: Time that this File-Version-Legal-Hold was deleted.
          example: '2012-12-12T10:53:43-08:00'
    FileVersionLegalHolds:
      title: File version legal holds
      type: object
      x-box-resource-id: file_version_legal_holds
      x-box-tag: file_version_legal_holds
      description: A list of file version legal holds.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/FileVersionLegalHold'
    FileVersionRetention:
      title: File version retention
      type: object
      x-box-resource-id: file_version_retention
      x-box-tag: file_version_retentions
      description: 'A retention policy blocks permanent deletion of content for a specified amount of time. Admins can apply policies to specified folders, or an entire enterprise. A file version retention is a  record for a retained file version. To use this feature, you must  have the manage retention policies scope enabled for your API key via  your application management console. For more information about retention policies, please visit our help documentation'
      properties:
        id:
          type: string
          description: The unique identifier for this file version retention.
          example: '11446498'
        type:
          type: string
          description: '`file_version_retention`'
          example: file_version_retention
          enum:
            - file_version_retention
        file_version:
          description: The file version this file version retention was applied to
          $ref: '#/components/schemas/FileVersion--Mini'
        file:
          description: The file this file version retention was applied to
          $ref: '#/components/schemas/File--Mini'
        applied_at:
          type: string
          format: date-time
          description: When this file version retention object was created
          example: '2012-12-12T10:53:43-08:00'
        disposition_at:
          type: string
          format: date-time
          description: When the retention expires on this file version retention
          example: '2012-12-12T10:53:43-08:00'
        winning_retention_policy:
          description: The winning retention policy applied to this file version retention. A file version can have multiple retention policies applied.
          $ref: '#/components/schemas/RetentionPolicy--Mini'
    FileVersionRetentions:
      title: File version retentions
      type: object
      x-box-resource-id: file_version_retentions
      x-box-tag: file_version_retentions
      description: A list of file version retentions.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/FileVersionRetention'
    Folder:
      title: Folder
      type: object
      x-box-resource-id: folder
      x-box-variant: standard
      description: 'A standard representation of a folder, as returned from any folder API endpoints by default'
      allOf:
        - $ref: '#/components/schemas/Folder--Mini'
        - properties:
            created_at:
              type: string
              format: date-time
              nullable: true
              description: The date and time when the folder was created. This value may be `null` for some folders such as the root folder or the trash folder.
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: The date and time when the folder was last updated. This value may be `null` for some folders such as the root folder or the trash folder.
              example: '2012-12-12T10:53:43-08:00'
              nullable: true
            description:
              allOf:
                - type: string
                  description: The optional description of this folder
                  maxLength: 256
                  example: Legal contracts for the new ACME deal
                  nullable: false
                - nullable: false
            size:
              type: integer
              format: int64
              description: The folder size in bytes.  Be careful parsing this integer as its value can get very large.
              example: 629644
              nullable: false
            path_collection:
              allOf:
                - title: Path collection
                  description: A list of parent folders for an item.
                  type: object
                  properties:
                    total_count:
                      description: The number of folders in this list.
                      example: 1
                      type: integer
                      format: int64
                      nullable: false
                    entries:
                      type: array
                      description: The parent folders for this item
                      nullable: false
                      items:
                        $ref: '#/components/schemas/Folder--Mini'
                - description: 'The tree of folders that this folder is contained in, starting at the root.'
                - nullable: false
            created_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who created this folder
                - nullable: false
            modified_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who last modified this folder.
                - nullable: false
            trashed_at:
              type: string
              format: date-time
              description: The time at which this folder was put in the trash.
              example: '2012-12-12T10:53:43-08:00'
              nullable: true
            purged_at:
              type: string
              format: date-time
              description: The time at which this folder is expected to be purged from the trash.
              example: '2012-12-12T10:53:43-08:00'
              nullable: true
            content_created_at:
              type: string
              format: date-time
              nullable: true
              description: The date and time at which this folder was originally created.
              example: '2012-12-12T10:53:43-08:00'
            content_modified_at:
              type: string
              format: date-time
              nullable: true
              description: The date and time at which this folder was last updated.
              example: '2012-12-12T10:53:43-08:00'
            expires_at:
              type: string
              format: date-time
              nullable: true
              description: The time and which the folder will be automatically be deleted.
              example: '2012-12-12T10:53:43-08:00'
            owned_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who owns this folder.
                - nullable: false
            shared_link:
              allOf:
                - title: Shared link
                  description: 'Shared links provide direct, read-only access to files or folder on Box.  Shared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users.'
                  type: object
                  properties:
                    url:
                      type: string
                      format: url
                      description: The URL that can be used to access the item on Box.  This URL will display the item in Box's preview UI where the file can be downloaded if allowed.  This URL will continue to work even when a custom `vanity_url` has been set for this shared link.
                      example: 'https://www.box.com/s/vspke7y05sb214wjokpk'
                      nullable: false
                    download_url:
                      type: string
                      format: url
                      x-box-premium-feature: true
                      description: A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.  This property will be `null` for folders.
                      example: 'https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg'
                      nullable: true
                    vanity_url:
                      type: string
                      format: url
                      description: The "Custom URL" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application.
                      example: 'https://acme.app.box.com/v/my_url/'
                      nullable: true
                    vanity_name:
                      type: string
                      description: 'The custom name of a shared link, as used in the `vanity_url` field.'
                      example: my_url
                      nullable: true
                    access:
                      type: string
                      description: 'The access level for this shared link.  * `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are    collaborators on this item  If this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin.'
                      enum:
                        - open
                        - company
                        - collaborators
                      example: open
                      nullable: false
                    effective_access:
                      type: string
                      description: The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels.
                      enum:
                        - open
                        - company
                        - collaborators
                      example: company
                      nullable: false
                    effective_permission:
                      type: string
                      description: The effective permissions for this shared link.
                      enum:
                        - can_download
                        - can_preview
                      example: can_download
                      nullable: false
                    unshared_at:
                      type: string
                      format: date-time
                      description: The date and time when this link will be unshared. This field can only be set by users with paid accounts.
                      example: '2018-04-13T13:53:23-07:00'
                      nullable: true
                    is_password_enabled:
                      type: boolean
                      description: Defines if the shared link requires a password to access the item.
                      example: true
                      nullable: false
                    permissions:
                      type: object
                      description: Defines if this link allows a user to preview and download an item.
                      properties:
                        can_download:
                          type: boolean
                          example: true
                          nullable: false
                          description: 'Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.  This value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`.'
                        can_preview:
                          type: boolean
                          example: true
                          nullable: false
                          description: Defines if the shared link allows for the item to be previewed.  This value is always `true`. For shared links on folders this also applies to any items in the folder.
                    download_count:
                      type: integer
                      example: 3
                      description: The number of times this item has been downloaded.
                      nullable: false
                    preview_count:
                      type: integer
                      example: 3
                      description: The number of times this item has been previewed.
                      nullable: false
                - description: The shared link for this folder. This will be `null` if no shared link has been created for this folder.
              nullable: true
            folder_upload_email:
              type: object
              nullable: true
              properties:
                access:
                  type: string
                  example: open
                  nullable: false
                  enum:
                    - open
                    - collaborators
                  description: 'When this parameter has been set, users can email files to the email address that has been automatically created for this folder.  To create an email address, set this property either when creating or updating the folder.  When set to `collaborators`, only emails from registered email addresses for collaborators will be accepted. This includes any email aliases a user might have registered.  When set to `open` it will accept emails from any email address.'
                email:
                  description: The optional upload email address for this folder.
                  type: string
                  format: email
                  example: upload.Contracts.asd7asd@u.box.com
                  nullable: false
            parent:
              allOf:
                - $ref: '#/components/schemas/Folder--Mini'
                - description: The optional folder that this folder is located within.  This value may be `null` for some folders such as the root folder or the trash folder.
              nullable: true
            item_status:
              type: string
              description: Defines if this item has been deleted or not.  * `active` when the item has is not in the trash * `trashed` when the item has been moved to the trash but not deleted * `deleted` when the item has been permanently deleted.
              enum:
                - active
                - trashed
                - deleted
              nullable: false
              example: active
            item_collection:
              allOf:
                - $ref: '#/components/schemas/Items'
                - description: 'A page of the items that are in the folder.  This field can only be requested when querying a folder''s information, not when querying a folder''s items.'
                - nullable: false
    Folder--Full:
      title: Folder (Full)
      type: object
      x-box-resource-id: folder--full
      x-box-variant: full
      description: 'A full representation of a folder, as can be returned from any folder API endpoints by default'
      allOf:
        - $ref: '#/components/schemas/Folder'
        - properties:
            sync_state:
              allOf:
                - type: string
                  example: synced
                  nullable: false
                  description: Specifies whether a folder should be synced to a user's device or not. This is used by Box Sync (discontinued) and is not used by Box Drive.
                  enum:
                    - synced
                    - not_synced
                    - partially_synced
            has_collaborations:
              type: boolean
              example: true
              nullable: false
              description: Specifies if this folder has any other collaborators.
            permissions:
              allOf:
                - type: object
                  description: The permissions that the authenticated user has for a folder.
                  allOf:
                    - type: object
                      description: The permissions that the authenticated user has for an item.
                      properties:
                        can_delete:
                          type: boolean
                          description: Specifies if the current user can delete this item.
                          example: true
                          nullable: false
                        can_download:
                          type: boolean
                          description: Specifies if the current user can download this item.
                          example: true
                          nullable: false
                        can_invite_collaborator:
                          type: boolean
                          description: 'Specifies if the current user can invite new users to collaborate on this item, and if the user can update the role of a user already collaborated on this item.'
                          example: true
                          nullable: false
                        can_rename:
                          type: boolean
                          description: Specifies if the user can rename this item.
                          example: true
                          nullable: false
                        can_set_share_access:
                          type: boolean
                          description: Specifies if the user can change the access level of an existing shared link on this item.
                          example: true
                          nullable: false
                        can_share:
                          type: boolean
                          description: Specifies if the user can create a shared link for this item.
                          example: true
                          nullable: false
                    - properties:
                        can_upload:
                          type: boolean
                          description: Specifies if the user can upload into this folder.
                          example: true
                          nullable: false
                - description: Describes the permissions that the current user has for this folder
                - nullable: false
            tags:
              allOf:
                - type: array
                  example:
                    - approved
                  items:
                    type: string
                  minItems: 1
                  maxItems: 100
                  description: 'The tags for this item. These tags are shown in the Box web app and mobile apps next to an item.  To add or remove a tag, retrieve the item''s current tags, modify them, and then update this field.  There is a limit of 100 tags per item, and 10,000 unique tags per enterprise.'
                - nullable: false
            can_non_owners_invite:
              allOf:
                - type: boolean
                  example: true
                  description: Specifies if users who are not the owner of the folder can invite new collaborators to the folder.
                - nullable: false
            is_externally_owned:
              type: boolean
              example: true
              nullable: false
              description: Specifies if this folder is owned by a user outside of the authenticated enterprise.
            metadata:
              allOf:
                - title: Item metadata instances
                  type: object
                  description: 'A list of metadata instances, nested within key-value pairs of their `scope` and `templateKey`.  To access the metadata for a file or folder, first use the metadata endpoints to determine the metadata templates available to your enterprise.  Then use the `GET /files/:id` or `GET /folder/:id` endpoint with the `fields` query parameter to get the metadata by ID.  To request a metadata instance for a particular `scope` and `templateKey` use the following format for the `fields` parameter: `metadata.<scope>.<templateKey>`  For example, `?fields=metadata.enterprise_27335.marketingCollateral`.'
                  example:
                    enterprise_27335:
                      marketingCollateral:
                        $canEdit: true
                        $id: 01234500-12f1-1234-aa12-b1d234cb567e
                        $parent: folder_59449484661
                        $scope: enterprise_27335
                        $template: marketingCollateral
                        $type: properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0
                        $typeVersion: 2
                        $version: 1
                  additionalProperties:
                    type: object
                    description: 'A list of metadata instances, nested within key-value pairs of their `scope` and `templateKey`.'
                    example:
                      marketingCollateral:
                        $canEdit: true
                        $id: 01234500-12f1-1234-aa12-b1d234cb567e
                        $parent: folder_59449484661
                        $scope: enterprise_27335
                        $template: marketingCollateral
                        $type: properties-6bcba49f-ca6d-4d2a-a758-57fe6edf44d0
                        $typeVersion: 2
                        $version: 1
                    additionalProperties:
                      $ref: '#/components/schemas/Metadata'
                - description: 'An object containing the metadata instances that have been attached to this folder.  Each metadata instance is uniquely identified by its `scope` and `templateKey`. There can only be one instance of any metadata template attached to each folder. Each metadata instance is nested within an object with the `templateKey` as the key, which again itself is nested in an object with the `scope` as the key.'
            is_collaboration_restricted_to_enterprise:
              allOf:
                - type: boolean
                  example: true
                  description: Specifies if new invites to this folder are restricted to users within the enterprise. This does not affect existing collaborations.
                - nullable: false
            allowed_shared_link_access_levels:
              type: array
              example:
                - open
              items:
                type: string
                enum:
                  - open
                  - company
                  - collaborators
              nullable: false
              description: 'A list of access levels that are available for this folder.  For some folders, like the root folder, this will always be an empty list as sharing is not allowed at that level.'
            allowed_invitee_roles:
              type: array
              example:
                - editor
              nullable: false
              description: A list of the types of roles that user can be invited at when sharing this folder.
              items:
                type: string
                enum:
                  - editor
                  - viewer
                  - previewer
                  - uploader
                  - previewer uploader
                  - viewer uploader
                  - co-owner
            watermark_info:
              allOf:
                - type: object
                  description: Details about the watermark applied to this item
                  properties:
                    is_watermarked:
                      type: boolean
                      description: Specifies if this item has a watermark applied.
                      example: true
                      nullable: false
                - description: Details about the watermark applied to this folder
                - nullable: false
            can_non_owners_view_collaborators:
              type: boolean
              example: true
              description: Specifies if collaborators who are not owners of this folder are restricted from viewing other collaborations on this folder.  It also restricts non-owners from inviting new collaborators.
            classification:
              allOf:
                - type: object
                  description: The classification applied to an item
                  properties:
                    name:
                      type: string
                      example: Top Secret
                      description: The name of the classification
                    definition:
                      type: string
                      example: Content that should not be shared outside the company.
                      description: An explanation of the meaning of this classification.
                    color:
                      type: string
                      example: '#FF0000'
                      description: The color that is used to display the classification label in a user-interface. Colors are defined by the admin or co-admin who created the classification in the Box web app.
                - description: Details about the classification applied to this folder.
                - nullable: true
    Folder--Mini:
      title: Folder (Mini)
      type: object
      x-box-resource-id: folder--mini
      x-box-variant: mini
      description: 'A mini representation of a file version, used when nested under another resource.'
      allOf:
        - $ref: '#/components/schemas/Folder--Base'
        - properties:
            sequence_id:
              allOf:
                - type: string
                  example: '3'
                  nullable: false
                  description: 'A numeric identifier that represents the most recent user event that has been applied to this item.  This can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.  An example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource.'
                - nullable: false
            name:
              type: string
              description: The name of the folder.
              example: Contracts
              nullable: false
    Folder--Base:
      title: Folder (Base)
      type: object
      x-box-resource-id: folder--base
      x-box-sanitized: true
      x-box-tag: folders
      x-box-variants:
        - base
        - mini
        - standard
        - full
      x-box-variant: base
      description: 'The bare basic representation of a folder, the minimal amount of fields returned when using the `fields` query parameter.'
      properties:
        id:
          type: string
          nullable: false
          description: 'The unique identifier that represent a folder.  The ID for any folder can be determined by visiting a folder in the web application and copying the ID from the URL. For example, for the URL `https://*.app.box.com/folders/123` the `folder_id` is `123`.'
          example: '12345'
        etag:
          type: string
          nullable: true
          example: '1'
          description: The HTTP `etag` of this folder. This can be used within some API endpoints in the `If-Match` and `If-None-Match` headers to only perform changes on the folder if (no) changes have happened.
        type:
          type: string
          description: '`folder`'
          example: folder
          enum:
            - folder
          nullable: false
    FolderLock:
      title: Folder Lock
      type: object
      x-box-resource-id: folder_lock
      x-box-tag: folder_locks
      description: Folder locks define access restrictions placed by folder owners to prevent specific folders from being moved or deleted.
      properties:
        folder:
          description: The folder that the lock applies to.
          $ref: '#/components/schemas/Folder--Mini'
        id:
          type: string
          description: The unique identifier for this folder lock.
          example: '12345678'
        type:
          type: string
          description: 'The object type, always `folder_lock`.'
          example: folder_lock
        created_by:
          description: The user or group that created the lock.
          $ref: '#/components/schemas/User--Base'
        created_at:
          type: string
          format: date-time
          example: '2020-09-14T23:12:53Z'
          description: When the folder lock object was created.
        locked_operations:
          type: object
          description: 'The operations that have been locked. Currently the `move` and `delete` operations cannot be locked separately, and both need to be set to `true`. '
          properties:
            move:
              type: boolean
              description: Whether moving the folder is restricted.
              nullable: false
              example: true
            delete:
              type: boolean
              description: Whether deleting the folder is restricted.
              nullable: false
              example: true
        lock_type:
          type: string
          description: 'The lock type, always `freeze`.'
          example: freeze
    FolderLocks:
      title: Folder Locks
      type: object
      x-box-resource-id: folder_locks
      x-box-tag: folder_locks
      description: A list of folder locks
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/FolderLock'
    Group:
      title: Group
      type: object
      x-box-resource-id: group
      x-box-variant: standard
      description: 'A standard representation of a group, as returned from any group API endpoints by default'
      allOf:
        - $ref: '#/components/schemas/Group--Mini'
        - properties:
            created_at:
              type: string
              format: date-time
              description: When the group object was created
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: When the group object was last modified
              example: '2012-12-12T10:53:43-08:00'
    Groups:
      title: Groups
      type: object
      x-box-resource-id: groups
      x-box-tag: groups
      description: A list of groups.
      allOf:
        - type: object
          description: The part of an API response that describes pagination
          properties:
            total_count:
              description: 'One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            offset:
              description: 'The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 2000
              type: integer
              format: int64
            order:
              description: 'The order by which items are returned.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              type: array
              items:
                type: object
                description: The order in which a pagination is ordered
                properties:
                  by:
                    description: The field to order by
                    example: type
                    type: string
                  direction:
                    type: string
                    description: 'The direction to order by, either ascending or descending'
                    example: ASC
                    enum:
                      - ASC
                      - DESC
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/Group--Mini'
    Group--Base:
      title: Group (Base)
      type: object
      x-box-resource-id: group--base
      x-box-sanitized: true
      x-box-tag: groups
      x-box-variants:
        - base
        - mini
        - standard
        - full
      x-box-variant: base
      description: A base representation of a group.
      properties:
        id:
          type: string
          description: The unique identifier for this object
          example: '11446498'
        type:
          type: string
          description: '`group`'
          example: group
          enum:
            - group
    Group--Full:
      title: Group (Full)
      type: object
      x-box-resource-id: group--full
      x-box-variant: full
      description: 'Groups contain a set of users, and can be used in place of users in some operations, such as collaborations.'
      allOf:
        - $ref: '#/components/schemas/Group'
        - properties:
            provenance:
              type: string
              description: 'Keeps track of which external source this group is coming from (e.g. "Active Directory", "Google Groups", "Facebook Groups").  Setting this will also prevent Box users from editing the group name and its members directly via the Box web application. This is desirable for one-way syncing of groups.'
              maxLength: 255
              example: Active Directory
            external_sync_identifier:
              type: string
              description: An arbitrary identifier that can be used by external group sync tools to link this Box Group to an external group. Example values of this field could be an Active Directory Object ID or a Google Group ID.  We recommend you use of this field in order to avoid issues when group names are updated in either Box or external systems.
              example: 'AD:123456'
            description:
              type: string
              description: Human readable description of the group.
              maxLength: 255
              example: Support Group - as imported from Active Directory
            invitability_level:
              type: string
              example: admins_only
              description: 'Specifies who can invite the group to collaborate on items.  When set to `admins_only` the enterprise admin, co-admins, and the group''s admin can invite the group.  When set to `admins_and_members` all the admins listed above and group members can invite the group.  When set to `all_managed_users` all managed users in the enterprise can invite the group.'
              enum:
                - admins_only
                - admins_and_members
                - all_managed_users
            member_viewability_level:
              type: string
              example: admins_only
              description: 'Specifies who can view the members of the group (Get Memberships for Group).  * `admins_only` - the enterprise admin, co-admins, group''s   group admin * `admins_and_members` - all admins and group members * `all_managed_users` - all managed users in the   enterprise'
              enum:
                - admins_only
                - admins_and_members
                - all_managed_users
            permissions:
              allOf:
                - type: object
                  description: The permissions that the authenticated user has for a group.
                  properties:
                    can_invite_as_collaborator:
                      type: boolean
                      description: Specifies if the user can invite the group to collaborate on any items.
                      example: true
                - description: Describes the permissions that the current user has for this group.
    Group--Mini:
      title: Group (Mini)
      type: object
      x-box-resource-id: group--mini
      x-box-variant: mini
      description: 'Mini representation of a group, including id and name of group.'
      allOf:
        - $ref: '#/components/schemas/Group--Base'
        - properties:
            name:
              type: string
              description: The name of the group
              example: Support
            group_type:
              type: string
              description: The type of the group.
              example: managed_group
              enum:
                - managed_group
                - all_users_group
    GroupMembership:
      title: Group membership
      type: object
      x-box-resource-id: group_membership
      x-box-tag: memberships
      description: Membership is used to signify that a user is part of a group.
      properties:
        id:
          type: string
          description: The unique identifier for this group membership
          example: '11446498'
        type:
          type: string
          description: '`group_membership`'
          example: group_membership
          enum:
            - group_membership
        user:
          description: The user that the membership applies to
          $ref: '#/components/schemas/User--Mini'
        group:
          description: The group that the membership applies to
          $ref: '#/components/schemas/Group--Mini'
        role:
          type: string
          example: member
          description: The role of the user in the group.
          enum:
            - member
            - admin
        created_at:
          type: string
          format: date-time
          description: The time this membership was created.
          example: '2012-12-12T10:53:43-08:00'
        modified_at:
          type: string
          format: date-time
          description: The time this membership was last modified.
          example: '2012-12-12T10:53:43-08:00'
    GroupMemberships:
      title: Group memberships
      type: object
      x-box-resource-id: group_memberships
      x-box-tag: memberships
      description: A list of group memberships.
      allOf:
        - type: object
          description: The part of an API response that describes pagination
          properties:
            total_count:
              description: 'One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            offset:
              description: 'The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 2000
              type: integer
              format: int64
            order:
              description: 'The order by which items are returned.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              type: array
              items:
                type: object
                description: The order in which a pagination is ordered
                properties:
                  by:
                    description: The field to order by
                    example: type
                    type: string
                  direction:
                    type: string
                    description: 'The direction to order by, either ascending or descending'
                    example: ASC
                    enum:
                      - ASC
                      - DESC
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/GroupMembership'
    Invite:
      title: Invite
      type: object
      x-box-resource-id: invite
      x-box-tag: invites
      description: An invite for a user to an enterprise.
      properties:
        id:
          type: string
          description: The unique identifier for this invite
          example: '11446498'
        type:
          type: string
          description: '`invite`'
          example: invite
          enum:
            - invite
        invited_to:
          title: Enterprise
          type: object
          description: A representation of a Box enterprise
          properties:
            id:
              type: string
              description: The unique identifier for this enterprise.
              example: '11446498'
            type:
              type: string
              description: '`enterprise`'
              example: enterprise
              enum:
                - enterprise
            name:
              description: The name of the enterprise
              example: Acme Inc.
              type: string
        actionable_by:
          $ref: '#/components/schemas/User--Mini'
        invited_by:
          $ref: '#/components/schemas/User--Mini'
        status:
          description: The status of the invite
          type: string
          example: pending
        created_at:
          type: string
          format: date-time
          description: When the invite was created
          example: '2012-12-12T10:53:43-08:00'
        modified_at:
          type: string
          format: date-time
          description: When the invite was modified.
          example: '2012-12-12T10:53:43-08:00'
    Items:
      title: Items
      type: object
      x-box-resource-id: items
      x-box-tag: folders
      description: 'A list of files, folders, and web links in their mini representation.'
      allOf:
        - type: object
          description: The part of an API response that describes pagination
          properties:
            total_count:
              description: 'One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            offset:
              description: 'The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 2000
              type: integer
              format: int64
            order:
              description: 'The order by which items are returned.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              type: array
              items:
                type: object
                description: The order in which a pagination is ordered
                properties:
                  by:
                    description: The field to order by
                    example: type
                    type: string
                  direction:
                    type: string
                    description: 'The direction to order by, either ascending or descending'
                    example: ASC
                    enum:
                      - ASC
                      - DESC
        - properties:
            entries:
              description: The items in this collection.
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/File--Mini'
                  - $ref: '#/components/schemas/Folder--Mini'
                  - $ref: '#/components/schemas/WebLink--Mini'
    LegalHoldPolicy:
      title: Legal hold policy
      type: object
      x-box-resource-id: legal_hold_policy
      x-box-variant: standard
      description: 'Legal Hold Policy information describes the basic characteristics of the Policy, such as name, description, and filter dates.'
      allOf:
        - $ref: '#/components/schemas/LegalHoldPolicy--Mini'
        - properties:
            policy_name:
              type: string
              example: Policy 4
              description: Name of the legal hold policy.
              maxLength: 254
            description:
              type: string
              description: Description of the legal hold policy. Optional property with a 500 character limit.
              maxLength: 500
              example: Postman created policy
            status:
              type: string
              example: active
              enum:
                - active
                - applying
                - releasing
                - released
              description: '* ''active'' - the policy is not in a transition state * ''applying'' - that the policy is in the process of   being applied * ''releasing'' - that the process is in the process   of being released * ''released'' - the policy is no longer active'
            assignment_counts:
              type: object
              description: Counts of assignments within this a legal hold policy by item type
              properties:
                user:
                  type: integer
                  format: int64
                  description: The number of users this policy is applied to
                  example: 1
                folder:
                  type: integer
                  format: int64
                  description: The number of folders this policy is applied to
                  example: 2
                file:
                  type: integer
                  format: int64
                  description: The number of files this policy is applied to
                  example: 3
                file_version:
                  type: integer
                  format: int64
                  description: The number of file versions this policy is applied to
                  example: 4
            created_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who created the legal hold policy object
            created_at:
              type: string
              format: date-time
              description: When the legal hold policy object was created
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: When the legal hold policy object was modified. Does not update when assignments are added or removed.
              example: '2012-12-12T10:53:43-08:00'
            deleted_at:
              type: string
              format: date-time
              description: 'When the policy release request was sent. (Because it can take time for a policy to fully delete, this isn''t quite the same time that the policy is fully deleted).  If `null`, the policy was not deleted.'
              example: '2012-12-12T10:53:43-08:00'
            filter_started_at:
              type: string
              format: date-time
              description: 'User-specified, optional date filter applies to Custodian assignments only'
              example: '2012-12-12T10:53:43-08:00'
            filter_ended_at:
              type: string
              format: date-time
              description: 'User-specified, optional date filter applies to Custodian assignments only'
              example: '2012-12-12T10:53:43-08:00'
            release_notes:
              type: string
              example: Example
              description: Optional notes about why the policy was created.
              maxLength: 500
    LegalHoldPolicies:
      title: Legal hold policies
      type: object
      x-box-resource-id: legal_hold_policies
      x-box-tag: legal_hold_policies
      description: A list of legal hold policies.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/LegalHoldPolicy'
    LegalHoldPolicy--Mini:
      title: Legal hold policy (Mini)
      type: object
      x-box-resource-id: legal_hold_policy--mini
      x-box-tag: legal_hold_policies
      x-box-variants:
        - mini
        - standard
      x-box-variant: mini
      description: A mini legal hold policy
      properties:
        id:
          type: string
          description: The unique identifier for this legal hold policy
          example: '11446498'
        type:
          type: string
          description: '`legal_hold_policy`'
          example: legal_hold_policy
          enum:
            - legal_hold_policy
    LegalHoldPolicyAssignment:
      title: Legal hold policy assignment
      type: object
      x-box-resource-id: legal_hold_policy_assignment
      x-box-tag: legal_hold_policy_assignments
      description: 'Legal Hold Assignments are used to assign Legal Hold Policies to Users, Folders, Files, or File Versions.  Creating a Legal Hold Assignment puts a hold on the File-Versions that belong to the Assignment''s ''apply-to'' entity.'
      allOf:
        - $ref: '#/components/schemas/LegalHoldPolicyAssignment--Base'
        - properties:
            legal_hold_policy:
              allOf:
                - $ref: '#/components/schemas/LegalHoldPolicy--Mini'
                - description: The policy that the legal hold policy assignment is part of
            assigned_to:
              # allOf:
              oneOf:
                - $ref: '#/components/schemas/File'
                - $ref: '#/components/schemas/Folder'
                - $ref: '#/components/schemas/WebLink'
              description: The item that the the legal hold policy is assigned to. Includes type and ID.
            assigned_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who created the legal hold policy assignment
            assigned_at:
              type: string
              format: date-time
              description: When the legal hold policy assignment object was created
              example: '2012-12-12T10:53:43-08:00'
            deleted_at:
              type: string
              format: date-time
              description: 'When the assignment release request was sent. (Because it can take time for an assignment to fully delete, this isn''t quite the same time that the assignment is fully deleted). If null, Assignment was not deleted.'
              example: '2012-12-12T10:53:43-08:00'
    LegalHoldPolicyAssignment--Base:
      title: Legal hold policy assignment (Base)
      type: object
      x-box-resource-id: legal_hold_policy_assignment--base
      x-box-sanitized: true
      x-box-tag: legal_hold_policy_assignments
      x-box-variants:
        - base
        - standard
      x-box-variant: base
      description: 'Legal Hold Assignments are used to assign Legal Hold Policies to Users, Folders, Files, or File Versions.  Creating a Legal Hold Assignment puts a hold on the File-Versions that belong to the Assignment''s ''apply-to'' entity.'
      properties:
        id:
          type: string
          description: The unique identifier for this legal hold assignment
          example: '11446498'
        type:
          type: string
          description: '`legal_hold_policy_assignment`'
          example: legal_hold_policy_assignment
          enum:
            - legal_hold_policy_assignment
    LegalHoldPolicyAssignments:
      title: Legal hold policy assignments
      type: object
      x-box-resource-id: legal_hold_policy_assignments
      x-box-tag: legal_hold_policy_assignments
      description: A list of legal hold policies assignments.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/LegalHoldPolicyAssignment--Base'
    RealtimeServer:
      title: Real-time server
      type: object
      x-box-resource-id: realtime_server
      description: A real-time server that can be used for long polling user events
      properties:
        type:
          description: '`realtime_server`'
          type: string
          example: realtime_server
        url:
          type: string
          example: 'http://2.realtime.services.box.net/subscribe?channel=cc807c9c4869ffb1c81a&stream_type=all'
          description: The URL for the server.
        ttl:
          description: The time in minutes for which this server is available
          type: integer
          example: 10
        max_retries:
          description: 'The maximum number of retries this server will allow before a new long poll should be started by getting a [new list of server](#options-events).'
          type: integer
          example: 10
        retry_timeout:
          description: The maximum number of seconds without a response after which you should retry the long poll connection.  This helps to overcome network issues where the long poll looks to be working but no packages are coming through.
          type: integer
          example: 610
    RealtimeServers:
      title: Real-time servers
      type: object
      x-box-resource-id: realtime_servers
      description: A list of real-time servers that can be used for long-polling.
      x-box-tag: events
      properties:
        chunk_size:
          description: The number of items in this response.
          example: 1
          type: integer
          format: int64
        entries:
          type: array
          description: The entries of realtime servers.
          items:
            $ref: '#/components/schemas/RealtimeServer'
    RecentItem:
      title: Recent item
      type: object
      x-box-resource-id: recent_item
      description: A recent item accessed by a user.
      x-box-tag: recent_items
      properties:
        type:
          type: string
          description: '`recent_item`'
          example: recent_item
        item:
          oneOf:
            - $ref: '#/components/schemas/File'
            - $ref: '#/components/schemas/Folder'
            - $ref: '#/components/schemas/WebLink'
        interaction_type:
          type: string
          example: item_preview
          description: The most recent type of access the user performed on the item.
          enum:
            - item_preview
            - item_upload
            - item_comment
            - item_open
            - item_modify
        interacted_at:
          type: string
          format: date-time
          description: The time of the most recent interaction.
          example: '2018-04-13T13:53:23-07:00'
        interaction_shared_link:
          type: string
          example: 'https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg'
          description: 'If the item was accessed through a shared link it will appear here, otherwise this will be null.'
    RecentItems:
      title: Recent items
      type: object
      x-box-resource-id: recent_items
      description: A list of recent items.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/RecentItem'
    RetentionPolicies:
      title: Retention policies
      type: object
      x-box-resource-id: retention_policies
      x-box-tag: retention_policies
      description: A list of retention policies
      properties:
        total_count:
          description: The number of retention policies.
          example: 156
          type: integer
          format: int64
        entries:
          type: array
          description: The entries of retention policies.
          items:
            $ref: '#/components/schemas/RetentionPolicy'
    RetentionPolicy:
      title: Retention policy
      type: object
      x-box-resource-id: retention_policy
      x-box-tag: retention_policies
      x-box-variant: standard
      description: 'A retention policy blocks permanent deletion of content for a specified amount of time. Admins can create retention policies and then later assign them to specific folders or their entire enterprise.  To use this feature, you must have the manage retention policies scope enabled for your API key via your application management console.'
      allOf:
        - $ref: '#/components/schemas/RetentionPolicy--Mini'
        - properties:
            policy_type:
              type: string
              example: finite
              description: 'The type of the retention policy. A retention policy type can either be `finite`, where a specific amount of time to retain the content is known upfront, or `indefinite`, where the amount of time to retain the content is still unknown.'
              enum:
                - finite
                - indefinite
            status:
              type: string
              example: active
              description: 'The status of the retention policy. The status of a policy will be `active`, unless explicitly retired by an administrator, in which case the status will be `retired`. Once a policy has been retired, it cannot become active again.'
              enum:
                - active
                - retired
            created_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: A mini user object representing the user that created the retention policy
            created_at:
              type: string
              format: date-time
              description: When the retention policy object was created
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: When the retention policy object was last modified
              example: '2012-12-12T10:53:43-08:00'
    RetentionPolicy--Mini:
      title: Retention policy (Mini)
      type: object
      x-box-resource-id: retention_policy--mini
      x-box-variant: mini
      description: 'A mini representation of a retention policy, used when nested within another resource.'
      allOf:
        - $ref: '#/components/schemas/RetentionPolicy--Base'
        - properties:
            policy_name:
              type: string
              description: The name given to the retention policy
              example: Some Policy Name
            retention_length:
              type: string
              format: int32
              example: '365'
              minimum: 1
              description: 'The length of the retention policy. This length specifies the duration in days that the retention policy will be active for after being assigned to content.  If the policy has A `policy_type` of `indefinite`, the `retention_length` will also be `indefinite`.'
            disposition_action:
              type: string
              example: permanently_delete
              description: 'The disposition action of the retention policy. This action can be `permanently_delete`, which will cause the content retained by the policy to be permanently deleted, or `remove_retention`, which will lift the retention policy from the content, allowing it to be deleted by users, once the retention policy has expired.'
              enum:
                - permanently_delete
                - remove_retention
    RetentionPolicy--Base:
      title: Retention policy (Base)
      type: object
      x-box-resource-id: retention_policy--base
      x-box-tag: retention_policies
      x-box-variants:
        - base
        - mini
        - standard
      x-box-variant: base
      description: 'The bare basic representation of a file version, the minimal amount of fields returned when using the `fields` query parameter.'
      properties:
        id:
          type: string
          nullable: false
          description: The unique identifier that represent a file version.
          example: '12345'
        type:
          type: string
          description: '`retention_policy`'
          example: retention_policy
          enum:
            - retention_policy
          nullable: false
    RetentionPolicyAssignment:
      title: Retention policy assignment
      type: object
      x-box-resource-id: retention_policy_assignment
      x-box-tag: retention_policy_assignments
      description: 'The retention policy assignment endpoint provides a way for admins to apply a retention policy on a per-folder basis, or place a blanket policy over the entire enterprise.'
      properties:
        id:
          type: string
          description: The unique identifier for this retention policy assignment
          example: '11446498'
        type:
          type: string
          description: '`retention_policy_assignment`'
          example: retention_policy_assignment
          enum:
            - retention_policy_assignment
        retention_policy:
          description: A mini retention policy object representing the retention policy that has been assigned to this content
          $ref: '#/components/schemas/RetentionPolicy--Mini'
        assigned_to:
          title: Reference
          description: The bare basic reference for an object
          type: object
          properties:
            id:
              type: string
              description: The unique identifier for this object
              example: '11446498'
            type:
              type: string
              description: The type for this object
              example: file
        assigned_by:
          description: A mini user object representing the user that created the retention policy assignment object
          $ref: '#/components/schemas/User--Mini'
        assigned_at:
          type: string
          format: date-time
          description: When the retention policy assignment object was created
          example: '2012-12-12T10:53:43-08:00'
    RetentionPolicyAssignments:
      title: Retention policy assignments
      type: object
      x-box-resource-id: retention_policy_assignments
      x-box-tag: retention_policy_assignments
      description: A list of retention policy assignments
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/RetentionPolicyAssignment'
    SearchResults:
      title: Search Results
      type: object
      x-box-resource-id: search_results
      x-box-tag: search
      description: 'A list of files, folders and web links that matched the search query.'
      allOf:
        - type: object
          properties:
            total_count:
              description: One greater than the offset of the last entry in the search results. The total number of entries in the collection may be less than `total_count`.
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for this search. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed.
              example: 1000
              type: integer
              format: int64
            offset:
              description: The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter used.
              example: 2000
              type: integer
              format: int64
        - properties:
            entries:
              description: The search results for the query provided.
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/File'
                  - $ref: '#/components/schemas/Folder'
                  - $ref: '#/components/schemas/WebLink'
    SearchResultsWithSharedLinks:
      title: Search Results (including Shared Links)
      type: object
      x-box-resource-id: search_results_with_shared_links
      x-box-tag: search
      description: 'A list of files, folders and web links that matched the search query, including the additional information about any shared links through which the item has been shared with the user.  This response format is only returned when the `include_recent_shared_links` query parameter has been set to `true`.'
      allOf:
        - type: object
          properties:
            total_count:
              description: One greater than the offset of the last entry in the search results. The total number of entries in the collection may be less than `total_count`.
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for this search. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed.
              example: 1000
              type: integer
              format: int64
            offset:
              description: The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter used.
              example: 2000
              type: integer
              format: int64
        - properties:
            entries:
              description: 'The search results for the query provided, including the additional information about any shared links through which the item has been shared with the user.'
              type: array
              items:
                $ref: '#/components/schemas/SearchResultWithSharedLink'
    SearchResultWithSharedLink:
      title: Search Result (including Shared Link)
      type: object
      x-box-resource-id: search_result_with_shared_link
      x-box-tag: search
      description: 'A single of files, folder or web link that matched the search query, including the additional information about the shared link through which the item has been shared with the user.  This response format is only returned when the `include_recent_shared_links` query parameter has been set to `true`.'
      properties:
        accessible_via_shared_link:
          description: The optional shared link through which the user has access to this item. This value is only returned for items for which the user has recently accessed the file through a shared link. For all other items this value will return `null`.
          example: 'https://www.box.com/s/vspke7y05sb214wjokpk'
          type: string
        item:
          oneOf:
            - $ref: '#/components/schemas/File'
            - $ref: '#/components/schemas/Folder'
            - $ref: '#/components/schemas/WebLink'
        type:
          description: The result type. The value is always `search_result`.
          example: search_result
          type: string
    StoragePolicy:
      title: Storage policy
      type: object
      x-box-resource-id: storage_policy
      x-box-variant: standard
      description: The Storage Policy object describes the storage zone.
      allOf:
        - $ref: '#/components/schemas/StoragePolicy--Mini'
        - properties:
            name:
              description: A descriptive name of the region
              type: string
              example: Montreal / Dublin
    StoragePolicies:
      title: Storage policies
      type: object
      x-box-resource-id: storage_policies
      x-box-tag: storage_policies
      description: A list of storage policies.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/StoragePolicy'
    StoragePolicy--Mini:
      title: Storage policy (Mini)
      type: object
      x-box-resource-id: storage_policy--mini
      x-box-tag: storage_policies
      x-box-variants:
        - standard
        - mini
      x-box-variant: mini
      description: A mini description of a Storage Policy object
      properties:
        id:
          type: string
          description: The unique identifier for this storage policy
          example: '11446498'
        type:
          type: string
          description: '`storage_policy`'
          example: storage_policy
          enum:
            - storage_policy
    StoragePolicyAssignment:
      title: Storage policy assignment
      type: object
      x-box-resource-id: storage_policy_assignment
      x-box-tag: storage_policy_assignments
      description: The assignment of a storage policy to a user or enterprise
      properties:
        storage_policy:
          description: The assigned storage policy
          $ref: '#/components/schemas/StoragePolicy--Mini'
        assigned_to:
          description: The enterprise or use the policy is assigned to
          $ref: '#/components/schemas/AssignedTo'
    StoragePolicyAssignments:
      title: Storage policy assignments
      type: object
      x-box-resource-id: storage_policy_assignments
      x-box-tag: storage_policy_assignments
      description: A list of storage policy assignments.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/StoragePolicyAssignment'
    Task:
      title: Task
      type: object
      x-box-resource-id: task
      x-box-tag: tasks
      description: A task allows for file-centric workflows within Box. Users can create tasks on files and assign them to other users for them to complete the tasks.
      properties:
        id:
          type: string
          description: The unique identifier for this task
          example: '11446498'
        type:
          type: string
          description: '`task`'
          example: task
          enum:
            - task
        item:
          description: The file associated with the task
          $ref: '#/components/schemas/File--Mini'
        due_at:
          type: string
          format: date-time
          description: When the task is due
          example: '2012-12-12T10:53:43-08:00'
        action:
          type: string
          example: review
          description: The type of task the task assignee will be prompted to perform.
          enum:
            - review
            - complete
        message:
          type: string
          description: A message that will be included with the task
          example: Legal review
        task_assignment_collection:
          description: A collection of task assignment objects associated with the task
          $ref: '#/components/schemas/TaskAssignments'
        is_completed:
          type: boolean
          description: Whether the task has been completed
          example: true
        created_by:
          description: The user who created the task
          $ref: '#/components/schemas/User--Mini'
        created_at:
          type: string
          format: date-time
          description: When the task object was created
          example: '2012-12-12T10:53:43-08:00'
        completion_rule:
          type: string
          description: Defines which assignees need to complete this task before the task is considered completed.  * `all_assignees` requires all assignees to review or approve the the task in order for it to be considered completed. * `any_assignee` accepts any one assignee to review or approve the the task in order for it to be considered completed.
          example: all_assignees
          enum:
            - all_assignees
            - any_assignee
    Tasks:
      title: Tasks
      type: object
      x-box-resource-id: tasks
      x-box-tag: tasks
      description: A list of tasks
      properties:
        total_count:
          description: One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.
          example: 5000
          type: integer
          format: int64
        entries:
          type: array
          description: Tasks on files which other users can to complete for a user.
          items:
            $ref: '#/components/schemas/Task'
    TaskAssignment:
      title: Task assignment
      type: object
      x-box-resource-id: task_assignment
      x-box-tag: task_assignments
      description: A task assignment defines which task is assigned to which user to complete.
      properties:
        id:
          type: string
          description: The unique identifier for this task assignment
          example: '11446498'
        type:
          type: string
          description: '`task_assignment`'
          example: task_assignment
          enum:
            - task_assignment
        item:
          description: The file that the task has been assigned to.
          $ref: '#/components/schemas/File--Mini'
        assigned_to:
          description: The user that the task has been assigned to.
          $ref: '#/components/schemas/User--Mini'
        message:
          type: string
          example: Please review
          description: A message that will is included with the task assignment. This is visible to the assigned user in the web and mobile UI.
        completed_at:
          type: string
          format: date-time
          description: The date at which this task assignment was completed. This will be `null` if the task is not completed yet.
          example: '2012-12-12T10:53:43-08:00'
        assigned_at:
          type: string
          format: date-time
          description: The date at which this task was assigned to the user.
          example: '2012-12-12T10:53:43-08:00'
        reminded_at:
          type: string
          format: date-time
          description: The date at which the assigned user was reminded of this task assignment.
          example: '2012-12-12T10:53:43-08:00'
        resolution_state:
          type: string
          description: The current state of the assignment. The available states depend on the `action` value of the task object.
          example: incomplete
          enum:
            - completed
            - incomplete
            - approved
            - rejected
        assigned_by:
          description: The user who assigned this task.
          $ref: '#/components/schemas/User--Mini'
    TaskAssignments:
      title: Task assignments
      type: object
      x-box-resource-id: task_assignments
      x-box-tag: task_assignments
      description: A list of task assignments
      properties:
        total_count:
          description: The total number of items in this collection.
          example: 100
          type: integer
          format: int64
        entries:
          type: array
          description: The entries of task assignments.
          items:
            $ref: '#/components/schemas/TaskAssignment'
    TermsOfService:
      title: Terms of service
      type: object
      x-box-resource-id: terms_of_service
      x-box-variant: standard
      description: The root-level record that is supposed to represent a single Terms of Service.
      allOf:
        - $ref: '#/components/schemas/TermsOfService--Mini'
        - properties:
            status:
              description: Whether these terms are enabled or not
              type: string
              example: enabled
              enum:
                - enabled
                - disabled
            enterprise:
              allOf:
                - title: Enterprise
                  type: object
                  description: A representation of a Box enterprise
                  properties:
                    id:
                      type: string
                      description: The unique identifier for this enterprise.
                      example: '11446498'
                    type:
                      type: string
                      description: '`enterprise`'
                      example: enterprise
                      enum:
                        - enterprise
                    name:
                      description: The name of the enterprise
                      example: Acme Inc.
                      type: string
                - description: The enterprise these terms apply to
            tos_type:
              description: Whether to apply these terms to managed users or external users
              type: string
              example: managed
              enum:
                - managed
                - external
            text:
              description: The text for your terms and conditions. This text could be empty if the `status` is set to `disabled`.
              type: string
              example: 'By using this service, you agree to ...'
            created_at:
              type: string
              format: date-time
              description: When the legal item was created
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: When the legal item was modified.
              example: '2012-12-12T10:53:43-08:00'
    TermsOfServices:
      title: Terms of services
      type: object
      x-box-resource-id: terms_of_services
      x-box-tag: terms_of_services
      description: A list of terms of services
      properties:
        total_count:
          description: The total number of objects.
          example: 2
          type: integer
          format: int64
        entries:
          type: array
          description: The entries of terms of service.
          items:
            $ref: '#/components/schemas/TermsOfService'
    TermsOfService--Mini:
      title: Terms of service (Mini)
      type: object
      x-box-resource-id: terms_of_service--mini
      x-box-tag: terms_of_services
      x-box-variants:
        - mini
        - standard
      x-box-variant: mini
      description: The root-level record that is supposed to represent a single Terms of Service.
      properties:
        id:
          type: string
          description: The unique identifier for this terms of service.
          example: '11446498'
        type:
          type: string
          description: '`terms_of_service`'
          example: terms_of_service
          enum:
            - terms_of_service
    TermsOfServiceUserStatus:
      title: Terms of service user status
      type: object
      x-box-resource-id: terms_of_service_user_status
      x-box-tag: terms_of_service_user_statuses
      description: The association between a Terms of Service and a user
      properties:
        id:
          type: string
          description: The unique identifier for this terms of service user status
          example: '11446498'
        type:
          type: string
          description: '`terms_of_service_user_status`'
          example: terms_of_service_user_status
          enum:
            - terms_of_service_user_status
        tos:
          description: The terms of service
          $ref: '#/components/schemas/TermsOfService--Mini'
        user:
          description: The user
          $ref: '#/components/schemas/User--Mini'
        is_accepted:
          type: boolean
          example: true
          description: If the user has accepted the terms of services
        created_at:
          type: string
          format: date-time
          description: When the legal item was created
          example: '2012-12-12T10:53:43-08:00'
        modified_at:
          type: string
          format: date-time
          description: When the legal item was modified.
          example: '2012-12-12T10:53:43-08:00'
    TermsOfServiceUserStatuses:
      title: Terms of service user statuses
      type: object
      x-box-resource-id: terms_of_services_user_statuses
      x-box-tag: terms_of_service_user_statuses
      description: A list of terms of service user statuses
      properties:
        total_count:
          description: The total number of objects.
          example: 2
          type: integer
          format: int64
        entries:
          type: array
          description: The associations between a Terms of Service and a user.
          items:
            $ref: '#/components/schemas/TermsOfServiceUserStatus'
    UploadPart:
      title: Upload part
      type: object
      x-box-resource-id: upload_part
      x-box-variant: standard
      description: The representation of an upload session chunk.
      allOf:
        - $ref: '#/components/schemas/UploadPart--Mini'
        - properties:
            sha1:
              description: The SHA1 hash of the chunk.
              type: string
              example: 134b65991ed521fcfe4724b7d814ab8ded5185dc
    UploadPart--Mini:
      title: Upload part (Mini)
      type: object
      x-box-resource-id: upload_part--mini
      x-box-tag: chunked_uploads
      x-box-variants:
        - mini
        - standard
      x-box-variant: mini
      description: The basic representation of an upload session chunk.
      properties:
        part_id:
          description: The unique ID of the chunk.
          type: string
          example: 6F2D3486
        offset:
          description: The offset of the chunk within the file in bytes. The lower bound of the position of the chunk within the file.
          type: integer
          format: int64
          example: 16777216
        size:
          description: The size of the chunk in bytes.
          type: integer
          format: int64
          example: 3222784
    UploadedPart:
      title: Uploaded part
      type: object
      x-box-resource-id: uploaded_part
      description: 'A chunk of a file uploaded as part of an upload session, as returned by some endpoints.'
      x-box-tag: chunked_uploads
      properties:
        part:
          $ref: '#/components/schemas/UploadPart'
    UploadParts:
      title: Upload parts
      type: object
      x-box-resource-id: upload_parts
      x-box-tag: chunked_uploads
      description: A list of uploaded chunks for an upload session.
      allOf:
        - type: object
          description: The part of an API response that describes pagination
          properties:
            total_count:
              description: 'One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            offset:
              description: 'The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 2000
              type: integer
              format: int64
            order:
              description: 'The order by which items are returned.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              type: array
              items:
                type: object
                description: The order in which a pagination is ordered
                properties:
                  by:
                    description: The field to order by
                    example: type
                    type: string
                  direction:
                    type: string
                    description: 'The direction to order by, either ascending or descending'
                    example: ASC
                    enum:
                      - ASC
                      - DESC
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/UploadPart'
    UploadSession:
      title: Upload session
      type: object
      x-box-resource-id: upload_session
      description: An upload session for chunk uploading a file.
      x-box-tag: chunked_uploads
      properties:
        id:
          type: string
          description: The unique identifier for this session
          example: F971964745A5CD0C001BBE4E58196BFD
        type:
          type: string
          description: '`upload_session`'
          example: upload_session
          enum:
            - upload_session
        session_expires_at:
          description: The date and time when this session expires.
          type: string
          format: date-time
          example: '2012-12-12T10:53:43-08:00'
        part_size:
          type: integer
          format: int64
          example: 1024
          description: The  size in bytes that must be used for all parts of of the upload.  Only the last part is allowed to be of a smaller size.
        total_parts:
          type: integer
          format: int32
          example: 1000
          description: 'The total number of parts expected in this upload session, as determined by the file size and part size.'
        num_parts_processed:
          type: integer
          format: int32
          example: 455
          description: 'The number of parts that have been uploaded and processed by the server. This starts at `0`.  When committing a file files, inspecting this property can provide insight if all parts have been uploaded correctly.'
        session_endpoints:
          description: A list of endpoints for a chunked upload session.
          $ref: '#/components/schemas/SessionEndpoint'
    UploadUrl:
      title: Upload URL
      type: object
      x-box-resource-id: upload_url
      x-box-tag: uploads
      description: The details for the upload session for the file.
      properties:
        upload_url:
          type: string
          example: 'https://upload-las.app.box.com/api/2.0/files/content?upload_session_id=1234'
          description: A URL for an upload session that can be used to upload the file.
        upload_token:
          type: string
          example: Pc3FIOG9vSGV4VHo4QzAyg5T1JvNnJoZ3ExaVNyQWw6WjRsanRKZG5lQk9qUE1BVQP
          description: An optional access token to use to upload the file
    User:
      title: User
      type: object
      x-box-resource-id: user
      x-box-variant: standard
      description: 'A standard representation of a user, as returned from any user API endpoints by default'
      allOf:
        - $ref: '#/components/schemas/User--Mini'
        - properties:
            created_at:
              type: string
              format: date-time
              description: When the user object was created
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: When the user object was last modified
              example: '2012-12-12T10:53:43-08:00'
            language:
              type: string
              description: 'The language of the user, formatted in modified version of the [ISO 639-1](/guides/api-calls/language-codes) format.'
              example: en
            timezone:
              type: string
              format: timezone
              description: The user's timezone
              example: Africa/Bujumbura
            space_amount:
              type: integer
              format: int64
              description: The user’s total available space amount in bytes
              example: 11345156112
            space_used:
              type: integer
              format: int64
              description: The amount of space in use by the user
              example: 1237009912
            max_upload_size:
              type: integer
              format: int64
              description: The maximum individual file size in bytes the user can have
              example: 2147483648
            status:
              type: string
              enum:
                - active
                - inactive
                - cannot_delete_edit
                - cannot_delete_edit_upload
              description: The user's account status
              example: active
            job_title:
              type: string
              description: The user’s job title
              maxLength: 100
              example: CEO
            phone:
              type: string
              description: The user’s phone number
              maxLength: 100
              example: '6509241374'
            address:
              type: string
              description: The user’s address
              maxLength: 255
              example: '900 Jefferson Ave, Redwood City, CA 94063'
            avatar_url:
              type: string
              description: URL of the user’s avatar image
              example: 'https://www.box.com/api/avatar/large/181216415'
            notification_email:
              type: object
              description: 'An alternate notification email address to which email notifications are sent. When it''s confirmed, this will be the email address to which notifications are sent instead of to the primary email address.'
              nullable: true
              properties:
                email:
                  type: string
                  example: notifications@example.com
                  description: The email address to send the notifications to.
                is_confirmed:
                  type: boolean
                  example: true
                  description: Specifies if this email address has been confirmed.
    Users:
      title: Users
      type: object
      x-box-resource-id: users
      x-box-tag: users
      description: A list of users.
      allOf:
        - type: object
          description: The part of an API response that describes pagination
          properties:
            total_count:
              description: 'One greater than the offset of the last entry in the entire collection. The total number of entries in the collection may be less than `total_count`.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 5000
              type: integer
              format: int64
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            offset:
              description: 'The 0-based offset of the first entry in this set. This will be the same as the `offset` query parameter.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              example: 2000
              type: integer
              format: int64
            order:
              description: 'The order by which items are returned.  This field is only returned for calls that use offset-based pagination. For marker-based paginated APIs, this field will be omitted.'
              type: array
              items:
                type: object
                description: The order in which a pagination is ordered
                properties:
                  by:
                    description: The field to order by
                    example: type
                    type: string
                  direction:
                    type: string
                    description: 'The direction to order by, either ascending or descending'
                    example: ASC
                    enum:
                      - ASC
                      - DESC
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/User'
    User--Full:
      title: User (Full)
      type: object
      x-box-resource-id: user--full
      x-box-variant: full
      description: 'A full representation of a user, as can be returned from any user API endpoint.'
      allOf:
        - $ref: '#/components/schemas/User'
        - properties:
            role:
              type: string
              enum:
                - admin
                - coadmin
                - user
              description: The user’s enterprise role
              example: admin
            tracking_codes:
              type: array
              description: Tracking codes allow an admin to generate reports from the admin console and assign an attribute to a specific group of users. This setting must be enabled for an enterprise before it can be used.
              items:
                type: object
                description: Custom tracking code for a user.
                properties:
                  type:
                    type: string
                    description: '`tracking_code`'
                    example: tracking_code
                    enum:
                      - tracking_code
                  name:
                    type: string
                    description: 'The name of the tracking code, which must be preconfigured in the Admin Console'
                    example: department
                  value:
                    type: string
                    description: The value of the tracking code
                    example: Sales
            can_see_managed_users:
              type: boolean
              example: true
              description: Whether the user can see other enterprise users in their contact list
            is_sync_enabled:
              type: boolean
              description: Whether the user can use Box Sync
              example: true
            is_external_collab_restricted:
              type: boolean
              example: true
              description: Whether the user is allowed to collaborate with users outside their enterprise
            is_exempt_from_device_limits:
              type: boolean
              example: true
              description: Whether to exempt the user from Enterprise device limits
            is_exempt_from_login_verification:
              type: boolean
              example: true
              description: Whether the user must use two-factor authentication
            enterprise:
              allOf:
                - title: Enterprise
                  type: object
                  description: A representation of a Box enterprise
                  properties:
                    id:
                      type: string
                      description: The unique identifier for this enterprise.
                      example: '11446498'
                    type:
                      type: string
                      description: '`enterprise`'
                      example: enterprise
                      enum:
                        - enterprise
                    name:
                      description: The name of the enterprise
                      example: Acme Inc.
                      type: string
                - description: Representation of the user’s enterprise
            my_tags:
              type: array
              items:
                type: string
              example:
                - important
              description: Tags for all files and folders owned by the user. Values returned will only contain tags that were set by the requester.
            hostname:
              type: string
              example: 'https://example.app.box.com/'
              description: 'The root (protocol, subdomain, domain) of any links that need to be generated for the user'
            is_platform_access_only:
              type: boolean
              example: true
              description: Whether the user is an App User
            external_app_user_id:
              type: string
              example: my-user-1234
              description: 'An external identifier for an app user, which can be used to look up the user. This can be used to tie user IDs from external identity providers to Box users.'
    User--Mini:
      title: User (Mini)
      type: object
      x-box-resource-id: user--mini
      x-box-variant: mini
      description: 'A mini representation of a user, as can be returned when nested within other resources.'
      allOf:
        - $ref: '#/components/schemas/User--Base'
        - properties:
            name:
              type: string
              description: The display name of this user
              example: Aaron Levie
              maxLength: 50
              nullable: false
            login:
              type: string
              format: email
              description: The primary email address of this user
              example: ceo@example.com
              nullable: false
    User--Base:
      title: User (Base)
      type: object
      x-box-resource-id: user--base
      x-box-tag: users
      x-box-variants:
        - base
        - mini
        - standard
        - full
      x-box-variant: base
      description: 'A mini representation of a user, used when nested within another resource.'
      properties:
        id:
          type: string
          description: The unique identifier for this user
          example: '11446498'
        type:
          type: string
          description: '`user`'
          example: user
          nullable: false
          enum:
            - user
    Watermark:
      title: Watermark
      type: object
      x-box-resource-id: watermark
      x-box-tag: file_watermarks
      description: A watermark is a semi-transparent overlay on an embedded file preview that displays a viewer's email address or user ID and the time of access over a file's content
      properties:
        watermark:
          type: object
          description: Watermark details
          properties:
            created_at:
              type: string
              format: date-time
              description: When this watermark was created
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: When this task was modified
              example: '2012-12-12T10:53:43-08:00'
    Webhook:
      title: Webhook
      type: object
      x-box-resource-id: webhook
      x-box-tag: webhooks
      description: Represents a configured webhook.
      properties:
        id:
          type: string
          description: The unique identifier for this webhook.
          example: '11446498'
        type:
          type: string
          description: '`webhook`'
          example: webhook
          enum:
            - webhook
        target:
          type: object
          description: The item that will trigger the webhook
          properties:
            id:
              description: The ID of the item to trigger a webhook
              type: string
              example: '1231232'
            type:
              description: The type of item to trigger a webhook
              type: string
              example: file
              enum:
                - file
                - folder
        created_by:
          description: The user who created the webhook
          $ref: '#/components/schemas/User--Mini'
        created_at:
          type: string
          format: date-time
          description: A timestamp identifying the time that the webhook was created.
          example: '2012-12-12T10:53:43-08:00'
        address:
          type: string
          example: 'https://example.com/webhooks'
          description: The URL that is notified by this webhook
        triggers:
          type: array
          example:
            - FILE.UPLOADED
          description: An array of event names that this webhook is to be triggered for
          items:
            title: Webhook Trigger
            example: FILE.UPLOADED
            type: string
            description: The event name that triggered this webhook
            enum:
              - FILE.UPLOADED
              - FILE.PREVIEWED
              - FILE.DOWNLOADED
              - FILE.TRASHED
              - FILE.DELETED
              - FILE.RESTORED
              - FILE.COPIED
              - FILE.MOVED
              - FILE.LOCKED
              - FILE.UNLOCKED
              - FILE.RENAMED
              - COMMENT.CREATED
              - COMMENT.UPDATED
              - COMMENT.DELETED
              - TASK_ASSIGNMENT.CREATED
              - TASK_ASSIGNMENT.UPDATED
              - METADATA_INSTANCE.CREATED
              - METADATA_INSTANCE.UPDATED
              - METADATA_INSTANCE.DELETED
              - FOLDER.CREATED
              - FOLDER.RENAMED
              - FOLDER.DOWNLOADED
              - FOLDER.RESTORED
              - FOLDER.DELETED
              - FOLDER.COPIED
              - FOLDER.MOVED
              - FOLDER.TRASHED
              - WEBHOOK.DELETED
              - COLLABORATION.CREATED
              - COLLABORATION.ACCEPTED
              - COLLABORATION.REJECTED
              - COLLABORATION.REMOVED
              - COLLABORATION.UPDATED
              - SHARED_LINK.DELETED
              - SHARED_LINK.CREATED
              - SHARED_LINK.UPDATED
    Webhooks:
      title: Webhooks
      type: object
      x-box-resource-id: webhooks
      x-box-tag: webhooks
      description: A list of webhooks.
      allOf:
        - type: object
          description: The part of an API response that describes marker based pagination
          properties:
            limit:
              description: The limit that was used for these entries. This will be the same as the `limit` query parameter unless that value exceeded the maximum value allowed. The maximum value varies by API.
              example: 1000
              type: integer
              format: int64
            next_marker:
              description: The marker for the start of the next page of results.
              example: 3000
              type: integer
              format: int64
            prev_marker:
              description: The marker for the start of the previous page of results.
              example: 1000
              type: integer
              format: int64
        - properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/Webhook'
    WebLink:
      title: Web link
      type: object
      x-box-resource-id: web_link
      x-box-variant: standard
      description: 'Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.  Web link objects are treated similarly to file objects, they will also support most actions that apply to regular files.'
      allOf:
        - $ref: '#/components/schemas/WebLink--Mini'
        - properties:
            parent:
              allOf:
                - $ref: '#/components/schemas/Folder--Mini'
                - description: The parent object the web link belongs to
            description:
              type: string
              example: Example page
              description: The description accompanying the web link. This is visible within the Box web application.
            path_collection:
              allOf:
                - title: Path collection
                  description: A list of parent folders for an item.
                  type: object
                  properties:
                    total_count:
                      description: The number of folders in this list.
                      example: 1
                      type: integer
                      format: int64
                      nullable: false
                    entries:
                      type: array
                      description: The parent folders for this item
                      nullable: false
                      items:
                        $ref: '#/components/schemas/Folder--Mini'
                - description: 'The tree of folders that this web link is contained in, starting at the root.'
                - nullable: false
            created_at:
              type: string
              format: date-time
              description: When this file was created on Box’s servers.
              example: '2012-12-12T10:53:43-08:00'
            modified_at:
              type: string
              format: date-time
              description: When this file was last updated on the Box servers.
              example: '2012-12-12T10:53:43-08:00'
            trashed_at:
              type: string
              format: date-time
              nullable: true
              description: When this file was last moved to the trash.
              example: '2012-12-12T10:53:43-08:00'
            purged_at:
              type: string
              format: date-time
              nullable: true
              description: When this file will be permanently deleted.
              example: '2012-12-12T10:53:43-08:00'
            created_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who created this web link
            modified_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who last modified this web link
            owned_by:
              allOf:
                - $ref: '#/components/schemas/User--Mini'
                - description: The user who owns this web link
            shared_link:
              allOf:
                - title: Shared link
                  description: 'Shared links provide direct, read-only access to files or folder on Box.  Shared links with open access level allow anyone with the URL to access the item, while shared links with company or collaborators access levels can only be accessed by appropriately authenticated Box users.'
                  type: object
                  properties:
                    url:
                      type: string
                      format: url
                      description: The URL that can be used to access the item on Box.  This URL will display the item in Box's preview UI where the file can be downloaded if allowed.  This URL will continue to work even when a custom `vanity_url` has been set for this shared link.
                      example: 'https://www.box.com/s/vspke7y05sb214wjokpk'
                      nullable: false
                    download_url:
                      type: string
                      format: url
                      x-box-premium-feature: true
                      description: A URL that can be used to download the file. This URL can be used in a browser to download the file. This URL includes the file extension so that the file will be saved with the right file type.  This property will be `null` for folders.
                      example: 'https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg'
                      nullable: true
                    vanity_url:
                      type: string
                      format: url
                      description: The "Custom URL" that can also be used to preview the item on Box.  Custom URLs can only be created or modified in the Box Web application.
                      example: 'https://acme.app.box.com/v/my_url/'
                      nullable: true
                    vanity_name:
                      type: string
                      description: 'The custom name of a shared link, as used in the `vanity_url` field.'
                      example: my_url
                      nullable: true
                    access:
                      type: string
                      description: 'The access level for this shared link.  * `open` - provides access to this item to anyone with this link * `company` - only provides access to this item to people the same company * `collaborators` - only provides access to this item to people who are    collaborators on this item  If this field is omitted when creating the shared link, the access level will be set to the default access level specified by the enterprise admin.'
                      enum:
                        - open
                        - company
                        - collaborators
                      example: open
                      nullable: false
                    effective_access:
                      type: string
                      description: The effective access level for the shared link. This can be a more restrictive access level than the value in the `access` field when the enterprise settings restrict the allowed access levels.
                      enum:
                        - open
                        - company
                        - collaborators
                      example: company
                      nullable: false
                    effective_permission:
                      type: string
                      description: The effective permissions for this shared link.
                      enum:
                        - can_download
                        - can_preview
                      example: can_download
                      nullable: false
                    unshared_at:
                      type: string
                      format: date-time
                      description: The date and time when this link will be unshared. This field can only be set by users with paid accounts.
                      example: '2018-04-13T13:53:23-07:00'
                      nullable: true
                    is_password_enabled:
                      type: boolean
                      description: Defines if the shared link requires a password to access the item.
                      example: true
                      nullable: false
                    permissions:
                      type: object
                      description: Defines if this link allows a user to preview and download an item.
                      properties:
                        can_download:
                          type: boolean
                          example: true
                          nullable: false
                          description: 'Defines if the shared link allows for the item to be downloaded. For shared links on folders, this also applies to any items in the folder.  This value can be set to `true` when the effective access level is set to `open` or `company`, not `collaborators`.'
                        can_preview:
                          type: boolean
                          example: true
                          nullable: false
                          description: Defines if the shared link allows for the item to be previewed.  This value is always `true`. For shared links on folders this also applies to any items in the folder.
                    download_count:
                      type: integer
                      example: 3
                      description: The number of times this item has been downloaded.
                      nullable: false
                    preview_count:
                      type: integer
                      example: 3
                      description: The number of times this item has been previewed.
                      nullable: false
                - description: The shared link object for this item. Will be `null` if no shared link has been created.
                - nullable: true
            item_status:
              type: string
              example: active
              enum:
                - active
                - trashed
                - deleted
              description: 'Whether this item is deleted or not. Values include `active`, `trashed` if the file has been moved to the trash, and `deleted` if the file has been permanently deleted'
    WebLink--Base:
      title: Web link (Base)
      type: object
      x-box-resource-id: web_link--base
      x-box-tag: web_links
      x-box-variants:
        - base
        - mini
        - standard
      x-box-variant: base
      description: 'Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.  Web link objects are treated similarly to file objects, they will also support most actions that apply to regular files.'
      properties:
        id:
          type: string
          description: The unique identifier for this web link
          example: '11446498'
        type:
          type: string
          description: '`web_link`'
          example: web_link
          enum:
            - web_link
        etag:
          type: string
          example: '1'
          description: The entity tag of this web link. Used with `If-Match` headers.
    WebLink--Mini:
      title: Web link (Mini)
      type: object
      x-box-resource-id: web_link--mini
      x-box-variant: mini
      description: 'Web links are objects that point to URLs. These objects are also known as bookmarks within the Box web application.  Web link objects are treated similarly to file objects, they will also support most actions that apply to regular files.'
      allOf:
        - $ref: '#/components/schemas/WebLink--Base'
        - properties:
            url:
              type: string
              example: 'https://www.example.com/example/1234'
              description: The URL this web link points to
            sequence_id:
              allOf:
                - type: string
                  example: '3'
                  nullable: false
                  description: 'A numeric identifier that represents the most recent user event that has been applied to this item.  This can be used in combination with the `GET /events`-endpoint to filter out user events that would have occurred before this identifier was read.  An example would be where a Box Drive-like application would fetch an item via the API, and then listen to incoming user events for changes to the item. The application would ignore any user events where the `sequence_id` in the event is smaller than or equal to the `sequence_id` in the originally fetched resource.'
                - nullable: false
            name:
              type: string
              description: The name of the web link
              example: My Bookmark
    ZipDownload:
      title: Zip download
      type: object
      x-box-resource-id: zip_download
      x-box-tag: zip_downloads
      x-box-reference-category: zip_downloads
      description: Represents a successful request to create a `zip` archive of a list of files and folders.
      example:
        download_url: 'https://dl.boxcloud.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/content'
        status_url: 'https://api.box.com/2.0/zip_downloads/29l00nfxDyHOt7RphI9zT_w==nDnZEDjY2S8iEWWCHEEiptFxwoWojjlibZjJ6geuE5xnXENDTPxzgbks_yY=/status'
        expires_at: '2020-07-22T11:26:08Z'
        name_conflicts:
          - - id: '12345'
              type: file
              original_name: Report.pdf
              download_name: 3aa6a7.pdf
            - id: '34325'
              type: file
              original_name: Report.pdf
              download_name: 5d53f2.pdf
      properties:
        download_url:
          type: string
          description: 'The URL that can be used to download the `zip` archive. A `Get` request to this URL will start streaming the items requested. By default, this URL is only valid for a few seconds, until the `exires_at` time, unless a download is started after which it is valid for the duration of the download.  It is important to note that the domain and path of this URL might change between API calls, and therefore it''s important to use this URL as-is.'
          example: 'https://dl.boxcloud.com/2.0/zip_downloads/Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd/content'
        status_url:
          type: string
          description: 'The URL that can be used to get the status of the `zip` archive being downloaded. A `Get` request to this URL will return the number of files in the archive as well as the number of items already downloaded or skipped. By default, this URL is only valid for a few seconds, until the `exires_at` time, unless a download is started after which the URL is valid for 12 hours from the start of the download.  It is important to note that the domain and path of this URL might change between API calls, and therefore it''s important to use this URL as-is.'
          example: 'https://api.box.com/2.0/zip_downloads/Lu6fA9Ob-jyysp3AAvMF4AkLEwZwAYbL=tgj2zIC=eK9RvJnJbjJl9rNh2qBgHDpyOCAOhpM=vajg2mKq8Mdd/status'
        expires_at:
          type: string
          format: date-time
          description: 'The time and date when this archive will expire. After this time the `status_url` and `download_url` will return an error.  By default, these URLs are only valid for a few seconds, unless a download is started after which the `download_url` is valid for the duration of the download, and the `status_url` is valid for 12 hours from the start of the download.'
          example: '2019-08-29T23:59:00-07:00'
        name_conflicts:
          type: array
          description: 'A list of conflicts that occurred when trying to create the archive. This would occur when multiple items have been requested with the same name.  To solve these conflicts, the API will automatically rename an item and return a mapping between the original item''s name and its new name.  For every conflict, both files will be renamed and therefore this list will always be a multiple of 2.'
          items:
            $ref: '#/components/schemas/NameConflict'
    ZipDownloadStatus:
      title: Zip download status
      type: object
      x-box-resource-id: zip_download_status
      x-box-tag: zip_downloads
      x-box-reference-category: zip_downloads
      description: The status of a `zip` archive being downloaded.
      properties:
        total_file_count:
          type: integer
          description: The total number of files in the archive.
          example: 20
          minimum: 0
          maximum: 10000
        downloaded_file_count:
          type: integer
          description: The number of files that have already been downloaded.
          example: 10
          minimum: 0
        skipped_file_count:
          type: integer
          description: The number of files that have been skipped as they could not be downloaded. In many cases this is due to permission issues that have surfaced between the creation of the request for the archive and the archive being downloaded.
          example: 5
          minimum: 0
        skipped_folder_count:
          type: integer
          description: The number of folders that have been skipped as they could not be downloaded. In many cases this is due to permission issues that have surfaced between the creation of the request for the archive and the archive being downloaded.
          example: 5
          minimum: 0
        state:
          type: string
          description: The state of the archive being downloaded.
          default: in_progeress
          example: success
          enum:
            - in_progress
            - failed
            - success
    FileScope:
      title: File scope
      type: object
      description: A relation between a file and the scopes for which the file can be accessed
      properties:
        scope:
          type: string
          description: The file scopes for the file access
          example: item_download
          enum:
            - annotation_edit
            - annotation_view_all
            - annotation_view_self
            - base_explorer
            - base_picker
            - base_preview
            - base_upload
            - item_delete
            - item_download
            - item_preview
            - item_rename
            - item_share
        object:
          description: The file for which the file can be accessed
          $ref: '#/components/schemas/File--Mini'
    EventSource:
      title: Event source
      type: object
      x-box-resource-id: event_source
      description: The source file or folder that triggered an event in the event stream.
      properties:
        item_type:
          type: string
          nullable: false
          enum:
            - file
            - folder
          description: 'The type of the item that the event represents. Can be `file` or `folder`. '
          example: file
        item_id:
          type: string
          nullable: false
          description: 'The unique identifier that represents the item. '
          example: '560284318361'
        item_name:
          type: string
          nullable: false
          description: 'The name of the item. '
          example: report.pdf
        parent:
          description: The optional folder that this folder is located within.  This value may be `null` for some folders such as the root folder or the trash folder.
          $ref: '#/components/schemas/Folder--Mini'
          nullable: true
        owned_by:
          description: The user who owns this item.
          $ref: '#/components/schemas/User--Mini'
          nullable: false
    SkillCard:
      type: object
      x-box-resource-id: skill_card
      x-box-tag: skills
      title: Skill Card
      description: A generic Box Skill metadata card.
      required:
        - type
        - skill_card_type
        - skill
        - invocation
      properties:
        created_at:
          type: string
          format: date-time
          example: '2018-04-13T13:53:23-07:00'
          description: The optional date and time this card was created at.
        type:
          type: string
          description: '`skill_card`'
          example: skill_card
          enum:
            - skill_card
        skill_card_type:
          type: string
          description: The type of card to add to the file.
          example: status
          enum:
            - transcript
            - keyword
            - timeline
            - status
        skill_card_title:
          type: object
          description: The title of the card.
          required:
            - message
          properties:
            code:
              type: string
              example: my_transcripts
              description: An optional identifier for the title.
            message:
              type: string
              example: My Transcripts
              description: The actual title to show in the UI.
        status:
          type: object
          description: Used with a card of type `status` to set the status of the skill. This can be used to show a message to the user while the Skill is processing the data.
          required:
            - code
          properties:
            code:
              type: string
              description: A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object.
              example: success
              enum:
                - invoked
                - processing
                - success
                - transient_failure
                - permanent_failure
            message:
              type: string
              description: A custom message that can be provided with this status. This will be shown in the web app to the end user.
              example: We're preparing to process your file. Please hold on!
        skill:
          type: object
          description: The service that applied this metadata.
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: service
              description: '`service`'
              enum:
                - service
            id:
              type: string
              example: image-recognition-service
              description: A custom identifier that represent the service that applied this metadata.
        invocation:
          type: object
          description: 'The invocation of this service, used to track which instance of a service applied the metadata.'
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: skill_invocation
              description: '`skill_invocation`'
              enum:
                - skill_invocation
            id:
              type: string
              example: image-recognition-service-123
              description: 'A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata.'
        duration:
          type: integer
          example: 1000
          description: An optional total duration in seconds.  Used with a `skill_card_type` of `transcript` or `timeline`.
        entries:
          type: array
          description: 'An optional list of entries in the metadata card.  This field is used with a `skill_card_type` of `transcript`, `keyword` or `timeline`.'
          items:
            type: object
            description: An entry in the `entries` attribute of a metadata card
            properties:
              text:
                type: string
                example: keyword1
                description: 'The text of the entry. This would be the actual keyword in a `keyword` card, the line of a transcript in a `transcript` card, or the display name for an item when using the `timeline` entry.'
              appears:
                type: array
                description: 'Defines a list of timestamps for an entry. This is used with a `skill_card_type` of `transcript` as well as `timeline` to place items on a timeline.  For a `skill_card_type` of `transcript` there can only be one entry in this list for each item, and only the `start` time is used to place the transcript on the timeline.'
                required:
                  - start
                  - end
                items:
                  type: object
                  description: The timestamp for an entry.
                  properties:
                    start:
                      type: integer
                      example: 1
                      description: The time in seconds when an entry should start appearing on a timeline.
                    end:
                      type: integer
                      example: 20
                      description: The time in seconds when an entry should stop appearing on a timeline. For a `skill_card_type` of `transcript` this value is ignored.
              image_url:
                type: string
                description: 'The image to show on a for an entry that appears on a timeline. This image URL is required for any `timeline` cards. The image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry.'
                example: 'https://example.com/image1.jpg'
    KeywordSkillCard:
      type: object
      x-box-resource-id: keyword_skill_card
      x-box-tag: skills
      title: Keyword Skill Card
      description: A skill card that contains a set of keywords
      required:
        - type
        - skill_card_type
        - skill
        - invocation
        - entries
      properties:
        created_at:
          type: string
          format: date-time
          example: '2018-04-13T13:53:23-07:00'
          description: The optional date and time this card was created at.
        type:
          type: string
          description: '`skill_card`'
          example: skill_card
          enum:
            - skill_card
        skill_card_type:
          type: string
          description: '`keyword`'
          example: keyword
          enum:
            - keyword
        skill_card_title:
          type: object
          description: The title of the card.
          required:
            - message
          properties:
            code:
              type: string
              example: labels
              description: An optional identifier for the title.
            message:
              type: string
              example: Labels
              description: The actual title to show in the UI.
        skill:
          type: object
          description: The service that applied this metadata.
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: service
              description: '`service`'
              enum:
                - service
            id:
              type: string
              example: image-recognition-service
              description: A custom identifier that represent the service that applied this metadata.
        invocation:
          type: object
          description: 'The invocation of this service, used to track which instance of a service applied the metadata.'
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: skill_invocation
              description: '`skill_invocation`'
              enum:
                - skill_invocation
            id:
              type: string
              example: image-recognition-service-123
              description: 'A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata.'
        entries:
          type: array
          description: An list of entries in the metadata card.
          items:
            type: object
            description: An entry in the `entries` attribute of a metadata card
            properties:
              text:
                type: string
                example: keyword1
                description: The text of the keyword.
    TimelineSkillCard:
      type: object
      x-box-resource-id: timeline_skill_card
      x-box-tag: skills
      title: Timeline Skill Card
      description: A Box Skill metadata card that places a list of images on a timeline.
      required:
        - type
        - skill_card_type
        - skill
        - invocation
        - entries
      properties:
        created_at:
          type: string
          format: date-time
          example: '2018-04-13T13:53:23-07:00'
          description: The optional date and time this card was created at.
        type:
          type: string
          description: '`skill_card`'
          example: skill_card
          enum:
            - skill_card
        skill_card_type:
          type: string
          description: '`timeline`'
          example: timeline
          enum:
            - timeline
        skill_card_title:
          type: object
          description: The title of the card.
          required:
            - message
          properties:
            code:
              type: string
              example: Faces
              description: An optional identifier for the title.
            message:
              type: string
              example: Faces
              description: The actual title to show in the UI.
        skill:
          type: object
          description: The service that applied this metadata.
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: service
              description: '`service`'
              enum:
                - service
            id:
              type: string
              example: image-recognition-service
              description: A custom identifier that represent the service that applied this metadata.
        invocation:
          type: object
          description: 'The invocation of this service, used to track which instance of a service applied the metadata.'
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: skill_invocation
              description: '`skill_invocation`'
              enum:
                - skill_invocation
            id:
              type: string
              example: image-recognition-service-123
              description: 'A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata.'
        duration:
          type: integer
          example: 1000
          description: An total duration in seconds of the timeline.
        entries:
          type: array
          description: A list of entries on the timeline.
          items:
            type: object
            description: An single item that's placed on multiple items on the timeline.
            properties:
              text:
                type: string
                example: John
                description: 'The text of the entry. This would be the display name for an item being placed on the timeline, for example the name of the person who was detected in a video.'
              appears:
                type: array
                description: Defines a list of timestamps for when this item should appear on the timeline.
                required:
                  - start
                  - end
                items:
                  type: object
                  description: The timestamp for an entry.
                  properties:
                    start:
                      type: integer
                      example: 1
                      description: The time in seconds when an entry should start appearing on a timeline.
                    end:
                      type: integer
                      example: 20
                      description: The time in seconds when an entry should stop appearing on a timeline.
              image_url:
                type: string
                description: 'The image to show on a for an entry that appears on a timeline. This image URL is required for every entry.  The image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry.'
                example: 'https://example.com/image1.jpg'
    TranscriptSkillCard:
      type: object
      x-box-resource-id: transcript_skill_card
      x-box-tag: skills
      title: Transcript Skill Card
      description: A Box Skill metadata card that adds a transcript to a file.
      required:
        - type
        - skill_card_type
        - skill
        - invocation
        - entries
      properties:
        created_at:
          type: string
          format: date-time
          example: '2018-04-13T13:53:23-07:00'
          description: The optional date and time this card was created at.
        type:
          type: string
          description: '`skill_card`'
          example: skill_card
          enum:
            - skill_card
        skill_card_type:
          type: string
          description: '`transcript`'
          example: transcript
          enum:
            - transcript
        skill_card_title:
          type: object
          description: The title of the card.
          required:
            - message
          properties:
            code:
              type: string
              example: my_transcripts
              description: An optional identifier for the title.
            message:
              type: string
              example: My Transcripts
              description: The actual title to show in the UI.
        skill:
          type: object
          description: The service that applied this metadata.
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: service
              description: '`service`'
              enum:
                - service
            id:
              type: string
              example: transciption-service
              description: A custom identifier that represent the service that applied this metadata.
        invocation:
          type: object
          description: 'The invocation of this service, used to track which instance of a service applied the metadata.'
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: skill_invocation
              description: '`skill_invocation`'
              enum:
                - skill_invocation
            id:
              type: string
              example: transciption-service-123
              description: 'A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata.'
        duration:
          type: integer
          example: 1000
          description: An optional total duration in seconds.  Used with a `skill_card_type` of `transcript` or `timeline`.
        entries:
          type: array
          description: An list of entries for the card. This represents the individual entries of the transcription.
          items:
            type: object
            description: An entry in the `entries` attribute of a metadata card
            properties:
              text:
                type: string
                example: 'Hi, and welcome to this video...'
                description: The text of the entry. This would be the transcribed text assigned to the entry on the timeline.
              appears:
                type: array
                description: Defines when a transcribed bit of text appears. This only includes a start time and no end time.
                required:
                  - start
                items:
                  type: object
                  description: The timestamp for an entry.
                  properties:
                    start:
                      type: integer
                      example: 1
                      description: The time in seconds when an entry should start appearing on a timeline.
    StatusSkillCard:
      type: object
      x-box-resource-id: status_skill_card
      x-box-tag: skills
      title: Status Skill Card
      description: A Box Skill metadata card that puts a status message in the metadata sidebar.
      required:
        - type
        - skill_card_type
        - skill
        - invocation
        - status
      properties:
        created_at:
          type: string
          format: date-time
          example: '2018-04-13T13:53:23-07:00'
          description: The optional date and time this card was created at.
        type:
          type: string
          description: '`skill_card`'
          example: skill_card
          enum:
            - skill_card
        skill_card_type:
          type: string
          description: '`status`'
          example: status
          enum:
            - status
        skill_card_title:
          type: object
          description: The title of the card.
          required:
            - message
          properties:
            code:
              type: string
              example: status
              description: An optional identifier for the title.
            message:
              type: string
              example: Status
              description: The actual title to show in the UI.
        status:
          type: object
          description: 'Sets the status of the skill. This can be used to show a message to the user while the Skill is processing the data, or if it was not able to process the file.'
          required:
            - code
          properties:
            code:
              type: string
              description: A code for the status of this Skill invocation. By default each of these will have their own accompanied messages. These can be adjusted by setting the `message` value on this object.
              example: success
              enum:
                - invoked
                - processing
                - success
                - transient_failure
                - permanent_failure
            message:
              type: string
              description: A custom message that can be provided with this status. This will be shown in the web app to the end user.
              example: We're preparing to process your file. Please hold on!
        skill:
          type: object
          description: The service that applied this metadata.
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: service
              description: '`service`'
              enum:
                - service
            id:
              type: string
              example: image-recognition-service
              description: A custom identifier that represent the service that applied this metadata.
        invocation:
          type: object
          description: 'The invocation of this service, used to track which instance of a service applied the metadata.'
          required:
            - type
            - id
          properties:
            type:
              type: string
              example: skill_invocation
              description: '`skill_invocation`'
              enum:
                - skill_invocation
            id:
              type: string
              example: image-recognition-service-123
              description: 'A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata.'
    SessionEndpoint:
      description: Session endpoints.
      type: object
      properties:
        upload_part:
          type: string
          description: The URL to upload parts to
          example: 'https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD'
        commit:
          type: string
          description: The URL used to commit the file
          example: 'https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/commit'
        abort:
          type: string
          description: The URL for used to abort the session.
          example: 'https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD'
        list_parts:
          type: string
          description: The URL users to list all parts.
          example: 'https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/parts'
        status:
          type: string
          description: The URL used to get the status of the upload.
          example: 'https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD'
        log_event:
          type: string
          description: The URL used to get the upload log from.
          example: 'https://upload.box.com/api/2.0/files/upload_sessions/F971964745A5CD0C001BBE4E58196BFD/log'
    CollaborationAllowlistEnterprise:
      title: CollaborationAllowlistEnterprise
      description: A representation of a Box enterprise
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for this enterprise.
          example: '11446498'
        type:
          type: string
          description: '`enterprise`'
          example: enterprise
          enum:
            - enterprise
        name:
          description: The name of the enterprise
          example: Acme Inc.
          type: string
    CollaborationAllowlistUser:
      title: CollaborationAllowlistUser
      type: object
      description: A representation of a Box enterprise
      properties:
        id:
          type: string
          description: The unique identifier for this enterprise.
          example: '11446498'
        type:
          type: string
          description: '`enterprise`'
          example: enterprise
          enum:
            - enterprise
        name:
          description: The name of the enterprise
          example: Acme Inc.
          type: string
    AssignedTo:
      title: Reference
      description: The bare basic reference for an object
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for this object
          example: '11446498'
        type:
          type: string
          description: The type for this object
          example: file
    NameConflict:
      type: array
      description: 'An individual conflict that occurred when trying to create the archive. This includes an array of 2 objects, each containing the original name and the renamed filename of a file or folder for which the names conflicted.'
      items:
        type: object
        description: 'A file or folder for which a conflict was encountered, This object provides the type and identifier of the original item, as well as a mapping between its original name and it''s new name as it will appear in the archive.'
        properties:
          id:
            type: string
            description: The identifier of the item
            example: '12345'
          type:
            type: string
            description: The type of this item
            example: file
            enum:
              - file
              - folder
          original_name:
            type: string
            description: The original name of this item
            example: Report.pdf
          download_name:
            type: string
            description: The new name of this item as it will appear in the downloaded `zip` archive.
            example: 3aa6a7.pdf
security:
  - OAuth2Security: []
tags:
  - name: Authorization
    x-box-tag: authorization
    x-box-priority: true
  - name: Classifications
    x-box-tag: classifications
  - name: Classifications on files
    x-box-tag: file_classifications
  - name: Classifications on folders
    x-box-tag: folder_classifications
  - name: Collaborations
    x-box-tag: user_collaborations
  - name: Collaborations (List)
    x-box-tag: list_collaborations
  - name: Collections
    x-box-tag: collections
  - name: Comments
    x-box-tag: comments
  - name: Device pinners
    x-box-tag: device_pinners
  - name: Domain restrictions (User exemptions)
    x-box-tag: collaboration_allowlist_exempt_targets
  - name: Domain restrictions for collaborations
    x-box-tag: collaboration_allowlist_entries
  - name: Downloads
    x-box-tag: downloads
  - name: Email aliases
    x-box-tag: email_aliases
  - name: Events
    x-box-tag: events
  - name: File requests
    x-box-tag: file_requests
  - name: File version legal holds
    x-box-tag: file_version_legal_holds
  - name: File version retentions
    x-box-tag: file_version_retentions
  - name: File versions
    x-box-tag: file_versions
  - name: Files
    x-box-tag: files
  - name: Folder Locks
    x-box-tag: folder_locks
  - name: Folders
    x-box-tag: folders
  - name: Group memberships
    x-box-tag: memberships
  - name: Groups
    x-box-tag: groups
  - name: Invites
    x-box-tag: invites
  - name: Legal hold policies
    x-box-tag: legal_hold_policies
  - name: Legal hold policy assignments
    x-box-tag: legal_hold_policy_assignments
  - name: Metadata cascade policies
    x-box-tag: metadata_cascade_policies
  - name: Metadata instances (Files)
    x-box-tag: file_metadata
  - name: Metadata instances (Folders)
    x-box-tag: folder_metadata
  - name: Metadata templates
    x-box-tag: metadata_templates
  - name: Recent items
    x-box-tag: recent_items
  - name: Retention policies
    x-box-tag: retention_policies
  - name: Retention policy assignments
    x-box-tag: retention_policy_assignments
  - name: Search
    x-box-tag: search
  - name: Shared links (Files)
    x-box-tag: shared_links_files
  - name: Shared links (Folders)
    x-box-tag: shared_links_folders
  - name: Skills
    x-box-tag: skills
  - name: Storage policies
    x-box-tag: storage_policies
  - name: Storage policy assignments
    x-box-tag: storage_policy_assignments
  - name: Task assignments
    x-box-tag: task_assignments
  - name: Tasks
    x-box-tag: tasks
  - name: Terms of service
    x-box-tag: terms_of_services
  - name: Terms of service user statuses
    x-box-tag: terms_of_service_user_statuses
  - name: Transfer folders
    x-box-tag: transfer
  - name: Trashed files
    x-box-tag: trashed_files
  - name: Trashed folders
    x-box-tag: trashed_folders
  - name: Trashed items
    x-box-tag: trashed_items
  - name: Trashed web links
    x-box-tag: trashed_web_links
  - name: Uploads
    x-box-tag: uploads
  - name: Uploads (Chunked)
    x-box-tag: chunked_uploads
  - name: User avatars
    x-box-tag: avatars
  - name: Users
    x-box-tag: users
  - name: Watermarks (Files)
    x-box-tag: file_watermarks
  - name: Watermarks (Folders)
    x-box-tag: folder_watermarks
  - name: Web links
    x-box-tag: web_links
  - name: Webhooks
    x-box-tag: webhooks
  - name: Zip Downloads
    x-box-tag: zip_downloads
externalDocs:
  description: Box Developer Documentation
  url: 'https://developer.box.com'
