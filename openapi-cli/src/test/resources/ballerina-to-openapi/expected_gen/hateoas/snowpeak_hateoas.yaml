openapi: 3.0.1
info:
  title: PayloadV
  version: 0.0.0
servers:
  - url: "{server}:{port}/payloadV"
    variables:
      server:
        default: http://localhost
      port:
        default: "9090"
paths:
  /locations:
    get:
      operationId: getLocations
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          links:
            room:
              operationId: getLocationsIdRooms
  /locations/{id}/rooms:
    get:
      operationId: getLocationsIdRooms
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          required: true
          schema:
            type: string
        - name: endDate
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
          links:
            reservation:
              operationId: postReservations
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /reservations:
    post:
      operationId: postReservations
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                type: string
          links:
            cancel:
              operationId: deleteReservationsId
            edit:
              operationId: putReservationsId
            payment:
              operationId: postReservationsId
  /reservations/{id}:
    put:
      operationId: putReservationsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      operationId: postReservationsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Created
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    delete:
      operationId: deleteReservationsId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    ErrorPayload:
      required:
        - message
        - method
        - path
        - reason
        - status
        - timestamp
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
          format: int64
        reason:
          type: string
        message:
          type: string
        path:
          type: string
        method:
          type: string
    Location:
      required:
        - address
        - id
        - name
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        address:
          type: string
    Room:
      required:
        - category
        - count
        - currency
        - id
        - price
        - status
        - wifi
      type: object
      properties:
        id:
          type: string
        category:
          type: string
        wifi:
          type: boolean
        status:
          type: string
        currency:
          type: string
        price:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
