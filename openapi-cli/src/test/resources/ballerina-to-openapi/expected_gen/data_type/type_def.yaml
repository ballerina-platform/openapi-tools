openapi: 3.0.1
info:
  title: PayloadV
  version: 0.0.0
servers:
  - url: "{server}:{port}/payloadV"
    variables:
      server:
        default: http://localhost
      port:
        default: "9090"
paths:
  /reservation:
    post:
      summary: Represents Snowpeak reservation resource
      operationId: postReservation
      requestBody:
        description: Reservation representation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link'
        required: true
      responses:
        "202":
          description: Accepted
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /reservation/{id}:
    get:
      operationId: getReservationId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PetId'
      responses:
        "202":
          description: Accepted
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    Action:
      type: string
      description: Adding doc
    Books:
      type: object
      additionalProperties:
        type: string
    Count:
      type: integer
      format: int64
    ErrorPayload:
      required:
        - message
        - method
        - path
        - reason
        - status
        - timestamp
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
          format: int64
        reason:
          type: string
        message:
          type: string
        path:
          type: string
        method:
          type: string
    Link:
      required:
        - count
        - price
        - rels
        - salary
      type: object
      properties:
        rels:
          $ref: '#/components/schemas/Rels'
        actions:
          $ref: '#/components/schemas/Action'
        count:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/Count'
        books:
          $ref: '#/components/schemas/Books'
        price:
          $ref: '#/components/schemas/Price'
        salary:
          $ref: '#/components/schemas/Salary'
      additionalProperties: false
    PetId:
      type: integer
      format: int64
    Price:
      oneOf:
        - type: number
          format: float
        - $ref: '#/components/schemas/PriceMap'
    PriceMap:
      required:
        - price
        - salary
      type: object
      properties:
        price:
          type: integer
          format: int64
        salary:
          type: number
          format: double
      additionalProperties: false
    Rels:
      type: array
      items:
        type: string
    Salary:
      oneOf:
        - type: integer
          format: int64
        - type: number
          format: float
        - type: number
          format: double
