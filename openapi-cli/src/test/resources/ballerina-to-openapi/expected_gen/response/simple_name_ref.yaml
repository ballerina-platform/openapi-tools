openapi: 3.0.1
info:
  title: PayloadV
  version: 0.0.0
servers:
  - url: "{server}:{port}/payloadV"
    variables:
      server:
        default: http://localhost
      port:
        default: "9090"
paths:
  /lift01:
    get:
      operationId: getLift01
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ReturnValueStr"
  /lift02:
    get:
      operationId: getLift02
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnValueIntNil"
  /lift03:
    get:
      operationId: getLift03
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnValueIntArray"
  /lift05:
    get:
      operationId: getLift05
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnValueMapJson"
  /lift06:
    get:
      operationId: getLift06
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnValueJson"
  /lift07:
    get:
      operationId: getLift07
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnValueMapRec"
  /lift08:
    get:
      operationId: getLift08
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnValueMapString"
  /lift09:
    get:
      operationId: getLift09
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/ReturnValueXML"
  /lift10:
    get:
      operationId: getLift10
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "500":
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /lift11:
    get:
      operationId: getLift11
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnValuePrimitiveUnion"
  /lift12:
    get:
      operationId: getLift12
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnValueRecUnion"
  /res13:
    get:
      operationId: getRes13
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "400":
          description: BadRequest
  /res14:
    get:
      operationId: getRes14
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "400":
          description: BadRequest
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResUnion"
  /res16:
    get:
      operationId: getRes16
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/StrNil"
  /res17:
    get:
      operationId: getRes17
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/StrArray"
  /res19:
    get:
      operationId: getRes19
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/octet-stream:
              schema:
                $ref: "#/components/schemas/ByteArr"
components:
  schemas:
    ReturnValueJson:
      type: object
    ReturnValueIntNil:
      type: integer
      format: int64
      nullable: true
    ReturnValueRecUnion:
      oneOf:
        - $ref: "#/components/schemas/Pet"
        - $ref: "#/components/schemas/Dog"
    ReturnValueIntArray:
      type: array
      items:
        type: integer
        format: int64
    StrArray:
      type: array
      items:
        type: string
    ReturnValueMapString:
      type: object
      additionalProperties:
        type: string
    ReturnValuePrimitiveUnion:
      oneOf:
        - type: number
          format: float
        - type: integer
          format: int64
    ReturnValueMapJson:
      type: object
      additionalProperties: true
    ReturnValueMapRec:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Pet"
    ReturnValueStr:
      type: string
    StrNil:
      type: string
      nullable: true
    Dog:
      required:
        - breed
        - isBark
      type: object
      properties:
        breed:
          type: string
        isBark:
          type: boolean
    Pet:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    ErrorResUnion:
      oneOf:
        - type: number
          format: float
        - type: integer
          format: int64
    ByteArr:
      type: array
      items: {}
    ReturnValueXML:
      type: object
