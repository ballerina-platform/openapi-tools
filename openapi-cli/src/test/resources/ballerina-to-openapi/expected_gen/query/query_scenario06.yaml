openapi: 3.0.1
info:
  title: PayloadV
  version: 0.0.0
servers:
  - url: "{server}:{port}/payloadV"
    variables:
      server:
        default: http://localhost
      port:
        default: "9090"
paths:
  /pets:
    get:
      operationId: getPets
      parameters:
        - name: pet
          in: query
          schema:
            type: string
            default: hello
      responses:
        "200":
          description: Ok
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /ping:
    get:
      operationId: getPing
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            format: int64
            default: 5
      responses:
        "200":
          description: Ok
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /ping02:
    get:
      operationId: getPing02
      parameters:
        - name: offset
          in: query
          schema:
            type: number
            format: double
            default: 100.08
      responses:
        "200":
          description: Ok
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /ping03:
    get:
      operationId: getPing03
      parameters:
        - name: offset
          in: query
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: Ok
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /ping04:
    get:
      operationId: getPing04
      parameters:
        - name: offset
          in: query
          schema:
            type: number
            format: float
            default: 100.08
      responses:
        "200":
          description: Ok
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /ping05:
    get:
      operationId: getPing05
      parameters:
        - name: offset
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
            default:
              - 2
              - 1
              - 3
              - 4
      responses:
        "200":
          description: Ok
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /ping06:
    get:
      operationId: getPing06
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        "200":
          description: Ok
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /ping07:
    get:
      operationId: getPing07
      parameters:
        - name: offset
          in: query
          content:
            application/json:
              schema:
                type: object
                nullable: true
                default:
                  x:
                    id: sss
      responses:
        "200":
          description: Ok
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /ping08:
    get:
      summary: Mock resource function
      operationId: getPing08
      parameters:
        - name: offset
          in: query
          description: Mock query parameter
          content:
            application/json:
              schema:
                type: object
                default:
                  x:
                    id: sss
      responses:
        "200":
          description: Ok
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    ErrorPayload:
      required:
        - message
        - method
        - path
        - reason
        - status
        - timestamp
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
          format: int64
        reason:
          type: string
        message:
          type: string
        path:
          type: string
        method:
          type: string
