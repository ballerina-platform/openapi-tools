/*
 * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

description = 'Ballerina - OpenAPI Extension Tests'
apply from: "$rootDir/gradle/javaProject.gradle"

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'


def ballerinaOpenApiModulePath = "${project.rootDir}/module-ballerina-openapi/"
def openApiExtensionJar = "${project.rootDir}/openapi-extension/build/libs/openapi-extension-${version}.jar"
def openApiServiceJar = "${project.rootDir}/ballerina-to-openapi/build/libs/ballerina-to-openapi-${version}.jar"
def ballerinaDistPath = "${ballerinaOpenApiModulePath}/build/target/extracted-distributions/jballerina-tools-zip/jballerina-tools-${ballerinaLangVersion}"
def ballerinaDist = "${buildDir}/target/ballerina-distribution"

dependencies {
    testImplementation group: 'org.ballerinalang', name: 'ballerina-lang', version: "${ballerinaLangVersion}"
    testImplementation group: 'org.ballerinalang', name: 'ballerina-tools-api', version: "${ballerinaLangVersion}"
    testImplementation group: 'org.ballerinalang', name: 'ballerina-parser', version: "${ballerinaLangVersion}"
    testRuntimeOnly group: 'commons-io', name: 'commons-io', version: "${commonsIoVersion}"
    testRuntimeOnly project(':ballerina-to-openapi')
    testRuntimeOnly project(':openapi-extension')
    testImplementation group: 'org.testng', name: 'testng', version: "${testngVersion}"
}

task copyDistribution(type: Copy) {
    from ballerinaDistPath
    into ballerinaDist
}


task copyPackageBala {
    doLast {
        copy {
            from "${ballerinaOpenApiModulePath}/build/cache_parent"
            into "${ballerinaDist}/repo"
            copy {
                into("bala/ballerina") {
                    from "bala/ballerina"
                }
            }
            copy {
                into("cache/ballerina/") {
                    from "cache/ballerina"
                }
            }
        }
    }
}

test {
    systemProperties =  [ jacocoAgentLine: "-javaagent:${configurations.jacocoRuntime.asPath}=destfile=${test.jacoco.destinationFile.absolutePath},append=true,inclnolocationclasses=true,exclclassloader=jdk.internal.reflect.DelegatingClassLoader" ,
                          "distributions.dir": ballerinaDistPath,
                          "target.dir": "$project.buildDir"
    ]

    useTestNG() {
        suites "src/test/resources/testng.xml"
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    def classFiles = new File("${rootDir}/openapi-extension/build/classes/java/main/io/ballerina/openapi/extension")
    additionalClassDirs(classFiles)
    reports {
        xml.required = true
        html.required = true
        csv.required = true
        xml.destination = new File("${buildDir}/reports/jacoco/report.xml")
        html.destination = new File("${buildDir}/reports/jacoco/report.html")
        csv.destination = new File("${buildDir}/reports/jacoco/report.csv")
    }
}
copyPackageBala.dependsOn copyDistribution
test.dependsOn copyPackageBala
copyDistribution.dependsOn(':module-ballerina-openapi:unpackJballerinaTools')
copyDistribution.dependsOn(':module-ballerina-openapi:copyStdlibs')
